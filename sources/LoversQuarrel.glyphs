{
.appVersion = "1342";
DisplayStrings = (
"!\"#$%&'()*+,-.//0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/backslash ]^`abcdefghijklmnopqrstuvwxyz{|}~/dagger o354°120¢/euro £§/bullet ¶ß®©Nhung/trademark ´¨ÆØ±2012¥/mu ªºæ¿¡¬/ellipsis/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/daggerdbl/quotesinglbase/quotedblbase/perthousand/circumflex/tilde ¯¸¦/minus ×¹²³½¼¾/RS/US/notequal/infinity/lessequal/greaterequal/partialdiff/pi/approxequal/lozenge/fraction/apple",
"/Ocircumflexacute",
"¥",
"¤"
);
classes = (
{
automatic = 1;
code = "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z AE Oslash Adieresis Aring Ccedilla Eacute Ntilde Odieresis Udieresis Agrave Atilde Otilde OE Ydieresis Acircumflex Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex Ograve Uacute Ugrave Ucircumflex Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adotbelow Ahookabove Amacron Aogonek Cacute Ccaron Eth Dcaron Dcroat Ecaron Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edotaccent Edotbelow Ehookabove Emacron Eogonek Etilde Gcommaaccent IJ Idotbelow Ihookabove Imacron Iogonek Itilde Jcircumflex Kcommaaccent Lacute Lcaron Lcommaaccent Ldotaccent Lslash Nacute Ncaron Ncommaaccent Eng Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odotbelow Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Omacron Thorn Racute Rcaron Rcommaaccent Sacute Scaron Scedilla Germandbls Tbar Tcaron Tcedilla Udotbelow Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Umacron Uogonek Uring Utilde Wacute Wcircumflex Wdieresis Wgrave Yacute Ycircumflex Ydotbelow Ygrave Yhookabove Ytilde Zacute Zcaron Zdotaccent Omega";
name = Uppercase;
}
);
copyright = "Copyright 2004 The Lovers Quarrel Project Authors (https://github.com/googlefonts/lovers-quarrel)";
customParameters = (
{
name = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
},
{
name = vendorID;
value = GOOG;
},
{
name = panose;
value = (
2,
0,
3,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
7,
31,
33,
35,
38,
45,
60,
62
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
NULL,
CR,
space,
nbspace,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
dagger,
degree,
cent,
sterling,
section,
bullet,
paragraph,
germandbls,
registered,
copyright,
trademark,
acute,
dieresis,
AE,
Oslash,
plusminus,
yen,
mu,
ordfeminine,
ordmasculine,
ae,
questiondown,
exclamdown,
logicalnot,
guillemotleft,
guillemotright,
ellipsis,
endash,
emdash,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
daggerdbl,
quotesinglbase,
quotedblbase,
perthousand,
circumflex,
tilde,
macron,
cedilla,
brokenbar,
minus,
multiply,
onesuperior,
twosuperior,
threesuperior,
onehalf,
onequarter,
threequarters,
RS,
US,
notequal,
infinity,
lessequal,
greaterequal,
partialdiff,
pi,
approxequal,
Delta,
lozenge,
fraction,
apple,
dotlessi,
breve,
dotaccent,
ring,
hungarumlaut,
ogonek,
caron,
_229,
divide,
Euro,
uni03A9,
periodcentered,
underscore,
guilsinglleft,
guilsinglright,
fi,
fl,
summation,
product,
integral,
oslash,
radical,
florin,
Adieresis,
Aring,
Ccedilla,
Eacute,
Ntilde,
Odieresis,
Udieresis,
aacute,
agrave,
acircumflex,
adieresis,
atilde,
aring,
ccedilla,
eacute,
egrave,
ecircumflex,
edieresis,
iacute,
igrave,
icircumflex,
idieresis,
oacute,
ntilde,
ograve,
ocircumflex,
odieresis,
otilde,
uacute,
ugrave,
ucircumflex,
udieresis,
Agrave,
Atilde,
Otilde,
OE,
oe,
ydieresis,
Ydieresis,
Acircumflex,
Ecircumflex,
Aacute,
Edieresis,
Egrave,
Iacute,
Icircumflex,
Idieresis,
Igrave,
Oacute,
Ocircumflex,
Ograve,
Uacute,
Ugrave,
Ucircumflex
);
},
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
}
);
},
{
name = "Use Typo Metrics";
value = 1;
}
);
date = "2021-05-14 04:00:25 +0000";
designer = "Robert E. Leuschke";
designerURL = "http://www.typesetit.com";
familyName = "Lovers Quarrel";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem latn dflt;\012languagesystem latn CAT;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;\012feature sups;\012feature frac;\012feature ordn;\012feature case;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];\012	@CombiningNonTopAccents = [cedillacomb dotbelowcomb ogonekcomb horncomb];\012	sub [i j]' @CombiningTopAccents by [idotless jdotless];\012	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];\012	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb circumflexcomb caroncomb brevecomb ringcomb tildecomb macroncomb hookabovecomb commaturnedabovecomb brevecomb_acutecomb brevecomb_gravecomb brevecomb_hookabovecomb brevecomb_tildecomb circumflexcomb_acutecomb circumflexcomb_gravecomb circumflexcomb_hookabovecomb circumflexcomb_tildecomb];\012	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case macroncomb.case hookabovecomb.case commaturnedabovecomb.case brevecomb_acutecomb.case brevecomb_gravecomb.case brevecomb_hookabovecomb.case brevecomb_tildecomb.case circumflexcomb_acutecomb.case circumflexcomb_gravecomb.case circumflexcomb_hookabovecomb.case circumflexcomb_tildecomb.case];\012	sub @Markscomb @Markscomb' by @MarkscombCase;\012	sub @Uppercase @Markscomb' by @MarkscombCase;\012} ccmp_Other_1;\012\012lookup ccmp_Other_2 {\012	sub @Markscomb' @MarkscombCase by @MarkscombCase;\012	sub @MarkscombCase @Markscomb' by @MarkscombCase;\012} ccmp_Other_2;\012\012lookup ccmp_latn_1 {\012	lookupflag 0;\012	sub brevecomb acutecomb by brevecomb_acutecomb;\012	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;\012	sub brevecomb gravecomb by brevecomb_gravecomb;\012	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;\012	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;\012	sub brevecomb.case hookabovecomb.case by brevecomb_hookabovecomb.case;\012	sub brevecomb tildecomb by brevecomb_tildecomb;\012	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;\012	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;\012	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;\012	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;\012	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;\012	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;\012	sub circumflexcomb.case hookabovecomb.case by circumflexcomb_hookabovecomb.case;\012	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;\012	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;\012} ccmp_latn_1;\012\012script latn;\012lookup ccmp_latn_1;\012";
name = ccmp;
},
{
automatic = 1;
code = "lookup locl_latn_0 {\012	script latn;\012	language CAT;\012	sub  l' periodcentered' l by ldot;\012} locl_latn_0;\012";
name = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
automatic = 1;
code = "sub dieresiscomb by dieresiscomb.case;\012sub dotaccentcomb by dotaccentcomb.case;\012sub gravecomb by gravecomb.case;\012sub acutecomb by acutecomb.case;\012sub hungarumlautcomb by hungarumlautcomb.case;\012sub circumflexcomb by circumflexcomb.case;\012sub caroncomb by caroncomb.case;\012sub brevecomb by brevecomb.case;\012sub ringcomb by ringcomb.case;\012sub tildecomb by tildecomb.case;\012sub macroncomb by macroncomb.case;\012sub hookabovecomb by hookabovecomb.case;\012sub commaturnedabovecomb by commaturnedabovecomb.case;\012sub brevecomb_acutecomb by brevecomb_acutecomb.case;\012sub brevecomb_gravecomb by brevecomb_gravecomb.case;\012sub brevecomb_hookabovecomb by brevecomb_hookabovecomb.case;\012sub brevecomb_tildecomb by brevecomb_tildecomb.case;\012sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;\012sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;\012sub circumflexcomb_hookabovecomb by circumflexcomb_hookabovecomb.case;\012sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;\012";
name = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
ascender = 953;
capHeight = 609;
customParameters = (
{
name = typoAscender;
value = 726;
},
{
name = typoDescender;
value = -401;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaAscender;
value = 726;
},
{
name = hheaDescender;
value = -401;
},
{
name = hheaLineGap;
value = 0;
},
{
name = winAscent;
value = 810;
},
{
name = winDescent;
value = 420;
},
{
name = strikeoutPosition;
value = 259;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0124 949 12 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\012950 149 128 99 78 47 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\012951 162 128 99 78 47 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\012952 86 71 55 40 24 0 18 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\012947 240 211 140 117 71 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\012948 275 211 175 117 71 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\012949 197 161 140 78 47 0 18 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\012953 4 17 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012946 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 43 values pushed */\01224 24 23 23 22 22 21 21 20 20 19 19 18 18 17 17 16 16 15 15 14 14 13 13 12 12 11 11 10 10 9 9 8 8 3 3 2 2 1 1 0 0 1 \012SCANTYPE[ ]	/* ScanType */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 4 70 0 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0127 6 70 0 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0124 4 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0126 6 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "NPUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012SROUND[ ]	/* SuperRound */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012SWAP[ ]	/* SwapTopStack */\012ROUND[00]	/* Round */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0123 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0123 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01211 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
-3,
204,
389,
415,
27,
21,
13,
28,
18,
37,
111,
124,
30,
374,
280,
231,
423,
329,
454,
400,
324,
367,
221,
189,
30,
-30433,
-8615,
-21166,
7596,
28924,
-17718,
-30460,
-16296,
11688,
26362,
-23094,
-32493,
-8878,
15793,
29656,
-7809,
-15521,
32510,
-3221,
-11482,
26333,
-6799,
-28421,
31454,
13394,
-21080,
4491,
15217,
-14310,
16580,
-18366,
-21212,
17794,
-31309,
-30889,
28408,
583,
-30418,
14047,
-27571,
-31978,
16052,
-24522,
659,
3252,
-6877,
26326,
21304,
-7075,
-31496,
11107,
-16634,
23528,
-15983,
9767,
18889,
-7558,
28150,
4230,
-17661,
18923,
-24891,
-11751,
5145,
17247,
9832,
-30554,
-14858,
9664,
29722,
21842,
-27998,
-5136,
16068,
30237,
18540,
-30549,
-31022,
31345,
-16807,
-3080,
31121,
24104,
-5161,
30843,
-6671,
-14896,
18792,
12982,
-25471,
-19345,
13568,
-10242,
696,
8746,
-14200,
4257,
12378,
-16141,
18542,
-2535,
-26631,
4502,
-4068,
25531,
3618,
-24884,
14974,
-7094,
-13693,
15574,
24917,
3594,
-16752,
24182,
-15389,
20900,
5146,
-17132,
-11556,
17535,
-3259,
-9456,
11858,
32422,
24212,
-3974,
27400,
1996,
-21214,
3446,
10483,
-15976,
20021,
-5143,
-8508,
322,
10499,
-9485,
31388,
-4842,
-11841,
24863,
-5328,
-30738,
13446,
-9692,
31167,
-7347,
-31087,
10687,
-12769,
25406,
736,
-25969,
5999,
-19190,
6583,
13639,
-24382,
22304,
-18613,
-10041,
17211,
-21721,
-15660,
24936,
-7954,
-30822,
3334,
-4695,
-25579,
4925,
-19761,
20555,
-17692,
-11650,
19473,
-1639,
8721,
18339,
-6870,
-31009,
112,
-17234,
9948,
-14259,
14026,
24496,
-15017,
27531,
21459,
-27693,
-15211,
-22994,
2144,
17840,
-23162,
-2096,
-10964,
4732,
27470,
-16738,
-2073,
-14298,
2157,
1548,
-1109,
15891,
29490,
-1569,
-8622,
27401,
-67,
25935,
17802,
-13658,
-19844,
7367,
13733,
-19130,
22456,
-32002,
-23664,
18518,
-28441,
-32629,
21565,
-2646,
-24744,
29420,
-6773,
-25049,
32482,
12419,
-18126,
8865,
-24823,
-26580,
18635,
-6286,
29457,
8185,
-17024,
25140,
3542,
-22967,
8679,
-12425,
26386,
1532,
-9518,
10282,
21034,
1388,
-7097,
-14697,
3047,
25649,
-18933,
-25789,
-11117,
11745,
32565,
18444,
-31137,
-14662,
18597,
14400,
-1878,
-20021,
14432,
-25541,
-22106,
15940,
-9242,
1059,
2905,
-2905,
-9584,
29308,
-2065,
-26161,
17225,
-7109,
-28935,
20152,
-2286,
26876,
879,
-14787,
32166,
2884,
-27930,
29987,
15172,
-18445,
23398,
-24248,
-26905,
26766,
-1255,
-25423,
5985,
-254,
-10524,
6621,
25385,
-16527,
-29112,
-13921,
2462,
11855,
-13078,
12455,
18484,
-8481,
29292,
-21285,
-15688,
29772,
-1313,
-30338,
6629,
-31285,
26163,
10079,
-13377,
16854,
320,
-17949,
25169,
1830,
-23878,
23391,
-14415,
17077,
27925,
763,
-22164,
28955,
763,
-31269,
12905,
-9239,
32412,
-8148,
-30224,
8854,
-25321,
-17928,
8291,
-31688,
-16947,
19028,
-8219,
64,
11825,
-15929,
28232,
-777,
29842,
4476,
-18930,
26759,
7460,
-583,
-29857,
246,
-31903,
10755,
-14970,
25960,
-6138,
-28938,
9111,
-14985,
22290,
-18514,
-8919,
29894,
-3288,
-1240,
-21394,
8025,
-20587,
-7451,
-13005,
7949,
29249,
-17519,
-2845,
-10701,
7946,
28509,
-20552,
-7773,
-27834,
20904,
-5943,
-32414,
17721,
-3932,
-26806,
736,
-4831,
-23973,
23457,
-31854,
-21122,
24081,
-12595,
10827,
23357,
-10245,
14266,
30291,
-3357,
-25699,
14373,
-20533,
21811,
-20355,
-10763,
16534,
-2462,
-10027,
32183,
6965,
-32051,
8265,
-29965,
-19501,
636,
-6922,
-26735,
6716,
-21802,
11860,
-28501,
-264,
-258,
-22088,
7027,
-27829,
-357,
12525,
807,
20087,
-22713,
-3947,
-11287,
6960,
21363,
-19626,
-519,
27804,
21886,
-7137,
-31564,
18695,
-782,
-28016,
3610,
-3841,
-16499,
10059,
-30740,
-20848,
16955,
-13597,
14245,
22343,
-11347,
15248,
27767,
-2030,
28083,
7480,
-13076,
27255,
283,
-30575,
27504,
9493,
-12928,
19767,
-21609,
-29037,
22607,
7979,
-16409,
-28889,
23407,
9807,
-7281,
-3185,
-23351,
2018,
-22468,
-6900,
-15014,
6036,
31464,
-19912,
-29942,
-8614,
6051,
26594,
-22495,
-6584,
-25617,
22991,
-11410,
-26341,
32150,
2893,
-24607,
14987,
-6834,
-21790,
21048,
-17285,
-10783,
22154,
-2188,
8754,
17364,
-6126,
12323,
31942,
7036,
-21731,
17849,
-219,
-11543,
17814,
-468,
-8471,
20638,
6409,
-32084,
32526,
11046,
-17723,
7488,
11954,
-23334,
8250,
-14245,
32766,
-24474,
-12536,
31700,
-31788,
-11118,
-27091,
6241,
30129,
-19065,
-30767,
-15059,
8829,
31567,
-20833,
-30746,
-10199,
14444,
30223,
-5206,
-12780,
25397,
2526,
-12691,
31496,
-4162,
-27316,
30101,
15015,
-23939,
3270,
9642,
-15035,
18361,
-19713,
-11375,
22615,
-32538,
-26752,
28963,
-3674,
-32763,
13872,
-11825,
29262,
-1872,
-9730,
20106,
-2031,
-24593,
16458,
-2012,
-26198,
15890,
-4826,
25513,
-4272,
-10822,
4490,
25066,
13996,
-3065,
13911,
7079,
21489,
-24117,
-5373,
-15277,
7585,
19701,
-17972,
-2529,
-10630,
22757,
2432,
-6038,
16651,
11168,
-4997,
-26138,
3460,
-21722,
5091,
7321,
-15257,
10960,
17340,
-6353,
27023,
20617,
-2949,
32441,
24316,
-11625,
-30712,
15551,
-23974,
2550,
13457,
-15823,
19899,
-20962,
-8177,
-30554,
4701,
-4419,
18904,
14407,
-18714,
17037,
-12435,
27924,
20896,
-702,
30197,
4475,
-17397,
22158,
-10896,
10846,
31134,
-32354,
-10536,
-27181,
5675,
31611,
-19635,
-32377,
-14121,
9255,
32117,
-21431,
-26224,
-10797,
13878,
30809,
-5636,
-13346,
24959,
2836,
-13401,
31058,
-4624,
-29830,
29535,
15597,
-23509,
2572,
9200,
-16229,
18755,
-20283,
-10841,
24077,
-16848,
-1856,
24641,
3814,
-23595,
28748,
-4122,
-25642,
16728,
-6640,
-28229,
1793,
-6350,
-32046,
10328,
-11288,
29044,
22806,
-7946,
21657,
14097,
-22338,
17697,
-9783,
32635,
24392,
-20067,
-12831,
-25945,
26640,
17006,
-28738,
-120,
-12862,
7962,
26730,
-24136,
-8052,
-12843,
532,
17011,
-13286,
-16967,
1121,
13568,
-18519,
6240,
11551,
-24141,
24377,
-16488,
-3952,
26734,
22217,
-73,
29528,
7558,
-15232,
26722,
576,
-13579,
20357,
14336,
-13405,
24350,
-13051,
-26960,
13659,
-18501,
4853,
12925,
-23266,
20698,
-17571,
-8689,
17853,
-6347,
-32047,
28027,
5211,
-24332,
17278,
-3047,
30852,
3374,
-30500,
29459,
23910,
-24184,
2234,
31370,
20170,
-667,
25372,
4522,
-2537,
-10057,
26834,
1135,
-31257,
8850,
-27279,
-1879,
22209,
15970,
-7966,
-28796,
9336,
-21237,
3461,
8493,
-25186,
-18879,
13540,
-12409,
16930,
-32051,
-21143,
4380,
12455,
-27847,
-17231,
25435,
1723,
-21548,
23619,
-1545,
11735,
23928,
-12830,
8650,
24163,
-4857,
25486,
-6619,
-28000,
16138,
-12232,
3791,
10062,
-14859,
19925,
-1668,
28950,
5779,
-25221,
11550,
-16499,
10558,
-9559,
29255,
-21263,
-8558,
29260,
-13339,
-18544,
22324,
-29720,
-25978,
32376,
-24412,
-28267,
-6667,
18842,
15363,
-8022,
-28856,
28615,
1673,
-17092,
21465,
-29577,
-23786,
24564,
-32681,
-19335,
5333,
12705,
-8389,
27799,
-19798,
-1004,
13415,
2992,
23966,
-32373,
-28302,
13607,
20661,
-3496,
26810,
16079,
-11699,
18915,
-19915,
-160,
-13148,
142,
22081,
-13457,
-23077,
3541,
8488,
-4534,
4170,
22571,
10459,
-20421,
13897,
-10300,
29797,
-23299,
-13347,
28018,
-1886,
13,
921,
20,
23,
20,
28,
37,
34,
64,
0,
0,
-247,
0,
271,
0,
609,
0
);
}
);
descender = -500;
guideLines = (
{
position = "{354, 339}";
},
{
position = "{354, 274}";
}
);
iconName = Light;
id = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
userData = {
GSOffsetHorizontal = 3;
GSOffsetProportional = 1;
GSOffsetVertical = 10;
};
weightValue = 400;
widthValue = 5;
xHeight = 274;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"438 0 LINE",
"438 600 LINE",
"63 600 LINE",
"63 0 LINE"
);
},
{
closed = 1;
nodes = (
"125 538 LINE",
"375 538 LINE",
"375 63 LINE",
"125 63 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */\0121 8 8 64 9 2 7 4 4 1 0 6 5 4 3 2 5 4 7 0 7 6 7 1 2 1 3 0 0 1 0 70 \012SROUND[ ]	/* SuperRound */\012MDAP[1]	/* MoveDirectAbsPt */\012SHZ[1]	/* ShiftZoneByLastPoint */\012RTG[ ]	/* RoundToGrid */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MIAP[1]	/* MoveIndirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SRP0[ ]	/* SetRefPoint0 */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SRP0[ ]	/* SetRefPoint0 */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012IUP[1]	/* InterpolateUntPts */\012IUP[0]	/* InterpolateUntPts */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SRP1[ ]	/* SetRefPoint1 */\012SHZ[1]	/* ShiftZoneByLastPoint */\012PUSHW[ ]	/* 2 values pushed */\0128 -64 \012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */";
};
width = 500;
}
);
note = .notdef;
},
{
glyphname = NULL;
lastChange = "2021-05-18 10:20:52 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 0;
}
);
note = NULL;
},
{
glyphname = CR;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
note = CR;
unicode = 000D;
},
{
glyphname = space;
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
note = space;
unicode = 0020;
},
{
glyphname = nbspace;
lastChange = "2021-05-14 05:33:35 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
widthMetricsKey = space;
note = nonbreakingspace;
unicode = 00A0;
},
{
glyphname = exclam;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"147.667 103 OFFCURVE",
"154.667 109 OFFCURVE",
"160 121 CURVE SMOOTH",
"182.667 181.667 OFFCURVE",
"259 312.333 OFFCURVE",
"389 513 CURVE SMOOTH",
"393 518.333 OFFCURVE",
"387 526 OFFCURVE",
"371 536 CURVE",
"363.667 542.667 OFFCURVE",
"356 546 OFFCURVE",
"348 546 CURVE SMOOTH",
"346 546 OFFCURVE",
"344.333 545.333 OFFCURVE",
"343 544 CURVE",
"247 384 OFFCURVE",
"175.667 246.333 OFFCURVE",
"129 125 CURVE SMOOTH",
"127.667 121 OFFCURVE",
"127 118 OFFCURVE",
"127 116 CURVE SMOOTH",
"127 107.333 OFFCURVE",
"131 103 OFFCURVE",
"139 103 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114.333 -20 OFFCURVE",
"125 -10.333 OFFCURVE",
"125 9 CURVE SMOOTH",
"125 29.667 OFFCURVE",
"114.333 40 OFFCURVE",
"93 40 CURVE SMOOTH",
"71.667 40 OFFCURVE",
"61 29.667 OFFCURVE",
"61 9 CURVE SMOOTH",
"61 -10.333 OFFCURVE",
"71.667 -20 OFFCURVE",
"93 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 952 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 17 22 17 38 17 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 17 69 17 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01223 19 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 277;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"139 277 LINE",
"159 326 LINE SMOOTH",
"165 340 OFFCURVE",
"170 352.333 OFFCURVE",
"174 363 CURVE SMOOTH",
"192 407.667 OFFCURVE",
"201 435.667 OFFCURVE",
"201 447 CURVE SMOOTH",
"201 460.333 OFFCURVE",
"194.667 467 OFFCURVE",
"182 467 CURVE SMOOTH",
"162 467 OFFCURVE",
"150.667 456.667 OFFCURVE",
"148 436 CURVE SMOOTH",
"129 277 LINE"
);
},
{
closed = 1;
nodes = (
"36 277 LINE",
"43.333 294.333 OFFCURVE",
"49.833 310.167 OFFCURVE",
"55.5 324.5 CURVE SMOOTH",
"71 363 LINE SMOOTH",
"88.333 407.667 OFFCURVE",
"97 436 OFFCURVE",
"97 448 CURVE SMOOTH",
"97 460.667 OFFCURVE",
"91 467 OFFCURVE",
"79 467 CURVE SMOOTH",
"63 467 OFFCURVE",
"46.333 451 OFFCURVE",
"45 435 CURVE SMOOTH",
"27 277 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 212;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"65 0 LINE",
"158 153 LINE",
"250 153 LINE",
"159 0 LINE",
"194 0 LINE",
"287 153 LINE",
"394 153 LINE",
"413 184 LINE",
"306 184 LINE",
"361 278 LINE",
"461 278 LINE",
"479 310 LINE",
"381 310 LINE",
"473 464 LINE",
"437 464 LINE",
"345 310 LINE",
"251 310 LINE",
"345 464 LINE",
"308 464 LINE",
"216 310 LINE",
"103 310 LINE",
"83 278 LINE",
"197 278 LINE",
"141 184 LINE",
"37 184 LINE",
"17 153 LINE",
"122 153 LINE",
"30 0 LINE"
);
},
{
closed = 1;
nodes = (
"233 278 LINE",
"325 278 LINE",
"269 184 LINE",
"176 184 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 197 values pushed */\0121 32 32 64 33 0 30 28 27 26 23 22 18 17 14 13 12 9 8 4 3 0 31 30 31 28 28 29 24 23 24 9 9 10 8 25 11 5 5 6 4 4 5 30 30 31 29 28 29 10 9 10 22 11 10 15 15 16 14 14 15 30 30 31 29 28 29 10 9 10 22 11 11 19 19 20 18 18 19 31 30 31 28 28 29 24 23 24 9 9 10 8 25 9 27 27 0 2 1 2 3 3 4 26 26 3 31 30 31 28 28 29 24 23 24 9 9 10 8 25 9 7 6 6 7 30 30 31 29 28 29 10 9 10 22 11 9 20 19 20 17 17 18 16 15 16 13 13 14 21 12 12 21 29 28 18 17 2 5 1 7 27 24 23 20 19 5 0 31 30 16 15 4 5 3 7 14 13 10 9 6 5 5 26 25 22 3 21 12 11 8 3 7 0 1 14 70 \012SROUND[ ]	/* SuperRound */\012MDAP[1]	/* MoveDirectAbsPt */\012SHZ[1]	/* ShiftZoneByLastPoint */\012RTG[ ]	/* RoundToGrid */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MIAP[1]	/* MoveIndirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012MIRP[11101]	/* MoveIndirectRelPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012MIRP[11101]	/* MoveIndirectRelPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SDPVTL[1]	/* SetDualPVectorToLine */\012MDAP[0]	/* MoveDirectAbsPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MIRP[11100]	/* MoveIndirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SDPVTL[1]	/* SetDualPVectorToLine */\012MDAP[0]	/* MoveDirectAbsPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MIRP[11100]	/* MoveIndirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SDPVTL[1]	/* SetDualPVectorToLine */\012MDAP[0]	/* MoveDirectAbsPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MIRP[11100]	/* MoveIndirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SDPVTL[1]	/* SetDualPVectorToLine */\012MDAP[0]	/* MoveDirectAbsPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MIRP[11100]	/* MoveIndirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SDPVTL[1]	/* SetDualPVectorToLine */\012MDAP[0]	/* MoveDirectAbsPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MIRP[11100]	/* MoveIndirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SDPVTL[1]	/* SetDualPVectorToLine */\012MDAP[0]	/* MoveDirectAbsPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MIRP[11100]	/* MoveIndirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTL[0]	/* SetFVectorToLine */\012MDRP[00100]	/* MoveDirectRelPt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012IUP[1]	/* InterpolateUntPts */\012IUP[0]	/* InterpolateUntPts */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 2 values pushed */\01214 32 \012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SRP1[ ]	/* SetRefPoint1 */\012SHZ[1]	/* ShiftZoneByLastPoint */\012PUSHW[ ]	/* 2 values pushed */\01232 -64 \012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */";
};
width = 497;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"37 -37 LINE",
"55 -1 LINE",
"97 -1 OFFCURVE",
"134.667 9.667 OFFCURVE",
"168 31 CURVE SMOOTH",
"206.667 55.667 OFFCURVE",
"226 88 OFFCURVE",
"226 128 CURVE SMOOTH",
"226 154 OFFCURVE",
"211 187 OFFCURVE",
"181 227 CURVE",
"259 368 LINE",
"283.667 363.333 OFFCURVE",
"297.667 350 OFFCURVE",
"301 328 CURVE",
"297.667 335.333 OFFCURVE",
"291 339 OFFCURVE",
"281 339 CURVE SMOOTH",
"260 339 OFFCURVE",
"251 328 OFFCURVE",
"251 307 CURVE SMOOTH",
"251 290 OFFCURVE",
"261 281 OFFCURVE",
"280 281 CURVE SMOOTH",
"302.667 281 OFFCURVE",
"317 301 OFFCURVE",
"317 325 CURVE SMOOTH",
"317 357 OFFCURVE",
"300.333 375.667 OFFCURVE",
"267 381 CURVE",
"289 422 LINE",
"268 418 LINE",
"249 383 LINE",
"213.667 383 OFFCURVE",
"182 375 OFFCURVE",
"154 359 CURVE SMOOTH",
"121.333 340.333 OFFCURVE",
"105 314 OFFCURVE",
"105 280 CURVE SMOOTH",
"105 256.667 OFFCURVE",
"118.333 228.333 OFFCURVE",
"145 195 CURVE",
"45 14 LINE",
"15.667 20 OFFCURVE",
"-8.333 32.333 OFFCURVE",
"-27 51 CURVE",
"-33 51 LINE",
"-40.333 43.667 OFFCURVE",
"-44.333 38.333 OFFCURVE",
"-45 35 CURVE",
"-32.333 19.667 OFFCURVE",
"-5 8 OFFCURVE",
"37 0 CURVE",
"14 -41 LINE"
);
},
{
closed = 1;
nodes = (
"157 181 LINE",
"175 157 OFFCURVE",
"184 135.333 OFFCURVE",
"184 116 CURVE SMOOTH",
"184 86 OFFCURVE",
"171.333 61 OFFCURVE",
"146 41 CURVE SMOOTH",
"120.667 21.667 OFFCURVE",
"93 12 OFFCURVE",
"63 12 CURVE"
);
},
{
closed = 1;
nodes = (
"155 267.667 OFFCURVE",
"147 286.333 OFFCURVE",
"147 297 CURVE SMOOTH",
"147 318.333 OFFCURVE",
"156.333 336.333 OFFCURVE",
"175 351 CURVE SMOOTH",
"192.333 364.333 OFFCURVE",
"211.667 371 OFFCURVE",
"233 371 CURVE SMOOTH",
"243 371 LINE",
"171 241 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 950 31 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 950 49 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 952 5 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 5 74 5 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 5 25 5 41 5 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0129 5 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01237 5 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 5 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 31 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 46 181 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01248 31 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012170 49 186 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01251 31 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0127 3 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 3 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01221 20 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 20 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 20 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 20 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01251 20 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01252 20 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 299;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"3 -56 LINE",
"413 441 LINE",
"413 443.667 OFFCURVE",
"410.333 445 OFFCURVE",
"405 445 CURVE SMOOTH",
"401.667 445 OFFCURVE",
"398.667 444.333 OFFCURVE",
"396 443 CURVE SMOOTH",
"392 441 OFFCURVE",
"374 422 OFFCURVE",
"342 386 CURVE SMOOTH",
"299.5 341 LINE SMOOTH",
"288.5 329.667 OFFCURVE",
"280.333 321.667 OFFCURVE",
"275 317 CURVE SMOOTH",
"235.667 287 OFFCURVE",
"206 272 OFFCURVE",
"186 272 CURVE SMOOTH",
"172.667 272 OFFCURVE",
"163.667 277.333 OFFCURVE",
"159 288 CURVE",
"176.333 304 OFFCURVE",
"193.333 327.333 OFFCURVE",
"208 358 CURVE SMOOTH",
"223.333 390 OFFCURVE",
"231 417 OFFCURVE",
"231 439 CURVE SMOOTH",
"231 472 OFFCURVE",
"214 488 OFFCURVE",
"180 488 CURVE SMOOTH",
"159 488 OFFCURVE",
"137 477 OFFCURVE",
"112 456 CURVE SMOOTH",
"64.667 412.667 OFFCURVE",
"41 365 OFFCURVE",
"41 313 CURVE SMOOTH",
"41 274 OFFCURVE",
"57 254 OFFCURVE",
"90 254 CURVE SMOOTH",
"107 254 OFFCURVE",
"126 262 OFFCURVE",
"146 277 CURVE",
"156 265.667 OFFCURVE",
"169 260 OFFCURVE",
"185 260 CURVE SMOOTH",
"213 260 OFFCURVE",
"248.333 278.333 OFFCURVE",
"291 315 CURVE",
"153.667 144.333 OFFCURVE",
"50 23 OFFCURVE",
"-22 -53 CURVE",
"-21 -56 LINE"
);
},
{
closed = 1;
nodes = (
"268 -19 OFFCURVE",
"300 3 OFFCURVE",
"331 47 CURVE SMOOTH",
"361 89 OFFCURVE",
"376 127.667 OFFCURVE",
"376 163 CURVE SMOOTH",
"376 197 OFFCURVE",
"359 214 OFFCURVE",
"325 214 CURVE SMOOTH",
"303 214 OFFCURVE",
"280 203 OFFCURVE",
"257 182 CURVE SMOOTH",
"209.667 138.667 OFFCURVE",
"186 91 OFFCURVE",
"186 39 CURVE SMOOTH",
"186 1 OFFCURVE",
"203 -19 OFFCURVE",
"236 -19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"231 -5 OFFCURVE",
"223 4.667 OFFCURVE",
"223 24 CURVE SMOOTH",
"223 44 OFFCURVE",
"230.667 71 OFFCURVE",
"246 105 CURVE SMOOTH",
"254.667 124.333 OFFCURVE",
"266.333 142.333 OFFCURVE",
"281 159 CURVE SMOOTH",
"299.667 181.667 OFFCURVE",
"317 193 OFFCURVE",
"333 193 CURVE SMOOTH",
"349.667 193 OFFCURVE",
"358 183 OFFCURVE",
"358 163 CURVE SMOOTH",
"358 147 OFFCURVE",
"353 126.667 OFFCURVE",
"343 102 CURVE SMOOTH",
"333.667 76.667 OFFCURVE",
"324.333 59 OFFCURVE",
"315 47 CURVE SMOOTH",
"287 12.333 OFFCURVE",
"264.333 -5 OFFCURVE",
"247 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86.333 269 OFFCURVE",
"79 278.667 OFFCURVE",
"79 298 CURVE SMOOTH",
"79 320 OFFCURVE",
"86.333 346.667 OFFCURVE",
"101 378 CURVE SMOOTH",
"109 396.667 OFFCURVE",
"120.667 415 OFFCURVE",
"136 433 CURVE SMOOTH",
"154.667 455 OFFCURVE",
"172.333 466 OFFCURVE",
"189 466 CURVE SMOOTH",
"205 466 OFFCURVE",
"213 456 OFFCURVE",
"213 436 CURVE SMOOTH",
"213 422.667 OFFCURVE",
"208.333 403 OFFCURVE",
"199 377 CURVE SMOOTH",
"190.333 353.667 OFFCURVE",
"180.667 334.667 OFFCURVE",
"170 320 CURVE",
"170.667 322 OFFCURVE",
"171 324.333 OFFCURVE",
"171 327 CURVE SMOOTH",
"171 340.333 OFFCURVE",
"164.333 347 OFFCURVE",
"151 347 CURVE SMOOTH",
"136 347 OFFCURVE",
"129 337 OFFCURVE",
"129 316 CURVE SMOOTH",
"129 306 OFFCURVE",
"132 296 OFFCURVE",
"139 286 CURVE",
"124.333 274.667 OFFCURVE",
"111.667 269 OFFCURVE",
"101 269 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01256 950 14 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 950 46 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 46 186 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 46 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 56 181 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01268 14 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01218 947 50 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01264 12 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 948 76 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0126 12 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01268 12 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 414;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"227 -223 OFFCURVE",
"277 -146 OFFCURVE",
"299 6 CURVE",
"371 24.667 OFFCURVE",
"428.333 64.333 OFFCURVE",
"471 125 CURVE SMOOTH",
"498 163 OFFCURVE",
"512 197 OFFCURVE",
"512 227 CURVE SMOOTH",
"512 274 OFFCURVE",
"481 299 OFFCURVE",
"422 299 CURVE SMOOTH",
"387 299 OFFCURVE",
"352 288 OFFCURVE",
"316 266 CURVE",
"323 354 LINE SMOOTH",
"325 376.667 OFFCURVE",
"327.333 393.333 OFFCURVE",
"330 404 CURVE",
"386 438.667 OFFCURVE",
"412.333 471.333 OFFCURVE",
"409 502 CURVE SMOOTH",
"405 521 OFFCURVE",
"396 530 OFFCURVE",
"382 530 CURVE SMOOTH",
"370 530 OFFCURVE",
"359 522 OFFCURVE",
"347 507 CURVE SMOOTH",
"339 497.667 OFFCURVE",
"331.333 481.333 OFFCURVE",
"324 458 CURVE SMOOTH",
"321.333 448 OFFCURVE",
"317.333 429.333 OFFCURVE",
"312 402 CURVE",
"170 326 LINE SMOOTH",
"116.667 296.667 OFFCURVE",
"75.333 264 OFFCURVE",
"42 228 CURVE SMOOTH",
"2 185 OFFCURVE",
"-18 145 OFFCURVE",
"-18 110 CURVE SMOOTH",
"-18 69 OFFCURVE",
"5 37 OFFCURVE",
"50 15 CURVE SMOOTH",
"78.667 1 OFFCURVE",
"111.667 -8 OFFCURVE",
"149 -12 CURVE SMOOTH",
"159 -13 OFFCURVE",
"170 -13 OFFCURVE",
"181 -13 CURVE SMOOTH",
"207 -13 OFFCURVE",
"234 -11 OFFCURVE",
"262 -6 CURVE",
"234 -142 OFFCURVE",
"192 -209 OFFCURVE",
"136 -209 CURVE SMOOTH",
"100 -209 OFFCURVE",
"79 -191 OFFCURVE",
"70 -158 CURVE SMOOTH",
"69.333 -156 OFFCURVE",
"68 -154.667 OFFCURVE",
"66 -154 CURVE",
"64.667 -155.333 OFFCURVE",
"64 -156.667 OFFCURVE",
"64 -158 CURVE SMOOTH",
"66 -176.667 OFFCURVE",
"75.333 -192 OFFCURVE",
"92 -204 CURVE SMOOTH",
"109 -216 OFFCURVE",
"129 -223 OFFCURVE",
"151 -223 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"157 3 OFFCURVE",
"121 12 OFFCURVE",
"89 29 CURVE SMOOTH",
"50 49 OFFCURVE",
"30 78 OFFCURVE",
"30 115 CURVE SMOOTH",
"30 156 OFFCURVE",
"54 201 OFFCURVE",
"102 249 CURVE SMOOTH",
"134.667 283 OFFCURVE",
"169 311.333 OFFCURVE",
"205 334 CURVE SMOOTH",
"251 360 OFFCURVE",
"286 379 OFFCURVE",
"310 391 CURVE",
"303.333 356.333 OFFCURVE",
"299.333 313.333 OFFCURVE",
"294 260 CURVE",
"238.667 229.333 OFFCURVE",
"202.333 193.333 OFFCURVE",
"185 152 CURVE SMOOTH",
"181 142 OFFCURVE",
"179 133 OFFCURVE",
"179 125 CURVE SMOOTH",
"179 115 OFFCURVE",
"182 106 OFFCURVE",
"187 98 CURVE",
"189 96 OFFCURVE",
"191.333 95 OFFCURVE",
"194 95 CURVE SMOOTH",
"196.667 95 OFFCURVE",
"197 96 OFFCURVE",
"195 98 CURVE SMOOTH",
"189 105 OFFCURVE",
"187 113 OFFCURVE",
"187 122 CURVE SMOOTH",
"187 130 OFFCURVE",
"188 139 OFFCURVE",
"192 148 CURVE SMOOTH",
"204.667 182 OFFCURVE",
"238 212.667 OFFCURVE",
"292 240 CURVE",
"281.333 130.667 OFFCURVE",
"272.333 53.333 OFFCURVE",
"263 8 CURVE",
"243 4 OFFCURVE",
"223 3 OFFCURVE",
"204 3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"151 -185 OFFCURVE",
"153 -185 OFFCURVE",
"155 -183 CURVE SMOOTH",
"169.667 -166.333 OFFCURVE",
"185.667 -132 OFFCURVE",
"203 -80 CURVE SMOOTH",
"223 -18.667 OFFCURVE",
"237.333 47.333 OFFCURVE",
"244 122 CURVE SMOOTH",
"254 212.667 OFFCURVE",
"259 278.667 OFFCURVE",
"259 320 CURVE SMOOTH",
"259 381.333 OFFCURVE",
"250.667 432.667 OFFCURVE",
"234 474 CURVE SMOOTH",
"214.667 525.333 OFFCURVE",
"182.667 551 OFFCURVE",
"138 551 CURVE SMOOTH",
"88.667 551 OFFCURVE",
"48 512 OFFCURVE",
"48 456 CURVE SMOOTH",
"48 422.667 OFFCURVE",
"61 387.667 OFFCURVE",
"87 351 CURVE SMOOTH",
"121 302.333 OFFCURVE",
"168.667 278 OFFCURVE",
"230 278 CURVE SMOOTH",
"274.667 278 OFFCURVE",
"317.333 290.667 OFFCURVE",
"358 316 CURVE SMOOTH",
"398.667 342 OFFCURVE",
"424 372 OFFCURVE",
"434 406 CURVE SMOOTH",
"435 409 OFFCURVE",
"433 411 OFFCURVE",
"430 411 CURVE SMOOTH",
"428 411 OFFCURVE",
"427 410 OFFCURVE",
"426 408 CURVE SMOOTH",
"416.667 374.667 OFFCURVE",
"393.333 346.333 OFFCURVE",
"356 323 CURVE SMOOTH",
"319.333 300.333 OFFCURVE",
"279.667 289 OFFCURVE",
"237 289 CURVE SMOOTH",
"177.667 289 OFFCURVE",
"131.333 311.667 OFFCURVE",
"98 357 CURVE SMOOTH",
"72.667 392.333 OFFCURVE",
"60 426 OFFCURVE",
"60 458 CURVE SMOOTH",
"60 507.333 OFFCURVE",
"93 543 OFFCURVE",
"133 543 CURVE SMOOTH",
"169.667 543 OFFCURVE",
"197.667 518.333 OFFCURVE",
"217 469 CURVE SMOOTH",
"234.333 425 OFFCURVE",
"243 363 OFFCURVE",
"243 283 CURVE SMOOTH",
"243 233.667 OFFCURVE",
"239.667 182 OFFCURVE",
"233 122 CURVE SMOOTH",
"225.667 47.333 OFFCURVE",
"212.667 -19.333 OFFCURVE",
"194 -78 CURVE SMOOTH",
"179.333 -128.667 OFFCURVE",
"164.333 -162 OFFCURVE",
"149 -178 CURVE SMOOTH",
"147 -180 OFFCURVE",
"147 -181.667 OFFCURVE",
"149 -183 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307.667 119.667 OFFCURVE",
"312.667 196.333 OFFCURVE",
"314 249 CURVE",
"340 263 OFFCURVE",
"367 270 OFFCURVE",
"396 270 CURVE SMOOTH",
"455 270 OFFCURVE",
"486 248 OFFCURVE",
"486 206 CURVE SMOOTH",
"486 181 OFFCURVE",
"474 152 OFFCURVE",
"450 118 CURVE SMOOTH",
"416 68.667 OFFCURVE",
"365.667 35.667 OFFCURVE",
"299 19 CURVE"
);
},
{
closed = 1;
nodes = (
"343.667 453.667 OFFCURVE",
"354.667 479.667 OFFCURVE",
"366 493 CURVE SMOOTH",
"375.333 502.333 OFFCURVE",
"382.333 507 OFFCURVE",
"387 507 CURVE",
"392 506 OFFCURVE",
"395 502 OFFCURVE",
"395 495 CURVE SMOOTH",
"395 485 OFFCURVE",
"387 470 OFFCURVE",
"371 451 CURVE SMOOTH",
"356.333 433.667 OFFCURVE",
"343.667 421.667 OFFCURVE",
"333 415 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012141 134 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 141 118 141 134 141 150 141 166 141 182 141 198 141 214 141 230 141 246 141 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 141 22 141 38 141 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 141 69 141 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012107 134 141 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\01258 107 74 107 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 107 121 107 137 107 153 107 169 107 185 107 201 107 217 107 233 107 249 107 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 107 25 107 41 107 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01213 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01231 134 141 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012141 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01235 141 68 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01264 107 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01271 107 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 134 141 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012107 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012137 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 476;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"77 223 OFFCURVE",
"84.667 226 OFFCURVE",
"96 232 CURVE SMOOTH",
"113.333 241.333 OFFCURVE",
"130.667 258.667 OFFCURVE",
"152 284 CURVE SMOOTH",
"175.333 313.333 OFFCURVE",
"186 335 OFFCURVE",
"184 349 CURVE SMOOTH",
"181 369 OFFCURVE",
"171 377 OFFCURVE",
"155 377 CURVE SMOOTH",
"130 377 OFFCURVE",
"117 366 OFFCURVE",
"117 344 CURVE SMOOTH",
"117 326.667 OFFCURVE",
"122.333 317.667 OFFCURVE",
"133 317 CURVE",
"118.333 290.333 OFFCURVE",
"101.667 266.333 OFFCURVE",
"83 245 CURVE SMOOTH",
"75 235.667 OFFCURVE",
"71 229 OFFCURVE",
"71 225 CURVE SMOOTH",
"71 223.667 OFFCURVE",
"71.667 223 OFFCURVE",
"73 223 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01214 7 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 145;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"99.667 -89 OFFCURVE",
"103 -85.667 OFFCURVE",
"103 -79 CURVE SMOOTH",
"103 -74.333 OFFCURVE",
"101.667 -70.333 OFFCURVE",
"99 -67 CURVE SMOOTH",
"85.667 -48.333 OFFCURVE",
"79 9 OFFCURVE",
"79 105 CURVE SMOOTH",
"79 195.667 OFFCURVE",
"114 288 OFFCURVE",
"184 382 CURVE SMOOTH",
"250 470 OFFCURVE",
"324.333 531 OFFCURVE",
"407 565 CURVE",
"407 578.333 OFFCURVE",
"401.667 585 OFFCURVE",
"391 585 CURVE SMOOTH",
"380.333 585 OFFCURVE",
"361.667 576.667 OFFCURVE",
"335 560 CURVE SMOOTH",
"239 500 OFFCURVE",
"167.667 436 OFFCURVE",
"121 368 CURVE SMOOTH",
"67 288.667 OFFCURVE",
"40 197.667 OFFCURVE",
"40 95 CURVE SMOOTH",
"40 68.333 OFFCURVE",
"43 37 OFFCURVE",
"49 1 CURVE SMOOTH",
"59.667 -59 OFFCURVE",
"74.333 -89 OFFCURVE",
"93 -89 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 950 14 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 4 181 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 353;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"33.667 -94 OFFCURVE",
"52.333 -85.667 OFFCURVE",
"79 -69 CURVE SMOOTH",
"173.667 -10.333 OFFCURVE",
"244.667 53.667 OFFCURVE",
"292 123 CURVE SMOOTH",
"346 201.667 OFFCURVE",
"373 293 OFFCURVE",
"373 397 CURVE SMOOTH",
"373 423.667 OFFCURVE",
"369.667 454.667 OFFCURVE",
"363 490 CURVE SMOOTH",
"352.333 550.667 OFFCURVE",
"337.667 581 OFFCURVE",
"319 581 CURVE SMOOTH",
"311.667 581 OFFCURVE",
"308 577.667 OFFCURVE",
"308 571 CURVE SMOOTH",
"308 567 OFFCURVE",
"309.667 562.333 OFFCURVE",
"313 557 CURVE SMOOTH",
"326.333 539.667 OFFCURVE",
"333 482.333 OFFCURVE",
"333 385 CURVE SMOOTH",
"333 297 OFFCURVE",
"299.333 206.333 OFFCURVE",
"232 113 CURVE SMOOTH",
"166.667 22.333 OFFCURVE",
"91.667 -40.333 OFFCURVE",
"7 -75 CURVE",
"7 -87.667 OFFCURVE",
"12.333 -94 OFFCURVE",
"23 -94 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 950 12 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 12 186 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 411;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"58.667 141 OFFCURVE",
"61.667 142 OFFCURVE",
"65 144 CURVE",
"137 223 LINE",
"141.667 213 OFFCURVE",
"145.5 204.333 OFFCURVE",
"148.5 197 CURVE SMOOTH",
"157 178 LINE SMOOTH",
"167.667 153.333 OFFCURVE",
"175.667 141 OFFCURVE",
"181 141 CURVE SMOOTH",
"191.667 141 OFFCURVE",
"197 147.667 OFFCURVE",
"197 161 CURVE SMOOTH",
"197 163 OFFCURVE",
"196.667 164.333 OFFCURVE",
"196 165 CURVE",
"161 235 LINE",
"249 238 LINE SMOOTH",
"263.667 238.667 OFFCURVE",
"271 243.667 OFFCURVE",
"271 253 CURVE SMOOTH",
"271 257 OFFCURVE",
"267.667 259 OFFCURVE",
"261 259 CURVE SMOOTH",
"171 259 LINE",
"227 321 LINE SMOOTH",
"233.667 327.667 OFFCURVE",
"237 334.333 OFFCURVE",
"237 341 CURVE SMOOTH",
"237 346.333 OFFCURVE",
"235 349 OFFCURVE",
"231 349 CURVE SMOOTH",
"228.333 349 OFFCURVE",
"225.667 347.667 OFFCURVE",
"223 345 CURVE SMOOTH",
"145 267 LINE",
"106 343 LINE SMOOTH",
"100.667 352.333 OFFCURVE",
"94.667 357 OFFCURVE",
"88 357 CURVE SMOOTH",
"83.333 357 OFFCURVE",
"81 354.667 OFFCURVE",
"81 350 CURVE",
"83 343 LINE",
"93.667 320.333 OFFCURVE",
"106.333 293.667 OFFCURVE",
"121 259 CURVE",
"25 259 LINE SMOOTH",
"15.667 259 OFFCURVE",
"11 255 OFFCURVE",
"11 247 CURVE SMOOTH",
"11 235 OFFCURVE",
"15.333 229 OFFCURVE",
"24 229 CURVE SMOOTH",
"112 233 LINE",
"45 165 LINE SMOOTH",
"41 161 OFFCURVE",
"39 157.333 OFFCURVE",
"39 154 CURVE SMOOTH",
"39 145.333 OFFCURVE",
"44.667 141 OFFCURVE",
"56 141 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01247 10 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 949 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0125 10 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01215 10 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 287;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"192.333 34 OFFCURVE",
"199.667 37.667 OFFCURVE",
"201 45 CURVE SMOOTH",
"209.5 97 LINE SMOOTH",
"211.833 112.333 OFFCURVE",
"214.333 125.667 OFFCURVE",
"217 137 CURVE",
"245 137 LINE SMOOTH",
"254.333 137 OFFCURVE",
"263.667 137.333 OFFCURVE",
"273 138 CURVE SMOOTH",
"303.667 138.667 OFFCURVE",
"319 142.333 OFFCURVE",
"319 149 CURVE SMOOTH",
"319 155.667 OFFCURVE",
"315 159 OFFCURVE",
"307 159 CURVE SMOOTH",
"221 159 LINE",
"229 205.667 OFFCURVE",
"235.667 240.333 OFFCURVE",
"241 259 CURVE SMOOTH",
"243 266.333 OFFCURVE",
"241.333 270 OFFCURVE",
"236 270 CURVE SMOOTH",
"228.667 270 OFFCURVE",
"224 265.333 OFFCURVE",
"222 256 CURVE SMOOTH",
"199 159 LINE",
"193.667 159 OFFCURVE",
"187.167 159 OFFCURVE",
"179.5 159 CURVE SMOOTH",
"152 160 LINE SMOOTH",
"141.333 160.667 OFFCURVE",
"132.333 161 OFFCURVE",
"125 161 CURVE SMOOTH",
"106 161 LINE SMOOTH",
"96 161 OFFCURVE",
"91 155 OFFCURVE",
"91 143 CURVE SMOOTH",
"91 133.667 OFFCURVE",
"93.333 129 OFFCURVE",
"98 129 CURVE SMOOTH",
"130.667 131.667 OFFCURVE",
"162 133.667 OFFCURVE",
"192 135 CURVE",
"169 45 LINE SMOOTH",
"167.667 37.667 OFFCURVE",
"171 34 OFFCURVE",
"179 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01230 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01224 947 15 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 305;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"22 -103 OFFCURVE",
"29.333 -99.667 OFFCURVE",
"40 -93 CURVE SMOOTH",
"56 -83.667 OFFCURVE",
"74.667 -66.333 OFFCURVE",
"96 -41 CURVE SMOOTH",
"117 -15 OFFCURVE",
"128 6 OFFCURVE",
"128 20 CURVE SMOOTH",
"128 42 OFFCURVE",
"118 52 OFFCURVE",
"100 52 CURVE SMOOTH",
"80 52 OFFCURVE",
"61 38 OFFCURVE",
"61 19 CURVE SMOOTH",
"61 2.333 OFFCURVE",
"67 -7 OFFCURVE",
"79 -9 CURVE",
"45 -56 LINE SMOOTH",
"25 -83.333 OFFCURVE",
"15 -98.333 OFFCURVE",
"15 -101 CURVE SMOOTH",
"15 -102.333 OFFCURVE",
"16 -103 OFFCURVE",
"18 -103 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 155;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"45 112 OFFCURVE",
"47 112 OFFCURVE",
"49 112 CURVE SMOOTH",
"85.667 114.667 OFFCURVE",
"117.667 117.167 OFFCURVE",
"145 119.5 CURVE SMOOTH",
"213 125 LINE SMOOTH",
"233 125.667 OFFCURVE",
"243 128.667 OFFCURVE",
"243 134 CURVE SMOOTH",
"243 139.333 OFFCURVE",
"233 143 OFFCURVE",
"213 145 CURVE SMOOTH",
"163.667 151 OFFCURVE",
"129.333 154 OFFCURVE",
"110 154 CURVE SMOOTH",
"88.667 154 OFFCURVE",
"72 152 OFFCURVE",
"60 148 CURVE SMOOTH",
"34 138.667 OFFCURVE",
"21 129.333 OFFCURVE",
"21 120 CURVE SMOOTH",
"21 115 OFFCURVE",
"29 112 OFFCURVE",
"44 112 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0129 949 3 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 253;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = period;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"114.333 -20 OFFCURVE",
"125 -10.333 OFFCURVE",
"125 9 CURVE SMOOTH",
"125 29.667 OFFCURVE",
"114.333 40 OFFCURVE",
"93 40 CURVE SMOOTH",
"71.667 40 OFFCURVE",
"61 29.667 OFFCURVE",
"61 9 CURVE SMOOTH",
"61 -10.333 OFFCURVE",
"71.667 -20 OFFCURVE",
"93 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 952 4 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 0 22 0 38 0 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 0 69 0 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0126 2 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 160;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"20 -27 OFFCURVE",
"23.667 -25.333 OFFCURVE",
"29 -22 CURVE SMOOTH",
"75.667 8.667 OFFCURVE",
"135 71.667 OFFCURVE",
"211 169 CURVE SMOOTH",
"295 277 OFFCURVE",
"357 353 OFFCURVE",
"397 397 CURVE SMOOTH",
"464.333 470.333 OFFCURVE",
"511.667 507 OFFCURVE",
"539 507 CURVE SMOOTH",
"543.667 507 OFFCURVE",
"549.167 505.5 OFFCURVE",
"555.5 502.5 CURVE SMOOTH",
"561.833 499.5 OFFCURVE",
"566 498 OFFCURVE",
"568 498 CURVE SMOOTH",
"571.333 498 OFFCURVE",
"573 499.667 OFFCURVE",
"573 503 CURVE SMOOTH",
"573 508.333 OFFCURVE",
"569.667 513 OFFCURVE",
"563 517 CURVE SMOOTH",
"551.667 523.667 OFFCURVE",
"539 527 OFFCURVE",
"525 527 CURVE SMOOTH",
"491.667 527 OFFCURVE",
"455 503.667 OFFCURVE",
"403 449 CURVE SMOOTH",
"351 394.333 OFFCURVE",
"283.667 309 OFFCURVE",
"189 185 CURVE",
"159 151 OFFCURVE",
"131.167 116.833 OFFCURVE",
"105.5 82.5 CURVE SMOOTH",
"79.833 48.167 OFFCURVE",
"51 16.333 OFFCURVE",
"19 -13 CURVE SMOOTH",
"15 -16.333 OFFCURVE",
"13 -19.667 OFFCURVE",
"13 -23 CURVE SMOOTH",
"13 -25.667 OFFCURVE",
"14.667 -27 OFFCURVE",
"18 -27 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01228 948 7 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 365;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"214 -29 OFFCURVE",
"263 -17 OFFCURVE",
"316 7 CURVE SMOOTH",
"386 37.667 OFFCURVE",
"442 76.667 OFFCURVE",
"484 124 CURVE SMOOTH",
"526 170.667 OFFCURVE",
"547 217.667 OFFCURVE",
"547 265 CURVE SMOOTH",
"547 335.667 OFFCURVE",
"499.333 369 OFFCURVE",
"404 365 CURVE SMOOTH",
"354.667 364.333 OFFCURVE",
"302.333 348.333 OFFCURVE",
"247 317 CURVE SMOOTH",
"204 293 OFFCURVE",
"184 275 OFFCURVE",
"184 264 CURVE SMOOTH",
"184 259 OFFCURVE",
"188 257 OFFCURVE",
"194 257 CURVE SMOOTH",
"196.667 257 OFFCURVE",
"198.667 258 OFFCURVE",
"200 260 CURVE",
"260 310.667 OFFCURVE",
"326.667 339.667 OFFCURVE",
"400 347 CURVE SMOOTH",
"475.333 353 OFFCURVE",
"513 329.333 OFFCURVE",
"513 276 CURVE SMOOTH",
"513 249.333 OFFCURVE",
"503.333 219.333 OFFCURVE",
"484 186 CURVE SMOOTH",
"466 156.667 OFFCURVE",
"445.667 132 OFFCURVE",
"423 112 CURVE SMOOTH",
"333.667 31.333 OFFCURVE",
"246.333 -9 OFFCURVE",
"161 -9 CURVE SMOOTH",
"78.333 -9 OFFCURVE",
"37 25.333 OFFCURVE",
"37 94 CURVE SMOOTH",
"37 128.667 OFFCURVE",
"47.667 165.333 OFFCURVE",
"69 204 CURVE SMOOTH",
"107.667 273.333 OFFCURVE",
"163 326 OFFCURVE",
"263 362 CURVE SMOOTH",
"307.667 378 OFFCURVE",
"353 388 OFFCURVE",
"399 392 CURVE SMOOTH",
"407 392.667 OFFCURVE",
"411 395.333 OFFCURVE",
"411 400 CURVE SMOOTH",
"411 405.333 OFFCURVE",
"400.333 408 OFFCURVE",
"379 408 CURVE SMOOTH",
"336.333 408 OFFCURVE",
"285.667 396 OFFCURVE",
"227 372 CURVE SMOOTH",
"104.333 322.667 OFFCURVE",
"31.667 251.667 OFFCURVE",
"9 159 CURVE SMOOTH",
"5 143 OFFCURVE",
"3 127.333 OFFCURVE",
"3 112 CURVE SMOOTH",
"3 67.333 OFFCURVE",
"19 32.667 OFFCURVE",
"51 8 CURVE SMOOTH",
"81 -17 OFFCURVE",
"120 -29 OFFCURVE",
"168 -29 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01223 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 23 181 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012170 31 186 31 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01225 948 2 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01212 33 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 547;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"55.667 -7 OFFCURVE",
"60.333 -4.667 OFFCURVE",
"61 0 CURVE",
"87.667 68 OFFCURVE",
"124.667 142.333 OFFCURVE",
"170 225 CURVE SMOOTH",
"209.333 297 OFFCURVE",
"243 351.333 OFFCURVE",
"271 388 CURVE",
"271 391 LINE SMOOTH",
"271 403 OFFCURVE",
"255.667 413 OFFCURVE",
"245 413 CURVE SMOOTH",
"241.667 413 OFFCURVE",
"239 412.667 OFFCURVE",
"237 412 CURVE",
"115 292 LINE SMOOTH",
"107 284 OFFCURVE",
"103 278.333 OFFCURVE",
"103 275 CURVE SMOOTH",
"103 272.333 OFFCURVE",
"104 271 OFFCURVE",
"106 271 CURVE SMOOTH",
"108 271 OFFCURVE",
"111.667 273 OFFCURVE",
"117 277 CURVE SMOOTH",
"135.667 294.333 OFFCURVE",
"156.333 310 OFFCURVE",
"179 324 CURVE",
"160.333 274.667 OFFCURVE",
"138.667 222 OFFCURVE",
"112 166 CURVE SMOOTH",
"38 11 LINE SMOOTH",
"36.667 7 OFFCURVE",
"36 4.333 OFFCURVE",
"36 3 CURVE SMOOTH",
"36 -3.667 OFFCURVE",
"39.667 -7 OFFCURVE",
"47 -7 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01217 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01215 7 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 244;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"281 -34 OFFCURVE",
"283 -34 OFFCURVE",
"285 -33 CURVE SMOOTH",
"300 -27 OFFCURVE",
"309 -15 OFFCURVE",
"309 2 CURVE SMOOTH",
"309 37 OFFCURVE",
"247 55 OFFCURVE",
"123 55 CURVE",
"132.333 64.333 OFFCURVE",
"162.333 85.667 OFFCURVE",
"213 119 CURVE SMOOTH",
"262 149.5 LINE SMOOTH",
"276 158.5 OFFCURVE",
"287.667 165.667 OFFCURVE",
"297 171 CURVE SMOOTH",
"379 221.667 OFFCURVE",
"420 275 OFFCURVE",
"420 331 CURVE SMOOTH",
"420 377.667 OFFCURVE",
"389.667 407 OFFCURVE",
"343 407 CURVE SMOOTH",
"295.667 407 OFFCURVE",
"252.667 392.333 OFFCURVE",
"214 363 CURVE SMOOTH",
"176 333.667 OFFCURVE",
"152.667 297.667 OFFCURVE",
"144 255 CURVE SMOOTH",
"143.333 253 OFFCURVE",
"143 251 OFFCURVE",
"143 249 CURVE SMOOTH",
"143 245.667 OFFCURVE",
"144 244 OFFCURVE",
"146 244 CURVE SMOOTH",
"150 244 OFFCURVE",
"153 247 OFFCURVE",
"155 253 CURVE SMOOTH",
"166.333 286.333 OFFCURVE",
"193 317.333 OFFCURVE",
"235 346 CURVE SMOOTH",
"278.333 375.333 OFFCURVE",
"317 390 OFFCURVE",
"351 390 CURVE SMOOTH",
"382.333 390 OFFCURVE",
"398 376.667 OFFCURVE",
"398 350 CURVE SMOOTH",
"398 314.667 OFFCURVE",
"372.333 272 OFFCURVE",
"321 222 CURVE SMOOTH",
"287 188.667 OFFCURVE",
"247 156.667 OFFCURVE",
"201 126 CURVE SMOOTH",
"141 85.333 OFFCURVE",
"89 58 OFFCURVE",
"45 44 CURVE",
"20.991 44 OFFCURVE",
"-9 21.055 OFFCURVE",
"-9 0 CURVE SMOOTH",
"-9 -7.333 OFFCURVE",
"-4.333 -11 OFFCURVE",
"5 -11 CURVE SMOOTH",
"10.333 -11 OFFCURVE",
"18 -9 OFFCURVE",
"28 -5 CURVE SMOOTH",
"100.667 21.667 OFFCURVE",
"156.333 35.667 OFFCURVE",
"195 37 CURVE SMOOTH",
"211 37 OFFCURVE",
"231 34 OFFCURVE",
"255 28 CURVE SMOOTH",
"285.667 20 OFFCURVE",
"301 10.333 OFFCURVE",
"301 -1 CURVE SMOOTH",
"301 -7.667 OFFCURVE",
"294.667 -14 OFFCURVE",
"282 -20 CURVE SMOOTH",
"277.333 -22 OFFCURVE",
"275 -24.333 OFFCURVE",
"275 -27 CURVE SMOOTH",
"275 -32 OFFCURVE",
"277 -34 OFFCURVE",
"280 -34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 951 27 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 27 186 27 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 377;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"170.667 -39 OFFCURVE",
"222 -27.667 OFFCURVE",
"268 -5 CURVE SMOOTH",
"320.667 19.667 OFFCURVE",
"347 50.333 OFFCURVE",
"347 87 CURVE SMOOTH",
"347 139.667 OFFCURVE",
"302.667 168 OFFCURVE",
"214 172 CURVE",
"300.667 186 OFFCURVE",
"363.333 210.667 OFFCURVE",
"402 246 CURVE SMOOTH",
"426 268.667 OFFCURVE",
"438 291.667 OFFCURVE",
"438 315 CURVE SMOOTH",
"438 342.333 OFFCURVE",
"421.667 365.333 OFFCURVE",
"389 384 CURVE SMOOTH",
"357.667 402.667 OFFCURVE",
"318.667 412 OFFCURVE",
"272 412 CURVE SMOOTH",
"229.333 412 OFFCURVE",
"187.667 403.333 OFFCURVE",
"147 386 CURVE SMOOTH",
"98 365 OFFCURVE",
"72 332 OFFCURVE",
"72 289 CURVE SMOOTH",
"72 280 OFFCURVE",
"74 276 OFFCURVE",
"79 276 CURVE SMOOTH",
"83 276 OFFCURVE",
"85.667 281 OFFCURVE",
"87 291 CURVE SMOOTH",
"88.333 320.333 OFFCURVE",
"110.333 345 OFFCURVE",
"153 365 CURVE SMOOTH",
"191.667 383 OFFCURVE",
"234.333 392 OFFCURVE",
"281 392 CURVE SMOOTH",
"313 392 OFFCURVE",
"341.667 384 OFFCURVE",
"367 368 CURVE SMOOTH",
"393 352 OFFCURVE",
"406 332.333 OFFCURVE",
"406 309 CURVE SMOOTH",
"406 289 OFFCURVE",
"395 268.667 OFFCURVE",
"373 248 CURVE SMOOTH",
"349.667 225.333 OFFCURVE",
"313 208 OFFCURVE",
"263 196 CURVE SMOOTH",
"223 186 OFFCURVE",
"182.667 181.667 OFFCURVE",
"142 183 CURVE SMOOTH",
"126.667 184.333 OFFCURVE",
"119 180.667 OFFCURVE",
"119 172 CURVE SMOOTH",
"119 166 OFFCURVE",
"123 163 OFFCURVE",
"131 163 CURVE SMOOTH",
"133 163 OFFCURVE",
"134 163 OFFCURVE",
"136 163 CURVE SMOOTH",
"162 164.333 OFFCURVE",
"190.333 161 OFFCURVE",
"221 153 CURVE SMOOTH",
"275 139.667 OFFCURVE",
"302 117 OFFCURVE",
"302 85 CURVE SMOOTH",
"302 54.333 OFFCURVE",
"281 29 OFFCURVE",
"239 9 CURVE SMOOTH",
"201.667 -9 OFFCURVE",
"160 -18 OFFCURVE",
"114 -18 CURVE SMOOTH",
"51 -18 OFFCURVE",
"18 -2 OFFCURVE",
"18 30 CURVE SMOOTH",
"18 39 OFFCURVE",
"21 47 OFFCURVE",
"29 55 CURVE SMOOTH",
"35 63 OFFCURVE",
"43 67 OFFCURVE",
"53 67 CURVE",
"60.333 68.333 OFFCURVE",
"64 70 OFFCURVE",
"64 72 CURVE SMOOTH",
"64 74.667 OFFCURVE",
"60.333 76 OFFCURVE",
"53 76 CURVE",
"19 71 OFFCURVE",
"-1 49 OFFCURVE",
"-1 25 CURVE SMOOTH",
"-1 -18 OFFCURVE",
"38 -39 OFFCURVE",
"114 -39 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 51 186 51 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0128 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01214 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 14 181 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01233 948 18 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 948 55 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 377;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"141.667 -31.667 OFFCURVE",
"144 -28 OFFCURVE",
"146 -24 CURVE SMOOTH",
"152 -12 LINE",
"177 41 LINE SMOOTH",
"202.333 94.333 OFFCURVE",
"222.333 135 OFFCURVE",
"237 163 CURVE",
"247 163 LINE",
"249.667 163.667 OFFCURVE",
"252.667 164 OFFCURVE",
"256 164 CURVE SMOOTH",
"257.333 164 OFFCURVE",
"260.667 163.667 OFFCURVE",
"266 163 CURVE SMOOTH",
"287 160 LINE",
"304 157 LINE",
"309 156 LINE SMOOTH",
"311 156 OFFCURVE",
"312 157 OFFCURVE",
"312 159 CURVE SMOOTH",
"312 156 LINE",
"318 156 OFFCURVE",
"321 159 OFFCURVE",
"321 165 CURVE SMOOTH",
"321 171.667 OFFCURVE",
"313 177 OFFCURVE",
"297 181 CURVE",
"285 181.667 OFFCURVE",
"273 183.667 OFFCURVE",
"261 187 CURVE SMOOTH",
"253 189 LINE",
"253 194.333 OFFCURVE",
"270.667 225.333 OFFCURVE",
"306 282 CURVE SMOOTH",
"340 336.667 OFFCURVE",
"361.667 368 OFFCURVE",
"371 376 CURVE",
"371 391 LINE SMOOTH",
"371 416.333 OFFCURVE",
"364.333 429 OFFCURVE",
"351 429 CURVE",
"316.333 386.333 OFFCURVE",
"272.667 343.667 OFFCURVE",
"218 305 CURVE SMOOTH",
"166.667 267.667 OFFCURVE",
"105.667 225.667 OFFCURVE",
"35 179 CURVE SMOOTH",
"17.667 167.667 OFFCURVE",
"9 159 OFFCURVE",
"9 153 CURVE SMOOTH",
"9 143.667 OFFCURVE",
"14 139 OFFCURVE",
"24 139 CURVE",
"78 156.333 OFFCURVE",
"135.333 165 OFFCURVE",
"196 165 CURVE SMOOTH",
"201.333 165 OFFCURVE",
"204.333 164.667 OFFCURVE",
"205 164 CURVE",
"161 69 LINE SMOOTH",
"138.333 21 OFFCURVE",
"127 -8.333 OFFCURVE",
"127 -19 CURVE SMOOTH",
"127 -29.667 OFFCURVE",
"131 -35 OFFCURVE",
"139 -35 CURVE"
);
},
{
closed = 1;
nodes = (
"216.333 192.667 OFFCURVE",
"214.333 193 OFFCURVE",
"211 193 CURVE SMOOTH",
"194 194 LINE SMOOTH",
"188.667 194.667 OFFCURVE",
"183.167 195 OFFCURVE",
"177.5 195 CURVE SMOOTH",
"159 195 LINE",
"103 195 LINE",
"193.667 267 OFFCURVE",
"260.333 317.333 OFFCURVE",
"307 352 CURVE",
"256.333 245.333 OFFCURVE",
"226.333 192 OFFCURVE",
"217 192 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01254 949 36 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01250 29 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 368;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"158.333 -27 OFFCURVE",
"207.333 -3.667 OFFCURVE",
"254 43 CURVE SMOOTH",
"300.667 89.667 OFFCURVE",
"324 139 OFFCURVE",
"324 191 CURVE SMOOTH",
"324 247 OFFCURVE",
"290.333 275 OFFCURVE",
"223 275 CURVE SMOOTH",
"199.667 275 OFFCURVE",
"172.333 269.667 OFFCURVE",
"141 259 CURVE",
"158.333 292.333 OFFCURVE",
"173.667 316.333 OFFCURVE",
"187 331 CURVE",
"187 332.333 OFFCURVE",
"189 333 OFFCURVE",
"193 333 CURVE",
"199 335 LINE",
"204 335 LINE",
"227.333 344.333 OFFCURVE",
"259.667 351 OFFCURVE",
"301 355 CURVE SMOOTH",
"317.667 357 OFFCURVE",
"351 359 OFFCURVE",
"401 361 CURVE",
"401 376 LINE",
"385.667 379.333 OFFCURVE",
"370 381 OFFCURVE",
"354 381 CURVE SMOOTH",
"336.667 381 OFFCURVE",
"311.667 379.333 OFFCURVE",
"277 374 CURVE SMOOTH",
"243.667 370 OFFCURVE",
"218.333 368 OFFCURVE",
"201 368 CURVE SMOOTH",
"187 369 LINE",
"172 369 LINE SMOOTH",
"168.667 369 OFFCURVE",
"162 365 OFFCURVE",
"152 357 CURVE SMOOTH",
"132 341 LINE",
"132 334.333 OFFCURVE",
"137 328.667 OFFCURVE",
"147 324 CURVE",
"141.667 309.333 OFFCURVE",
"130.333 285 OFFCURVE",
"109 253 CURVE SMOOTH",
"85 220 LINE",
"77 208 LINE",
"73 200 LINE SMOOTH",
"71.667 198 OFFCURVE",
"71 195.667 OFFCURVE",
"71 193 CURVE SMOOTH",
"71 183 OFFCURVE",
"77 178 OFFCURVE",
"89 178 CURVE SMOOTH",
"93 178 OFFCURVE",
"96.667 179 OFFCURVE",
"100 181 CURVE",
"104 185 LINE SMOOTH",
"146.667 227.667 OFFCURVE",
"182.667 249 OFFCURVE",
"212 249 CURVE SMOOTH",
"264 249 OFFCURVE",
"284 232.333 OFFCURVE",
"284 183 CURVE SMOOTH",
"284 156.333 OFFCURVE",
"273 126 OFFCURVE",
"251 92 CURVE SMOOTH",
"209.667 28.667 OFFCURVE",
"160 -3 OFFCURVE",
"102 -3 CURVE SMOOTH",
"50.667 -3 OFFCURVE",
"25 23 OFFCURVE",
"25 75 CURVE SMOOTH",
"25 87.346 OFFCURVE",
"36 109.375 OFFCURVE",
"36 115 CURVE SMOOTH",
"36 121.667 OFFCURVE",
"33 125 OFFCURVE",
"27 125 CURVE SMOOTH",
"23 125 OFFCURVE",
"17.667 117 OFFCURVE",
"11 101 CURVE SMOOTH",
"4.333 85.667 OFFCURVE",
"1 75 OFFCURVE",
"1 69 CURVE SMOOTH",
"1 12.675 OFFCURVE",
"50.187 -27 OFFCURVE",
"107 -27 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01235 951 24 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 950 41 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01211 24 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 35 181 35 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012170 41 186 41 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01237 947 19 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 948 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 949 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01211 44 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"150.333 -32 OFFCURVE",
"193.667 -12 OFFCURVE",
"237 28 CURVE SMOOTH",
"281 68 OFFCURVE",
"303 109.667 OFFCURVE",
"303 153 CURVE SMOOTH",
"303 209 OFFCURVE",
"265 252 OFFCURVE",
"209 252 CURVE SMOOTH",
"197.667 252 OFFCURVE",
"179.667 245.333 OFFCURVE",
"155 232 CURVE SMOOTH",
"131 218.667 OFFCURVE",
"119 206.667 OFFCURVE",
"119 196 CURVE SMOOTH",
"119 194 OFFCURVE",
"119.667 191.667 OFFCURVE",
"121 189 CURVE",
"123 188 LINE",
"125.667 188 OFFCURVE",
"131.333 190.333 OFFCURVE",
"140 195 CURVE",
"170 217 OFFCURVE",
"195 228 OFFCURVE",
"215 228 CURVE SMOOTH",
"249 228 OFFCURVE",
"266 207.667 OFFCURVE",
"266 167 CURVE SMOOTH",
"266 151 OFFCURVE",
"263.667 136.333 OFFCURVE",
"259 123 CURVE SMOOTH",
"248.333 89.667 OFFCURVE",
"230 60 OFFCURVE",
"204 34 CURVE SMOOTH",
"174.667 4 OFFCURVE",
"144.333 -11 OFFCURVE",
"113 -11 CURVE SMOOTH",
"71.667 -11 OFFCURVE",
"51 17.667 OFFCURVE",
"51 75 CURVE SMOOTH",
"51 135 OFFCURVE",
"78.333 199.333 OFFCURVE",
"133 268 CURVE SMOOTH",
"177 324 OFFCURVE",
"229.667 372.333 OFFCURVE",
"291 413 CURVE SMOOTH",
"299.667 419.667 OFFCURVE",
"304.333 425 OFFCURVE",
"305 429 CURVE",
"305.667 430.333 OFFCURVE",
"306 431.333 OFFCURVE",
"306 432 CURVE",
"307 434 LINE",
"307 436 OFFCURVE",
"305 437 OFFCURVE",
"301 437 CURVE SMOOTH",
"298.333 437 OFFCURVE",
"295 436.333 OFFCURVE",
"291 435 CURVE SMOOTH",
"234.333 413 OFFCURVE",
"175.333 365.333 OFFCURVE",
"114 292 CURVE SMOOTH",
"50 214.667 OFFCURVE",
"18 147 OFFCURVE",
"18 89 CURVE SMOOTH",
"18 58.333 OFFCURVE",
"24.667 31.333 OFFCURVE",
"38 8 CURVE SMOOTH",
"54.667 -18.667 OFFCURVE",
"77.667 -32 OFFCURVE",
"107 -32 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 14 186 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01230 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0126 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 6 181 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0128 948 34 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01227 947 16 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 328;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"50.333 -26 OFFCURVE",
"51.667 -25 OFFCURVE",
"53 -23 CURVE",
"49 4.333 OFFCURVE",
"60.667 38.667 OFFCURVE",
"88 80 CURVE SMOOTH",
"108 109.333 OFFCURVE",
"137.333 144.333 OFFCURVE",
"176 185 CURVE SMOOTH",
"273 284 LINE SMOOTH",
"315 328 OFFCURVE",
"334.667 356.333 OFFCURVE",
"332 369 CURVE SMOOTH",
"326.438 388.465 OFFCURVE",
"296.669 408 OFFCURVE",
"272 408 CURVE SMOOTH",
"222.667 408 OFFCURVE",
"160 394.333 OFFCURVE",
"84 367 CURVE SMOOTH",
"66 359.667 OFFCURVE",
"56.667 355 OFFCURVE",
"56 353 CURVE",
"50 343.667 OFFCURVE",
"47 335 OFFCURVE",
"47 327 CURVE SMOOTH",
"47 315 OFFCURVE",
"50.333 309 OFFCURVE",
"57 309 CURVE SMOOTH",
"57.667 309 OFFCURVE",
"58.667 309.667 OFFCURVE",
"60 311 CURVE SMOOTH",
"72.667 324.333 OFFCURVE",
"97.667 338.667 OFFCURVE",
"135 354 CURVE SMOOTH",
"177.667 371.333 OFFCURVE",
"224.333 382.333 OFFCURVE",
"271 385 CURVE SMOOTH",
"283 385.667 OFFCURVE",
"289 383 OFFCURVE",
"289 377 CURVE SMOOTH",
"289 367 OFFCURVE",
"255.333 322.333 OFFCURVE",
"188 243 CURVE SMOOTH",
"104.667 145.667 OFFCURVE",
"63 96.667 OFFCURVE",
"63 96 CURVE",
"44.333 72 OFFCURVE",
"24 47 OFFCURVE",
"24 23 CURVE SMOOTH",
"24 5.014 OFFCURVE",
"35.418 -26 OFFCURVE",
"49 -26 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01238 947 23 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 331;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"78.667 -31 OFFCURVE",
"116.667 -15.333 OFFCURVE",
"150 18 CURVE SMOOTH",
"183.333 52.667 OFFCURVE",
"200 91 OFFCURVE",
"200 133 CURVE SMOOTH",
"200 155 OFFCURVE",
"190.667 183.667 OFFCURVE",
"172 219 CURVE",
"175.333 224.333 OFFCURVE",
"199.333 244 OFFCURVE",
"244 278 CURVE SMOOTH",
"290 312.667 OFFCURVE",
"317 331.333 OFFCURVE",
"325 334 CURVE",
"341 305.333 OFFCURVE",
"352.667 291 OFFCURVE",
"360 291 CURVE SMOOTH",
"365 291 OFFCURVE",
"368 296 OFFCURVE",
"368 306 CURVE SMOOTH",
"368 308 OFFCURVE",
"368 309 OFFCURVE",
"368 310 CURVE SMOOTH",
"367.333 318.667 OFFCURVE",
"362.667 332.333 OFFCURVE",
"354 351 CURVE",
"439 397 LINE SMOOTH",
"443.667 399.667 OFFCURVE",
"446 403.667 OFFCURVE",
"446 409 CURVE SMOOTH",
"446 411.667 OFFCURVE",
"444.667 413 OFFCURVE",
"442 413 CURVE SMOOTH",
"440 413 OFFCURVE",
"438.333 412.667 OFFCURVE",
"437 412 CURVE SMOOTH",
"424.333 408 OFFCURVE",
"393.667 393 OFFCURVE",
"345 367 CURVE",
"328.333 391.667 OFFCURVE",
"298.333 404 OFFCURVE",
"255 404 CURVE SMOOTH",
"218.333 404 OFFCURVE",
"186.333 394.333 OFFCURVE",
"159 375 CURVE SMOOTH",
"129 353.667 OFFCURVE",
"114 323.333 OFFCURVE",
"114 284 CURVE SMOOTH",
"114 262 OFFCURVE",
"119.333 239.333 OFFCURVE",
"130 216 CURVE",
"92.667 186.667 OFFCURVE",
"67.667 165.333 OFFCURVE",
"53 152 CURVE SMOOTH",
"3 104.667 OFFCURVE",
"-22 65.667 OFFCURVE",
"-22 35 CURVE SMOOTH",
"-22 -1 OFFCURVE",
"0 -27.667 OFFCURVE",
"36 -29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"22.667 -11 OFFCURVE",
"10 0.333 OFFCURVE",
"10 23 CURVE SMOOTH",
"10 50.333 OFFCURVE",
"22.333 80.333 OFFCURVE",
"47 113 CURVE SMOOTH",
"70.333 141.667 OFFCURVE",
"101 169 OFFCURVE",
"139 195 CURVE",
"157.667 161.667 OFFCURVE",
"167 136.333 OFFCURVE",
"167 119 CURVE SMOOTH",
"167 89.667 OFFCURVE",
"154.333 60.333 OFFCURVE",
"129 31 CURVE SMOOTH",
"103.667 3 OFFCURVE",
"76.667 -11 OFFCURVE",
"48 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"152 262.667 OFFCURVE",
"146 282.667 OFFCURVE",
"146 298 CURVE SMOOTH",
"146 323.333 OFFCURVE",
"157 344.667 OFFCURVE",
"179 362 CURVE SMOOTH",
"199.667 376.667 OFFCURVE",
"223 384 OFFCURVE",
"249 384 CURVE SMOOTH",
"282.333 384 OFFCURVE",
"304.667 372.333 OFFCURVE",
"316 349 CURVE",
"249.333 302.333 OFFCURVE",
"198.667 264.667 OFFCURVE",
"164 238 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01258 951 20 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01247 951 27 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 951 52 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 13 181 13 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 102 47 118 47 134 47 150 47 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 47 181 47 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 58 181 58 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 344;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"145 -55 OFFCURVE",
"150.333 -45.667 OFFCURVE",
"153 -27 CURVE SMOOTH",
"161.667 17.667 OFFCURVE",
"197.667 90.667 OFFCURVE",
"261 192 CURVE SMOOTH",
"297 248.667 OFFCURVE",
"315 278 OFFCURVE",
"315 280 CURVE SMOOTH",
"315 288 OFFCURVE",
"298.333 304 OFFCURVE",
"289 304 CURVE SMOOTH",
"285 304 OFFCURVE",
"270.667 289.667 OFFCURVE",
"246 261 CURVE SMOOTH",
"231.333 243.667 OFFCURVE",
"219 232.333 OFFCURVE",
"207 223 CURVE SMOOTH",
"159.667 187 OFFCURVE",
"119.667 169 OFFCURVE",
"87 169 CURVE SMOOTH",
"66.333 169 OFFCURVE",
"56 180.667 OFFCURVE",
"56 204 CURVE SMOOTH",
"56 244.667 OFFCURVE",
"81.667 289.667 OFFCURVE",
"133 339 CURVE SMOOTH",
"185.667 388.333 OFFCURVE",
"232.333 413 OFFCURVE",
"273 413 CURVE SMOOTH",
"305 413 OFFCURVE",
"321 400.667 OFFCURVE",
"321 376 CURVE SMOOTH",
"321 372.667 OFFCURVE",
"319.333 361.667 OFFCURVE",
"316 343 CURVE SMOOTH",
"314.667 334.333 OFFCURVE",
"313.5 329 OFFCURVE",
"312.5 327 CURVE SMOOTH",
"311.5 325 OFFCURVE",
"311 325.667 OFFCURVE",
"311 329 CURVE",
"311 325.667 OFFCURVE",
"311.667 324 OFFCURVE",
"313 324 CURVE",
"315 321 LINE",
"315 323 LINE",
"319 320 LINE",
"325.667 322.667 OFFCURVE",
"331.333 331 OFFCURVE",
"336 345 CURVE SMOOTH",
"340.667 356.333 OFFCURVE",
"343 367 OFFCURVE",
"343 377 CURVE SMOOTH",
"343 413.667 OFFCURVE",
"319.333 432 OFFCURVE",
"272 432 CURVE SMOOTH",
"226 432 OFFCURVE",
"174 409 OFFCURVE",
"116 363 CURVE SMOOTH",
"55.333 315 OFFCURVE",
"23.667 268.667 OFFCURVE",
"21 224 CURVE SMOOTH",
"17.667 172.667 OFFCURVE",
"35.667 147 OFFCURVE",
"75 147 CURVE SMOOTH",
"117 147 OFFCURVE",
"166.333 168.667 OFFCURVE",
"223 212 CURVE",
"162.333 94 OFFCURVE",
"131 9 OFFCURVE",
"129 -43 CURVE SMOOTH",
"129 -51 OFFCURVE",
"131.667 -55 OFFCURVE",
"137 -55 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 951 42 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 951 10 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 10 186 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 10 121 10 137 10 153 10 169 10 185 10 201 10 217 10 233 10 249 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 153 10 169 10 185 10 201 10 217 10 233 10 249 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 153 10 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 16 181 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01238 42 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01218 947 40 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01238 34 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 340;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"181.333 117 OFFCURVE",
"192 127.333 OFFCURVE",
"192 148 CURVE SMOOTH",
"192 168.667 OFFCURVE",
"181.333 179 OFFCURVE",
"160 179 CURVE SMOOTH",
"138.667 179 OFFCURVE",
"128 168.667 OFFCURVE",
"128 148 CURVE SMOOTH",
"128 127.333 OFFCURVE",
"138.667 117 OFFCURVE",
"160 117 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"120.333 -4 OFFCURVE",
"131 6.333 OFFCURVE",
"131 27 CURVE SMOOTH",
"131 47 OFFCURVE",
"120.333 57 OFFCURVE",
"99 57 CURVE SMOOTH",
"77.667 57 OFFCURVE",
"67 47 OFFCURVE",
"67 27 CURVE SMOOTH",
"67 6.333 OFFCURVE",
"77.667 -4 OFFCURVE",
"99 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 952 12 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 8 22 8 38 8 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 8 69 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0120 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01214 10 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0126 2 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 160;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"22 -103 OFFCURVE",
"29.333 -99.667 OFFCURVE",
"40 -93 CURVE SMOOTH",
"56 -83.667 OFFCURVE",
"74.667 -66.333 OFFCURVE",
"96 -41 CURVE SMOOTH",
"117 -15 OFFCURVE",
"128 6 OFFCURVE",
"128 20 CURVE SMOOTH",
"128 42 OFFCURVE",
"118 52 OFFCURVE",
"100 52 CURVE SMOOTH",
"80 52 OFFCURVE",
"61 38 OFFCURVE",
"61 19 CURVE SMOOTH",
"61 2.333 OFFCURVE",
"67 -7 OFFCURVE",
"79 -9 CURVE",
"45 -56 LINE SMOOTH",
"25 -83.333 OFFCURVE",
"15 -98.333 OFFCURVE",
"15 -101 CURVE SMOOTH",
"15 -102.333 OFFCURVE",
"16 -103 OFFCURVE",
"18 -103 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"205.333 139 OFFCURVE",
"216 149 OFFCURVE",
"216 169 CURVE SMOOTH",
"216 189 OFFCURVE",
"205.333 199 OFFCURVE",
"184 199 CURVE SMOOTH",
"162.667 199 OFFCURVE",
"152 189 OFFCURVE",
"152 169 CURVE SMOOTH",
"152 149 OFFCURVE",
"162.667 139 OFFCURVE",
"184 139 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 952 4 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 4 74 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 4 121 4 137 4 153 4 169 4 185 4 201 4 217 4 233 4 249 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 4 25 4 41 4 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 2 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 155;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"110 16 LINE",
"113 23 LINE",
"114 113 LINE",
"128.667 123 OFFCURVE",
"140.667 131.333 OFFCURVE",
"150 138 CURVE SMOOTH",
"171 153 LINE SMOOTH",
"199.667 173.667 OFFCURVE",
"216.667 188.667 OFFCURVE",
"222 198 CURVE",
"221 203 LINE",
"217 205 LINE",
"215 205 OFFCURVE",
"167.667 176.333 OFFCURVE",
"75 119 CURVE",
"86 67 LINE",
"93 37 LINE SMOOTH",
"95 28.333 OFFCURVE",
"97.333 21.333 OFFCURVE",
"100 16 CURVE",
"101.333 15.333 OFFCURVE",
"102.333 15 OFFCURVE",
"103 15 CURVE",
"105 14 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 219;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"106.333 196 OFFCURVE",
"109.667 196.5 OFFCURVE",
"119 197.5 CURVE SMOOTH",
"165 201 LINE SMOOTH",
"207.667 205 OFFCURVE",
"239.667 207 OFFCURVE",
"261 207 CURVE SMOOTH",
"269 207 OFFCURVE",
"273 209.667 OFFCURVE",
"273 215 CURVE SMOOTH",
"273 223.667 OFFCURVE",
"251 228 OFFCURVE",
"207 228 CURVE SMOOTH",
"109 228 LINE SMOOTH",
"101.667 228 OFFCURVE",
"98 223.667 OFFCURVE",
"98 215 CURVE SMOOTH",
"98 202.333 OFFCURVE",
"101.667 196 OFFCURVE",
"109 196 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104.333 129 OFFCURVE",
"123 131 OFFCURVE",
"165 135 CURVE SMOOTH",
"207.667 139 OFFCURVE",
"239.667 141 OFFCURVE",
"261 141 CURVE SMOOTH",
"269 141 OFFCURVE",
"273 143.333 OFFCURVE",
"273 148 CURVE SMOOTH",
"273 156.667 OFFCURVE",
"251 161 OFFCURVE",
"207 161 CURVE SMOOTH",
"109 161 LINE SMOOTH",
"101.667 161 OFFCURVE",
"98 157 OFFCURVE",
"98 149 CURVE SMOOTH",
"98 135.667 OFFCURVE",
"101.667 129 OFFCURVE",
"109 129 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01212 949 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01225 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 305;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"29 15 LINE",
"165 100 LINE",
"153 158.667 OFFCURVE",
"145 192.667 OFFCURVE",
"141 202 CURVE",
"135 205 LINE",
"130 202 LINE",
"127 196 LINE",
"126 105 LINE",
"71 66 LINE SMOOTH",
"35.667 40 OFFCURVE",
"18 24 OFFCURVE",
"18 18 CURVE",
"19 15 LINE",
"20.333 14.333 OFFCURVE",
"22 14 OFFCURVE",
"24 14 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0125 2 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 219;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"128.333 109 OFFCURVE",
"134 117.667 OFFCURVE",
"136 135 CURVE",
"130.667 135 OFFCURVE",
"128 138 OFFCURVE",
"128 144 CURVE SMOOTH",
"128 145 LINE SMOOTH",
"128 170.333 OFFCURVE",
"142.333 195.333 OFFCURVE",
"171 220 CURVE SMOOTH",
"228 267 LINE SMOOTH",
"243.333 279.667 OFFCURVE",
"255.667 289.333 OFFCURVE",
"265 296 CURVE SMOOTH",
"309 329.333 OFFCURVE",
"341 356.333 OFFCURVE",
"361 379 CURVE SMOOTH",
"390.333 412.333 OFFCURVE",
"405 443.667 OFFCURVE",
"405 473 CURVE SMOOTH",
"405 513 OFFCURVE",
"366.333 541 OFFCURVE",
"325 541 CURVE SMOOTH",
"274.333 541 OFFCURVE",
"219.667 521.667 OFFCURVE",
"161 483 CURVE SMOOTH",
"113.667 453 OFFCURVE",
"81.667 425.667 OFFCURVE",
"65 401 CURVE SMOOTH",
"60.333 394.333 OFFCURVE",
"58 388.333 OFFCURVE",
"58 383 CURVE SMOOTH",
"58 377.667 OFFCURVE",
"61 375 OFFCURVE",
"67 375 CURVE SMOOTH",
"72.333 375 OFFCURVE",
"76.667 377 OFFCURVE",
"80 381 CURVE SMOOTH",
"94.667 403 OFFCURVE",
"124.333 428.333 OFFCURVE",
"169 457 CURVE SMOOTH",
"225.667 493.667 OFFCURVE",
"280 512 OFFCURVE",
"332 512 CURVE SMOOTH",
"353.333 512 OFFCURVE",
"364 501.667 OFFCURVE",
"364 481 CURVE SMOOTH",
"364 435.116 OFFCURVE",
"293.38 373.56 OFFCURVE",
"232 319 CURVE SMOOTH",
"186 278.333 OFFCURVE",
"155 248 OFFCURVE",
"139 228 CURVE SMOOTH",
"110.333 194.667 OFFCURVE",
"96 165 OFFCURVE",
"96 139 CURVE SMOOTH",
"96 119 OFFCURVE",
"103.667 109 OFFCURVE",
"119 109 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"110.333 -20 OFFCURVE",
"121 -10.333 OFFCURVE",
"121 9 CURVE SMOOTH",
"121 29.667 OFFCURVE",
"110.333 40 OFFCURVE",
"89 40 CURVE SMOOTH",
"67.667 40 OFFCURVE",
"57 29.667 OFFCURVE",
"57 9 CURVE SMOOTH",
"57 -10.333 OFFCURVE",
"67.667 -20 OFFCURVE",
"89 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01245 952 49 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 950 26 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 45 22 45 38 45 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 45 69 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01217 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 26 186 26 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01251 47 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 949 28 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 400;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
lastChange = "2021-05-11 11:06:01 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"258 -107 OFFCURVE",
"314 -94 OFFCURVE",
"375 -68 CURVE SMOOTH",
"430 -43 OFFCURVE",
"481 -10 OFFCURVE",
"526 31 CURVE SMOOTH",
"554 58 OFFCURVE",
"576 87 OFFCURVE",
"593 117 CURVE SMOOTH",
"611 153 OFFCURVE",
"619 185 OFFCURVE",
"617 212 CURVE",
"630 233 OFFCURVE",
"637 253 OFFCURVE",
"637 271 CURVE SMOOTH",
"637 304 OFFCURVE",
"618 328 OFFCURVE",
"579 345 CURVE SMOOTH",
"543 360 OFFCURVE",
"499 368 OFFCURVE",
"446 368 CURVE SMOOTH",
"382 368 OFFCURVE",
"325 358 OFFCURVE",
"275 338 CURVE SMOOTH",
"214 313 OFFCURVE",
"167 286 OFFCURVE",
"133 258 CURVE SMOOTH",
"83 216 OFFCURVE",
"50 164 OFFCURVE",
"34 101 CURVE SMOOTH",
"30 84 OFFCURVE",
"28 66 OFFCURVE",
"28 49 CURVE SMOOTH",
"28 1 OFFCURVE",
"45 -37 OFFCURVE",
"80 -66 CURVE SMOOTH",
"112 -93 OFFCURVE",
"154 -107 OFFCURVE",
"207 -107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"103 -94 OFFCURVE",
"55 -54 OFFCURVE",
"55 25 CURVE SMOOTH",
"55 62 OFFCURVE",
"66 101 OFFCURVE",
"89 144 CURVE SMOOTH",
"135 233 OFFCURVE",
"210 295 OFFCURVE",
"314 332 CURVE SMOOTH",
"347 343 OFFCURVE",
"386 349 OFFCURVE",
"433 349 CURVE SMOOTH",
"484 349 OFFCURVE",
"528 342 OFFCURVE",
"565 329 CURVE SMOOTH",
"606 313 OFFCURVE",
"626 291 OFFCURVE",
"626 263 CURVE SMOOTH",
"626 252 OFFCURVE",
"622 239 OFFCURVE",
"615 226 CURVE",
"605 282 OFFCURVE",
"559 310 OFFCURVE",
"478 310 CURVE SMOOTH",
"447 310 OFFCURVE",
"432 307 OFFCURVE",
"432 302 CURVE SMOOTH",
"432 298 OFFCURVE",
"439 295 OFFCURVE",
"452 295 CURVE SMOOTH",
"457 295 OFFCURVE",
"462 296 OFFCURVE",
"468 296 CURVE SMOOTH",
"473 297 OFFCURVE",
"477 297 OFFCURVE",
"481 297 CURVE SMOOTH",
"492 297 LINE SMOOTH",
"558 297 OFFCURVE",
"591 271 OFFCURVE",
"591 219 CURVE SMOOTH",
"591 207 OFFCURVE",
"590 196 OFFCURVE",
"587 186 CURVE",
"542 130 OFFCURVE",
"482 82 OFFCURVE",
"407 42 CURVE SMOOTH",
"395 36 OFFCURVE",
"385 33 OFFCURVE",
"378 33 CURVE SMOOTH",
"363 33 OFFCURVE",
"352 48 OFFCURVE",
"347 77 CURVE",
"346 78 OFFCURVE",
"346 101 OFFCURVE",
"346 146 CURVE SMOOTH",
"346 165 OFFCURVE",
"344 174 OFFCURVE",
"338 174 CURVE SMOOTH",
"332 174 OFFCURVE",
"324 167 OFFCURVE",
"315 154 CURVE SMOOTH",
"276 100 OFFCURVE",
"252 68 OFFCURVE",
"241 57 CURVE SMOOTH",
"225 41 OFFCURVE",
"213 33 OFFCURVE",
"205 33 CURVE SMOOTH",
"200 33 OFFCURVE",
"197 37 OFFCURVE",
"197 46 CURVE SMOOTH",
"197 57 OFFCURVE",
"200 71 OFFCURVE",
"207 87 CURVE SMOOTH",
"228 140 OFFCURVE",
"262 186 OFFCURVE",
"308 224 CURVE SMOOTH",
"326 240 OFFCURVE",
"343 248 OFFCURVE",
"359 248 CURVE SMOOTH",
"376 248 OFFCURVE",
"384 241 OFFCURVE",
"384 226 CURVE SMOOTH",
"384 219 OFFCURVE",
"382 213 OFFCURVE",
"378 206 CURVE",
"391 208 OFFCURVE",
"397 217 OFFCURVE",
"397 232 CURVE SMOOTH",
"397 259 OFFCURVE",
"369 271 OFFCURVE",
"342 271 CURVE SMOOTH",
"301 271 OFFCURVE",
"261 245 OFFCURVE",
"221 193 CURVE SMOOTH",
"184 144 OFFCURVE",
"165 99 OFFCURVE",
"165 58 CURVE SMOOTH",
"165 29 OFFCURVE",
"177 13 OFFCURVE",
"202 13 CURVE SMOOTH",
"218 13 OFFCURVE",
"241 30 OFFCURVE",
"268 65 CURVE SMOOTH",
"293 98 OFFCURVE",
"305 116 OFFCURVE",
"305 119 CURVE",
"303 117 OFFCURVE",
"302 113 OFFCURVE",
"302 108 CURVE SMOOTH",
"302 99 OFFCURVE",
"305 85 OFFCURVE",
"309 66 CURVE SMOOTH",
"317 32 OFFCURVE",
"332 15 OFFCURVE",
"355 15 CURVE SMOOTH",
"370 15 OFFCURVE",
"389 21 OFFCURVE",
"413 32 CURVE SMOOTH",
"474 62 OFFCURVE",
"530 107 OFFCURVE",
"582 168 CURVE",
"565 122 OFFCURVE",
"535 79 OFFCURVE",
"492 40 CURVE SMOOTH",
"450 3 OFFCURVE",
"404 -29 OFFCURVE",
"354 -54 CURVE SMOOTH",
"300 -81 OFFCURVE",
"248 -94 OFFCURVE",
"199 -94 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 951 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01289 60 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 950 99 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 99 186 99 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 99 121 99 137 99 153 99 169 99 185 99 201 99 217 99 233 99 249 99 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 99 25 99 41 99 57 99 73 99 89 99 105 99 121 99 137 99 153 99 169 99 185 99 201 99 217 99 233 99 249 99 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 99 25 99 41 99 57 99 73 99 89 99 105 99 121 99 137 99 153 99 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01226 99 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 38 181 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01246 10 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01269 10 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 89 22 89 38 89 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 89 69 89 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01281 6 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01218 101 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01264 947 73 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012101 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 576;
}
);
leftMetricsKey = o;
note = at;
rightMetricsKey = o;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2021-05-14 17:39:10 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{442, -43}";
},
{
name = ogonek;
position = "{719, -29}";
},
{
name = top;
position = "{677, 566}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"143 -57 OFFCURVE",
"170 -53 OFFCURVE",
"197 -43 CURVE SMOOTH",
"251.667 -26.333 OFFCURVE",
"313.667 10.667 OFFCURVE",
"383 68 CURVE",
"389.667 66.667 OFFCURVE",
"398.333 66 OFFCURVE",
"405 66 CURVE SMOOTH",
"456.333 66 OFFCURVE",
"502 92.333 OFFCURVE",
"542 145 CURVE SMOOTH",
"544 147 OFFCURVE",
"543.667 149 OFFCURVE",
"541 151 CURVE SMOOTH",
"538.333 152.333 OFFCURVE",
"536.667 152 OFFCURVE",
"536 150 CURVE",
"499 101 OFFCURVE",
"456 76 OFFCURVE",
"408 76 CURVE SMOOTH",
"403 76 OFFCURVE",
"398 77 OFFCURVE",
"393 77 CURVE",
"434.333 111.667 OFFCURVE",
"472.333 147.333 OFFCURVE",
"507 186 CURVE",
"591 186 LINE SMOOTH",
"611.667 186 OFFCURVE",
"625.333 186.333 OFFCURVE",
"632 187 CURVE",
"631 168 OFFCURVE",
"631 151 OFFCURVE",
"631 136 CURVE SMOOTH",
"631 104 OFFCURVE",
"632 78 OFFCURVE",
"636 57 CURVE SMOOTH",
"645.333 -2.333 OFFCURVE",
"670.667 -32 OFFCURVE",
"712 -32 CURVE SMOOTH",
"754.667 -32 OFFCURVE",
"800.333 5 OFFCURVE",
"819 61 CURVE SMOOTH",
"821 68.333 OFFCURVE",
"820 72 OFFCURVE",
"816 72 CURVE SMOOTH",
"813.333 72 OFFCURVE",
"811 69.667 OFFCURVE",
"809 65 CURVE SMOOTH",
"787 15 OFFCURVE",
"761.667 -10 OFFCURVE",
"733 -10 CURVE SMOOTH",
"709 -10 OFFCURVE",
"692 11.667 OFFCURVE",
"682 55 CURVE SMOOTH",
"677 75 OFFCURVE",
"674 107 OFFCURVE",
"674 150 CURVE SMOOTH",
"674 163 OFFCURVE",
"675 177 OFFCURVE",
"675 192 CURVE",
"703.667 197.333 OFFCURVE",
"725.333 204.333 OFFCURVE",
"740 213 CURVE SMOOTH",
"746 217 OFFCURVE",
"749 221 OFFCURVE",
"749 225 CURVE SMOOTH",
"749 227 OFFCURVE",
"748.333 228 OFFCURVE",
"747 228 CURVE SMOOTH",
"744.333 228 OFFCURVE",
"741.333 226.667 OFFCURVE",
"738 224 CURVE SMOOTH",
"728.667 218.667 OFFCURVE",
"707.667 214.667 OFFCURVE",
"675 212 CURVE",
"677.667 254.667 OFFCURVE",
"685 313 OFFCURVE",
"692 391 CURVE SMOOTH",
"700 476 LINE SMOOTH",
"702 497.333 OFFCURVE",
"703 511.667 OFFCURVE",
"703 519 CURVE SMOOTH",
"703 550.333 OFFCURVE",
"691 566 OFFCURVE",
"667 566 CURVE SMOOTH",
"653 566 OFFCURVE",
"638.333 560.667 OFFCURVE",
"623 550 CURVE SMOOTH",
"591.667 530.667 OFFCURVE",
"569.667 506.667 OFFCURVE",
"557 478 CURVE SMOOTH",
"556.333 476.667 OFFCURVE",
"556 474.667 OFFCURVE",
"556 472 CURVE SMOOTH",
"556 468.667 OFFCURVE",
"557.333 467 OFFCURVE",
"560 467 CURVE SMOOTH",
"563.333 467 OFFCURVE",
"566.167 469.5 OFFCURVE",
"568.5 474.5 CURVE SMOOTH",
"570.833 479.5 OFFCURVE",
"577.667 488.667 OFFCURVE",
"589 502 CURVE SMOOTH",
"601.667 517.333 OFFCURVE",
"613.667 528.667 OFFCURVE",
"625 536 CURVE SMOOTH",
"633 542 OFFCURVE",
"640 545 OFFCURVE",
"646 545 CURVE SMOOTH",
"658.667 545 OFFCURVE",
"665 532 OFFCURVE",
"665 506 CURVE SMOOTH",
"665 502 OFFCURVE",
"664 493 OFFCURVE",
"662.5 480 CURVE SMOOTH",
"655 426 LINE",
"643 411.333 OFFCURVE",
"627 390 OFFCURVE",
"608 364 CURVE SMOOTH",
"527 254 LINE SMOOTH",
"507 227 OFFCURVE",
"493.667 210.333 OFFCURVE",
"487 203 CURVE",
"442 203 LINE",
"456.667 224.333 OFFCURVE",
"469.333 244.333 OFFCURVE",
"480 267 CURVE SMOOTH",
"507.333 325 OFFCURVE",
"521 376 OFFCURVE",
"521 420 CURVE SMOOTH",
"521 508 OFFCURVE",
"468.333 559 OFFCURVE",
"399 559 CURVE SMOOTH",
"351.667 559 OFFCURVE",
"310.667 537.667 OFFCURVE",
"276 495 CURVE SMOOTH",
"236 445.667 OFFCURVE",
"216 380.333 OFFCURVE",
"216 299 CURVE SMOOTH",
"216 257.667 OFFCURVE",
"224.333 220 OFFCURVE",
"241 186 CURVE",
"195 179.333 OFFCURVE",
"153.333 169.667 OFFCURVE",
"116 157 CURVE SMOOTH",
"85.333 147 OFFCURVE",
"60 131.667 OFFCURVE",
"40 111 CURVE SMOOTH",
"17.333 87.667 OFFCURVE",
"6 61 OFFCURVE",
"6 31 CURVE SMOOTH",
"6 -18.333 OFFCURVE",
"43 -50.667 OFFCURVE",
"95 -56 CURVE SMOOTH",
"103 -57 OFFCURVE",
"110 -57 OFFCURVE",
"118 -57 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"131.667 -32 OFFCURVE",
"122.333 -31.333 OFFCURVE",
"113 -30 CURVE SMOOTH",
"87 -27.333 OFFCURVE",
"65 -19.333 OFFCURVE",
"47 -6 CURVE SMOOTH",
"29 7 OFFCURVE",
"19 24 OFFCURVE",
"19 43 CURVE SMOOTH",
"19 82 OFFCURVE",
"50 111 OFFCURVE",
"109 131 CURVE SMOOTH",
"143.667 141.667 OFFCURVE",
"191.667 154.333 OFFCURVE",
"253 165 CURVE",
"273 130.333 OFFCURVE",
"298 104.667 OFFCURVE",
"328 88 CURVE",
"260.667 30.667 OFFCURVE",
"195 2 OFFCURVE",
"131 2 CURVE SMOOTH",
"115 2 OFFCURVE",
"99 4 OFFCURVE",
"83 8 CURVE SMOOTH",
"80 9 OFFCURVE",
"78 7 OFFCURVE",
"78 4 CURVE SMOOTH",
"78 2 OFFCURVE",
"79 1 OFFCURVE",
"81 0 CURVE SMOOTH",
"97 -4.667 OFFCURVE",
"114.667 -7 OFFCURVE",
"134 -7 CURVE SMOOTH",
"201.333 -7 OFFCURVE",
"269.333 22.667 OFFCURVE",
"338 82 CURVE",
"361 73 LINE",
"283.667 3 OFFCURVE",
"210.333 -32 OFFCURVE",
"141 -32 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"309 111.333 OFFCURVE",
"285.333 135 OFFCURVE",
"266 167 CURVE",
"323.333 177.667 OFFCURVE",
"374 184.333 OFFCURVE",
"418 187 CURVE",
"394 154.333 OFFCURVE",
"367 124 OFFCURVE",
"337 96 CURVE"
);
},
{
closed = 1;
nodes = (
"363.333 84 OFFCURVE",
"355.667 86.667 OFFCURVE",
"347 90 CURVE",
"377.667 119.333 OFFCURVE",
"406.667 150.667 OFFCURVE",
"432 188 CURVE",
"448.667 188.667 OFFCURVE",
"463 188.667 OFFCURVE",
"475 188 CURVE",
"370 82 LINE"
);
},
{
closed = 1;
nodes = (
"239 222 OFFCURVE",
"231 259 OFFCURVE",
"231 299 CURVE SMOOTH",
"231 378.333 OFFCURVE",
"248.667 440.667 OFFCURVE",
"284 486 CURVE SMOOTH",
"314 526 OFFCURVE",
"350.333 546 OFFCURVE",
"393 546 CURVE SMOOTH",
"460.125 546 OFFCURVE",
"508 490.411 OFFCURVE",
"508 412 CURVE SMOOTH",
"508 370.667 OFFCURVE",
"495.333 324 OFFCURVE",
"470 272 CURVE SMOOTH",
"458.667 248.667 OFFCURVE",
"445 225.333 OFFCURVE",
"429 202 CURVE",
"366.333 200.667 OFFCURVE",
"309.667 196 OFFCURVE",
"255 188 CURVE"
);
},
{
closed = 1;
nodes = (
"553.167 207 OFFCURVE",
"537.667 207.333 OFFCURVE",
"525 208 CURVE",
"613 331.5 LINE SMOOTH",
"635 362 OFFCURVE",
"647.667 382 OFFCURVE",
"653 392 CURVE",
"642.333 322.667 OFFCURVE",
"636.667 262.333 OFFCURVE",
"634 209 CURVE",
"610.667 207.667 OFFCURVE",
"589.833 207 OFFCURVE",
"571.5 207 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 950 60 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 60 186 60 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 60 25 60 41 60 57 60 73 60 89 60 105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 60 25 60 41 60 57 60 73 60 89 60 105 60 121 60 137 60 153 60 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01295 60 79 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012113 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 113 186 113 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012125 95 113 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012131 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012131 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012179 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01299 947 108 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012131 947 116 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012131 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012131 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012131 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012131 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012108 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012108 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012170 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012170 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012172 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012172 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 769;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-14.667 -91 OFFCURVE",
"30 -58 OFFCURVE",
"70 8 CURVE SMOOTH",
"84.667 33.333 OFFCURVE",
"103 71 OFFCURVE",
"123 127 CURVE",
"136.333 129.667 OFFCURVE",
"148.667 130.667 OFFCURVE",
"162 132 CURVE",
"144.667 74.667 OFFCURVE",
"134.667 30.667 OFFCURVE",
"132 0 CURVE SMOOTH",
"130.667 -13.333 OFFCURVE",
"150.333 -31 OFFCURVE",
"161 -31 CURVE SMOOTH",
"162.333 -31 OFFCURVE",
"163.667 -30.333 OFFCURVE",
"165 -29 CURVE",
"187.667 8.333 OFFCURVE",
"206.667 35.667 OFFCURVE",
"220 53 CURVE",
"217.333 47 OFFCURVE",
"216 39.333 OFFCURVE",
"216 30 CURVE SMOOTH",
"216 -7.333 OFFCURVE",
"243.667 -42.333 OFFCURVE",
"277 -49 CURVE SMOOTH",
"290.333 -51.667 OFFCURVE",
"303.333 -53 OFFCURVE",
"318 -53 CURVE SMOOTH",
"362.667 -53 OFFCURVE",
"408.667 -41 OFFCURVE",
"456 -17 CURVE SMOOTH",
"495.333 3 OFFCURVE",
"526.333 25.667 OFFCURVE",
"549 51 CURVE SMOOTH",
"569.667 73.667 OFFCURVE",
"580 97 OFFCURVE",
"580 121 CURVE SMOOTH",
"580 152.333 OFFCURVE",
"562.667 178.333 OFFCURVE",
"528 199 CURVE SMOOTH",
"490.667 221 OFFCURVE",
"442.333 232 OFFCURVE",
"383 232 CURVE",
"427 237.333 OFFCURVE",
"473.667 252.667 OFFCURVE",
"523 282 CURVE SMOOTH",
"586 318 OFFCURVE",
"616 358 OFFCURVE",
"616 401 CURVE SMOOTH",
"616 438 OFFCURVE",
"593 467 OFFCURVE",
"545 488 CURVE SMOOTH",
"499.667 508.667 OFFCURVE",
"443 519 OFFCURVE",
"375 519 CURVE SMOOTH",
"368 519 LINE",
"385.333 545 OFFCURVE",
"400 559.667 OFFCURVE",
"412 563 CURVE SMOOTH",
"415.333 563.667 OFFCURVE",
"419.667 564 OFFCURVE",
"425 564 CURVE SMOOTH",
"436.333 564 OFFCURVE",
"448.333 559.667 OFFCURVE",
"461 551 CURVE",
"464.333 547.667 OFFCURVE",
"467.333 544 OFFCURVE",
"470 540 CURVE SMOOTH",
"472.667 536 OFFCURVE",
"475.333 534 OFFCURVE",
"478 534 CURVE",
"481.333 535.333 OFFCURVE",
"483 537 OFFCURVE",
"483 539 CURVE SMOOTH",
"483 545.667 OFFCURVE",
"475.333 554 OFFCURVE",
"460 564 CURVE SMOOTH",
"442.667 575.333 OFFCURVE",
"425.333 581 OFFCURVE",
"408 581 CURVE SMOOTH",
"382 581 OFFCURVE",
"354.667 560 OFFCURVE",
"326 518 CURVE",
"308.667 516.667 OFFCURVE",
"293 515.667 OFFCURVE",
"277 513 CURVE",
"299 551.667 OFFCURVE",
"318.667 575.667 OFFCURVE",
"336 585 CURVE",
"338.667 585.667 OFFCURVE",
"339.333 587.667 OFFCURVE",
"338 591 CURVE SMOOTH",
"337.333 593 OFFCURVE",
"335.667 593.333 OFFCURVE",
"333 592 CURVE SMOOTH",
"312.333 580.667 OFFCURVE",
"290.333 554 OFFCURVE",
"267 512 CURVE",
"183.667 499.333 OFFCURVE",
"118.333 473.333 OFFCURVE",
"71 434 CURVE SMOOTH",
"38 406 OFFCURVE",
"21 379 OFFCURVE",
"21 352 CURVE SMOOTH",
"21 304 OFFCURVE",
"57 280 OFFCURVE",
"125 280 CURVE SMOOTH",
"137 280 OFFCURVE",
"151.667 281 OFFCURVE",
"169 283 CURVE",
"146.333 215 OFFCURVE",
"128.333 166 OFFCURVE",
"115 134 CURVE",
"56.333 122.667 OFFCURVE",
"7 108.333 OFFCURVE",
"-33 91 CURVE SMOOTH",
"-102.333 59.667 OFFCURVE",
"-137 21.333 OFFCURVE",
"-137 -24 CURVE SMOOTH",
"-137 -61.333 OFFCURVE",
"-106.667 -91 OFFCURVE",
"-64 -91 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-99.333 -81 OFFCURVE",
"-123 -57 OFFCURVE",
"-123 -25 CURVE SMOOTH",
"-123 17.667 OFFCURVE",
"-91.333 53.667 OFFCURVE",
"-28 83 CURVE SMOOTH",
"9.333 100.333 OFFCURVE",
"55.667 114.333 OFFCURVE",
"111 125 CURVE",
"92.333 75.667 OFFCURVE",
"73.667 39 OFFCURVE",
"59 15 CURVE SMOOTH",
"19.667 -49 OFFCURVE",
"-22 -81 OFFCURVE",
"-66 -81 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"179 285 LINE",
"185.667 286.333 OFFCURVE",
"192 287.5 OFFCURVE",
"198 288.5 CURVE SMOOTH",
"216 292 LINE",
"197.333 241.333 OFFCURVE",
"179.667 191.667 OFFCURVE",
"165 141 CURVE",
"151.667 139.667 OFFCURVE",
"140.333 138.667 OFFCURVE",
"127 136 CURVE"
);
},
{
closed = 1;
nodes = (
"252.333 -31 OFFCURVE",
"230 -12 OFFCURVE",
"230 26 CURVE SMOOTH",
"230 56.667 OFFCURVE",
"244.333 84.333 OFFCURVE",
"273 109 CURVE SMOOTH",
"274.333 110.333 OFFCURVE",
"275 111.333 OFFCURVE",
"275 112 CURVE SMOOTH",
"275 114 OFFCURVE",
"273.333 115 OFFCURVE",
"270 115 CURVE SMOOTH",
"264 115 OFFCURVE",
"256.667 111.667 OFFCURVE",
"248 105 CURVE SMOOTH",
"234 94.333 OFFCURVE",
"222.333 81 OFFCURVE",
"213 65 CURVE SMOOTH",
"187.667 25 OFFCURVE",
"173.667 3.667 OFFCURVE",
"171 1 CURVE",
"176.333 31.667 OFFCURVE",
"187.333 75 OFFCURVE",
"206 135 CURVE",
"304 137 OFFCURVE",
"358 108 OFFCURVE",
"368 48 CURVE",
"368 45.333 OFFCURVE",
"369.333 44.333 OFFCURVE",
"372 45 CURVE SMOOTH",
"374.667 45.667 OFFCURVE",
"375.667 47.333 OFFCURVE",
"375 50 CURVE SMOOTH",
"366.333 114.667 OFFCURVE",
"310.667 146 OFFCURVE",
"208 144 CURVE",
"227 205 LINE",
"270.333 214.333 OFFCURVE",
"311 219 OFFCURVE",
"349 219 CURVE SMOOTH",
"448.062 219 OFFCURVE",
"536 187.736 OFFCURVE",
"536 128 CURVE SMOOTH",
"536 102 OFFCURVE",
"520 75.667 OFFCURVE",
"488 49 CURVE SMOOTH",
"457.333 23 OFFCURVE",
"418 1.333 OFFCURVE",
"370 -16 CURVE SMOOTH",
"342 -26 OFFCURVE",
"317.667 -31 OFFCURVE",
"297 -31 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"64 300 OFFCURVE",
"40 313.667 OFFCURVE",
"40 341 CURVE SMOOTH",
"40 365.667 OFFCURVE",
"60 393.667 OFFCURVE",
"100 425 CURVE SMOOTH",
"142 457.667 OFFCURVE",
"194.667 481 OFFCURVE",
"258 495 CURVE",
"231.333 446.333 OFFCURVE",
"204.333 383.667 OFFCURVE",
"177 307 CURVE",
"150.333 301.667 OFFCURVE",
"129.333 300 OFFCURVE",
"112 300 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"213.667 385.667 OFFCURVE",
"240.667 448.667 OFFCURVE",
"268 498 CURVE",
"276.667 499.333 OFFCURVE",
"285 500.667 OFFCURVE",
"293 502 CURVE SMOOTH",
"318 506 LINE",
"288.667 459.333 OFFCURVE",
"258 397 OFFCURVE",
"226 317 CURVE",
"219.333 315.667 OFFCURVE",
"212.833 314.333 OFFCURVE",
"206.5 313 CURVE SMOOTH",
"187 309 LINE"
);
},
{
closed = 1;
nodes = (
"239.667 240.667 OFFCURVE",
"249.333 268.667 OFFCURVE",
"264 306 CURVE",
"314.667 323.333 OFFCURVE",
"370 352.333 OFFCURVE",
"434 395 CURVE SMOOTH",
"439 398 OFFCURVE",
"443 402 OFFCURVE",
"443 408 CURVE SMOOTH",
"443 411 OFFCURVE",
"442 412 OFFCURVE",
"440 412 CURVE SMOOTH",
"436.667 412 OFFCURVE",
"433.667 410.667 OFFCURVE",
"431 408 CURVE",
"385 374.667 OFFCURVE",
"332.667 348.667 OFFCURVE",
"274 330 CURVE",
"306 406.667 OFFCURVE",
"335.333 466.333 OFFCURVE",
"362 509 CURVE",
"373 509 LINE SMOOTH",
"430.333 509 OFFCURVE",
"479.667 498 OFFCURVE",
"521 476 CURVE SMOOTH",
"560 456 OFFCURVE",
"579 431 OFFCURVE",
"579 402 CURVE SMOOTH",
"579 367 OFFCURVE",
"558 336 OFFCURVE",
"519 306 CURVE SMOOTH",
"475 272.667 OFFCURVE",
"415.667 248 OFFCURVE",
"341 232 CURVE SMOOTH",
"315.667 226.667 OFFCURVE",
"279.667 223.333 OFFCURVE",
"233 222 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012179 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01276 947 153 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012118 25 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01217 59 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01236 948 191 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01214 59 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012153 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01239 153 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01257 153 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01272 153 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01291 153 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01297 191 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012113 25 118 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012133 25 118 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012161 153 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012166 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012171 153 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012191 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012189 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012189 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012197 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012197 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 592;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2021-05-11 10:36:16 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{239, -97}";
},
{
name = top;
position = "{403, 533}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"281.667 -94 OFFCURVE",
"325 -70.667 OFFCURVE",
"359 -24 CURVE",
"439 1.333 OFFCURVE",
"499.667 44.667 OFFCURVE",
"541 106 CURVE SMOOTH",
"553.667 124.667 OFFCURVE",
"560 138.667 OFFCURVE",
"560 148 CURVE SMOOTH",
"560 150.667 OFFCURVE",
"559.333 152 OFFCURVE",
"558 152 CURVE SMOOTH",
"553.333 152 OFFCURVE",
"543 139.333 OFFCURVE",
"527 114 CURVE SMOOTH",
"494.333 60 OFFCURVE",
"443.667 23 OFFCURVE",
"375 3 CURVE",
"385.667 23.667 OFFCURVE",
"391 44.667 OFFCURVE",
"391 66 CURVE SMOOTH",
"391 102.667 OFFCURVE",
"377.333 128.667 OFFCURVE",
"350 144 CURVE SMOOTH",
"347.333 145.333 OFFCURVE",
"345.667 145 OFFCURVE",
"345 143 CURVE SMOOTH",
"343.667 139.667 OFFCURVE",
"344 137.667 OFFCURVE",
"346 137 CURVE SMOOTH",
"368 125 OFFCURVE",
"379 102.333 OFFCURVE",
"379 69 CURVE SMOOTH",
"379 45 OFFCURVE",
"373 21.667 OFFCURVE",
"361 -1 CURVE",
"335.5 -5 LINE SMOOTH",
"327 -6 OFFCURVE",
"318.333 -7.333 OFFCURVE",
"309 -8 CURVE SMOOTH",
"201 -14.667 OFFCURVE",
"118.333 40.667 OFFCURVE",
"85 130 CURVE",
"90.333 191.333 OFFCURVE",
"107.667 247.667 OFFCURVE",
"137 301 CURVE SMOOTH",
"170.333 361 OFFCURVE",
"213 407.667 OFFCURVE",
"265 441 CURVE SMOOTH",
"309.667 469.667 OFFCURVE",
"353.667 484 OFFCURVE",
"397 484 CURVE SMOOTH",
"453 484 OFFCURVE",
"488 458 OFFCURVE",
"488 414 CURVE",
"446 416.667 OFFCURVE",
"402.667 411.667 OFFCURVE",
"358 399 CURVE SMOOTH",
"314.667 387 OFFCURVE",
"279.667 370.333 OFFCURVE",
"253 349 CURVE SMOOTH",
"213 315 OFFCURVE",
"193 281.667 OFFCURVE",
"193 249 CURVE SMOOTH",
"193 201 OFFCURVE",
"238.667 167 OFFCURVE",
"304 167 CURVE SMOOTH",
"332 167 OFFCURVE",
"360 172.333 OFFCURVE",
"388 183 CURVE SMOOTH",
"432.667 200.333 OFFCURVE",
"472.333 228 OFFCURVE",
"507 266 CURVE SMOOTH",
"542.333 304.667 OFFCURVE",
"562.667 344 OFFCURVE",
"568 384 CURVE",
"574.667 380.667 OFFCURVE",
"579 379 OFFCURVE",
"581 378 CURVE SMOOTH",
"586 376 LINE",
"588.667 376 OFFCURVE",
"589.667 378 OFFCURVE",
"589 382 CURVE",
"586.333 388.667 OFFCURVE",
"577 393.333 OFFCURVE",
"569 396 CURVE",
"570.333 427.333 OFFCURVE",
"558.667 454.667 OFFCURVE",
"534 478 CURVE SMOOTH",
"513.333 498.667 OFFCURVE",
"487 513.333 OFFCURVE",
"455 522 CURVE SMOOTH",
"429 529.333 OFFCURVE",
"403 533 OFFCURVE",
"377 533 CURVE SMOOTH",
"322.333 533 OFFCURVE",
"267 519.333 OFFCURVE",
"211 492 CURVE SMOOTH",
"157.667 465.333 OFFCURVE",
"115.333 429.333 OFFCURVE",
"84 384 CURVE SMOOTH",
"43.333 325.333 OFFCURVE",
"23 264 OFFCURVE",
"23 200 CURVE SMOOTH",
"23 141.333 OFFCURVE",
"40.667 90.333 OFFCURVE",
"76 47 CURVE",
"84 3 OFFCURVE",
"103 -32 OFFCURVE",
"133 -58 CURVE SMOOTH",
"161 -82 OFFCURVE",
"193 -94 OFFCURVE",
"229 -94 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164.667 -84 OFFCURVE",
"111 -43.333 OFFCURVE",
"91 30 CURVE",
"137.667 -15.333 OFFCURVE",
"195.667 -38 OFFCURVE",
"265 -38 CURVE SMOOTH",
"290.333 -38 OFFCURVE",
"315.667 -35 OFFCURVE",
"341 -29 CURVE",
"309 -65.667 OFFCURVE",
"270.667 -84 OFFCURVE",
"226 -84 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"73 176 OFFCURVE",
"71 192.667 OFFCURVE",
"71 210 CURVE SMOOTH",
"71 254.667 OFFCURVE",
"82.333 298.333 OFFCURVE",
"105 341 CURVE SMOOTH",
"135.667 401 OFFCURVE",
"178.333 446.333 OFFCURVE",
"233 477 CURVE SMOOTH",
"277.667 501 OFFCURVE",
"325.333 513 OFFCURVE",
"376 513 CURVE SMOOTH",
"407.333 513 OFFCURVE",
"433.667 508.667 OFFCURVE",
"455 500 CURVE SMOOTH",
"511 478.667 OFFCURVE",
"542.333 446.667 OFFCURVE",
"549 404 CURVE",
"533.667 408.667 OFFCURVE",
"516.667 411.667 OFFCURVE",
"498 413 CURVE",
"499.333 462.333 OFFCURVE",
"456 494 OFFCURVE",
"392 494 CURVE SMOOTH",
"346.667 494 OFFCURVE",
"301.667 480 OFFCURVE",
"257 452 CURVE SMOOTH",
"204.333 418.667 OFFCURVE",
"161.333 372 OFFCURVE",
"128 312 CURVE SMOOTH",
"102 265.333 OFFCURVE",
"85 214.667 OFFCURVE",
"77 160 CURVE"
);
},
{
closed = 1;
nodes = (
"258 182 OFFCURVE",
"222 210 OFFCURVE",
"222 250 CURVE SMOOTH",
"222 276.667 OFFCURVE",
"237 303 OFFCURVE",
"267 329 CURVE SMOOTH",
"289 348.333 OFFCURVE",
"321.333 364.667 OFFCURVE",
"364 378 CURVE SMOOTH",
"406 391.333 OFFCURVE",
"446.667 398 OFFCURVE",
"486 398 CURVE",
"482.667 381.333 OFFCURVE",
"475.667 364.667 OFFCURVE",
"465 348 CURVE SMOOTH",
"432 295 OFFCURVE",
"358 264 OFFCURVE",
"283 264 CURVE SMOOTH",
"276 264 OFFCURVE",
"272 263 OFFCURVE",
"272 260 CURVE SMOOTH",
"272 258 OFFCURVE",
"276.667 256.333 OFFCURVE",
"286 255 CURVE",
"368.667 252.333 OFFCURVE",
"431 282.667 OFFCURVE",
"473 346 CURVE SMOOTH",
"485.667 364.667 OFFCURVE",
"493.333 382 OFFCURVE",
"496 398 CURVE",
"517.333 396.667 OFFCURVE",
"535 395.333 OFFCURVE",
"551 390 CURVE",
"551.667 352.667 OFFCURVE",
"534 313.667 OFFCURVE",
"498 273 CURVE SMOOTH",
"463.333 235 OFFCURVE",
"424.333 208.667 OFFCURVE",
"381 194 CURVE SMOOTH",
"357.667 186 OFFCURVE",
"335.333 182 OFFCURVE",
"314 182 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 950 78 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012136 951 108 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01290 50 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 21 118 21 134 21 150 21 166 21 182 21 198 21 214 21 230 21 246 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 21 22 21 38 21 54 21 70 21 86 21 102 21 118 21 134 21 150 21 166 21 182 21 198 21 214 21 230 21 246 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 21 22 21 38 21 54 21 70 21 86 21 102 21 118 21 134 21 150 21 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 21 181 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\01258 50 74 50 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 50 25 50 41 50 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01211 50 90 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 78 90 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01228 78 90 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01232 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01256 78 90 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01260 78 90 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 136 118 136 134 136 150 136 166 136 182 136 198 136 214 136 230 136 246 136 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 136 22 136 38 136 54 136 70 136 86 136 102 136 118 136 134 136 150 136 166 136 182 136 198 136 214 136 230 136 246 136 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 136 22 136 38 136 54 136 70 136 86 136 102 136 118 136 134 136 150 136 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 136 181 136 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01245 72 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 948 15 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0126 130 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012125 105 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01211 130 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01228 72 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01230 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01235 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012121 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01299 6 121 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 553;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
lastChange = "2021-05-11 10:36:32 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{282, -165}";
},
{
name = center;
position = "{362, 305}";
},
{
name = top;
position = "{488, 561}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"340 -171 OFFCURVE",
"411.333 -120 OFFCURVE",
"458 -28 CURVE",
"527.333 -14.667 OFFCURVE",
"583.667 10.667 OFFCURVE",
"627 48 CURVE SMOOTH",
"707 117 OFFCURVE",
"747 191 OFFCURVE",
"747 270 CURVE SMOOTH",
"747 331 OFFCURVE",
"721 383 OFFCURVE",
"670 427 CURVE SMOOTH",
"610 478.333 OFFCURVE",
"526.667 508.333 OFFCURVE",
"420 517 CURVE",
"436.667 539 OFFCURVE",
"453.333 550 OFFCURVE",
"470 550 CURVE SMOOTH",
"480.667 550 OFFCURVE",
"492.667 545.333 OFFCURVE",
"506 536 CURVE SMOOTH",
"510 533.333 OFFCURVE",
"513.333 530 OFFCURVE",
"516 526 CURVE SMOOTH",
"518.667 522 OFFCURVE",
"521 520 OFFCURVE",
"523 520 CURVE SMOOTH",
"526.333 520 OFFCURVE",
"528 521.333 OFFCURVE",
"528 524 CURVE SMOOTH",
"528 530 OFFCURVE",
"520.333 538.667 OFFCURVE",
"505 550 CURVE SMOOTH",
"487.667 561.333 OFFCURVE",
"470.333 567 OFFCURVE",
"453 567 CURVE SMOOTH",
"429 567 OFFCURVE",
"405.667 551 OFFCURVE",
"383 519 CURVE",
"365.667 520.333 OFFCURVE",
"348.333 520.333 OFFCURVE",
"331 519 CURVE",
"343.667 547.667 OFFCURVE",
"349.333 569.333 OFFCURVE",
"348 584 CURVE",
"346.667 587.333 OFFCURVE",
"345.333 589.333 OFFCURVE",
"344 590 CURVE SMOOTH",
"342 590.667 OFFCURVE",
"341 590 OFFCURVE",
"341 588 CURVE SMOOTH",
"337.667 569.333 OFFCURVE",
"330.333 546.333 OFFCURVE",
"319 519 CURVE",
"235.667 513.667 OFFCURVE",
"168.667 498.667 OFFCURVE",
"118 474 CURVE SMOOTH",
"52.667 440.667 OFFCURVE",
"20 398.333 OFFCURVE",
"20 347 CURVE SMOOTH",
"20 297.667 OFFCURVE",
"61 260 OFFCURVE",
"133 260 CURVE SMOOTH",
"155.667 260 OFFCURVE",
"182 264 OFFCURVE",
"212 272 CURVE",
"185.333 201.333 OFFCURVE",
"167.667 145.333 OFFCURVE",
"159 104 CURVE SMOOTH",
"152 67 OFFCURVE",
"148 34 OFFCURVE",
"148 4 CURVE SMOOTH",
"148 -38 OFFCURVE",
"156 -74 OFFCURVE",
"170 -103 CURVE SMOOTH",
"192 -148.333 OFFCURVE",
"226 -171 OFFCURVE",
"272 -171 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"241.667 -154 OFFCURVE",
"215.667 -141 OFFCURVE",
"197 -115 CURVE SMOOTH",
"175 -87 OFFCURVE",
"164 -46.667 OFFCURVE",
"164 6 CURVE SMOOTH",
"164 34 OFFCURVE",
"167.667 66.333 OFFCURVE",
"175 103 CURVE SMOOTH",
"183.667 149 OFFCURVE",
"200.667 206.333 OFFCURVE",
"226 275 CURVE",
"249 282.5 LINE SMOOTH",
"257 285 OFFCURVE",
"265 287.667 OFFCURVE",
"273 291 CURVE",
"229 167 OFFCURVE",
"204 70 OFFCURVE",
"198 0 CURVE SMOOTH",
"196.667 -13.333 OFFCURVE",
"216.333 -31 OFFCURVE",
"227 -31 CURVE SMOOTH",
"228.333 -31 OFFCURVE",
"229.667 -30.333 OFFCURVE",
"231 -29 CURVE",
"253.667 8.333 OFFCURVE",
"270.667 35.667 OFFCURVE",
"284 53 CURVE",
"281.333 45.667 OFFCURVE",
"280 38 OFFCURVE",
"280 30 CURVE SMOOTH",
"280 -12.667 OFFCURVE",
"317.667 -34 OFFCURVE",
"393 -34 CURVE SMOOTH",
"407.667 -34 OFFCURVE",
"423.667 -33 OFFCURVE",
"441 -31 CURVE",
"398.333 -108.333 OFFCURVE",
"335 -154 OFFCURVE",
"275 -154 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"321 -6 OFFCURVE",
"291 9.333 OFFCURVE",
"291 40 CURVE SMOOTH",
"291 60 OFFCURVE",
"306 83 OFFCURVE",
"336 109 CURVE SMOOTH",
"337.333 110.333 OFFCURVE",
"338 111.333 OFFCURVE",
"338 112 CURVE SMOOTH",
"338 114 OFFCURVE",
"336.333 115 OFFCURVE",
"333 115 CURVE SMOOTH",
"327 115 OFFCURVE",
"319.667 111.667 OFFCURVE",
"311 105 CURVE SMOOTH",
"298.333 95 OFFCURVE",
"287 81.667 OFFCURVE",
"277 65 CURVE SMOOTH",
"251.667 23.667 OFFCURVE",
"238.333 2.333 OFFCURVE",
"237 1 CURVE",
"243.667 67.667 OFFCURVE",
"272.333 169.667 OFFCURVE",
"323 311 CURVE",
"362.333 328.333 OFFCURVE",
"397.333 347.667 OFFCURVE",
"428 369 CURVE",
"468.667 317.667 OFFCURVE",
"489 250.333 OFFCURVE",
"489 167 CURVE SMOOTH",
"489 110.333 OFFCURVE",
"478.333 56 OFFCURVE",
"457 4 CURVE",
"431 -2.667 OFFCURVE",
"405.667 -6 OFFCURVE",
"381 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"65.333 281 OFFCURVE",
"39 298.667 OFFCURVE",
"39 334 CURVE SMOOTH",
"39 372.667 OFFCURVE",
"75 420.667 OFFCURVE",
"131 454 CURVE SMOOTH",
"177.667 481.333 OFFCURVE",
"238.667 498.667 OFFCURVE",
"314 506 CURVE",
"308.667 492.667 OFFCURVE",
"300 478 OFFCURVE",
"293 461 CURVE SMOOTH",
"291 456 LINE",
"288.333 456.667 OFFCURVE",
"285.667 457 OFFCURVE",
"283 457 CURVE SMOOTH",
"275 457 LINE SMOOTH",
"233 457 OFFCURVE",
"198.333 446.333 OFFCURVE",
"171 421 CURVE SMOOTH",
"146.333 399 OFFCURVE",
"134 375 OFFCURVE",
"134 349 CURVE SMOOTH",
"134 344.333 OFFCURVE",
"134.5 340.167 OFFCURVE",
"135.5 336.5 CURVE SMOOTH",
"136.5 332.833 OFFCURVE",
"138.333 331.333 OFFCURVE",
"141 332 CURVE SMOOTH",
"143.667 332.667 OFFCURVE",
"144.667 334.333 OFFCURVE",
"144 337 CURVE SMOOTH",
"143.333 339 OFFCURVE",
"143 342.667 OFFCURVE",
"143 348 CURVE SMOOTH",
"143 371.333 OFFCURVE",
"154.667 393.667 OFFCURVE",
"178 415 CURVE SMOOTH",
"206 440.333 OFFCURVE",
"238.333 451.667 OFFCURVE",
"275 449 CURVE SMOOTH",
"280.333 449 OFFCURVE",
"284.333 448.667 OFFCURVE",
"287 448 CURVE",
"264.333 400 OFFCURVE",
"243.333 350 OFFCURVE",
"222 298 CURVE",
"178 286.667 OFFCURVE",
"143.333 281 OFFCURVE",
"118 281 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"255 354.667 OFFCURVE",
"275.667 403 OFFCURVE",
"297 447 CURVE",
"310.333 445 OFFCURVE",
"323 441.667 OFFCURVE",
"335 437 CURVE",
"317.667 402.333 OFFCURVE",
"300.333 362.333 OFFCURVE",
"283 317 CURVE",
"235 302 LINE"
);
},
{
closed = 1;
nodes = (
"345 368 OFFCURVE",
"357.333 396.667 OFFCURVE",
"368 422 CURVE",
"387.333 410.667 OFFCURVE",
"404.667 396.333 OFFCURVE",
"420 379 CURVE",
"393.333 364.333 OFFCURVE",
"365 349.333 OFFCURVE",
"333 336 CURVE"
);
},
{
closed = 1;
nodes = (
"495 59.667 OFFCURVE",
"505 112.667 OFFCURVE",
"505 168 CURVE SMOOTH",
"505 252.667 OFFCURVE",
"483.333 322.333 OFFCURVE",
"440 377 CURVE",
"466 395.667 OFFCURVE",
"489.667 416 OFFCURVE",
"511 438 CURVE SMOOTH",
"513 440 OFFCURVE",
"515 443 OFFCURVE",
"515 448 CURVE SMOOTH",
"515 450 OFFCURVE",
"515 451 OFFCURVE",
"514 451 CURVE SMOOTH",
"512.667 451 OFFCURVE",
"511 450 OFFCURVE",
"509 448 CURVE SMOOTH",
"474.333 417.333 OFFCURVE",
"449.333 397.667 OFFCURVE",
"432 387 CURVE",
"414 407 OFFCURVE",
"394.333 422.333 OFFCURVE",
"373 433 CURVE",
"387 463.667 OFFCURVE",
"400.333 488 OFFCURVE",
"413 506 CURVE",
"501.667 498.667 OFFCURVE",
"572.333 473.333 OFFCURVE",
"625 430 CURVE SMOOTH",
"678.333 386 OFFCURVE",
"705 333.667 OFFCURVE",
"705 273 CURVE SMOOTH",
"705 206.333 OFFCURVE",
"672 142.667 OFFCURVE",
"606 82 CURVE SMOOTH",
"569.333 48 OFFCURVE",
"525.667 23.667 OFFCURVE",
"475 9 CURVE"
);
},
{
closed = 1;
nodes = (
"325.667 451.667 OFFCURVE",
"313 454.333 OFFCURVE",
"301 455 CURVE",
"314.333 483 OFFCURVE",
"322.333 500.333 OFFCURVE",
"325 507 CURVE",
"333.667 507.667 OFFCURVE",
"342 508 OFFCURVE",
"350 508 CURVE SMOOTH",
"375 508 LINE",
"364.333 490.667 OFFCURVE",
"352.333 471 OFFCURVE",
"339 447 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012192 48 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01297 952 112 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 48 74 48 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 48 25 48 41 48 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0125 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01229 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\01258 29 74 29 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 29 25 29 41 29 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01227 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01237 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01244 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01250 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01260 48 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 48 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01273 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01278 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 97 118 97 134 97 150 97 166 97 182 97 198 97 214 97 230 97 246 97 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 97 22 97 38 97 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 97 69 97 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012107 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012125 48 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012140 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012142 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012159 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012167 48 192 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012192 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012171 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01231 119 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012146 175 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012114 948 127 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01246 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012175 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012175 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012175 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012125 127 114 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012142 175 146 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012159 175 146 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 724;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
lastChange = "2021-05-11 10:36:57 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{279, -175}";
},
{
name = ogonek;
position = "{284, -167}";
},
{
name = top;
position = "{440, 531}";
},
{
name = topleft;
position = "{20, 609}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"325.333 -171 OFFCURVE",
"356.333 -156.667 OFFCURVE",
"381 -128 CURVE SMOOTH",
"409 -97.333 OFFCURVE",
"423 -56.667 OFFCURVE",
"423 -6 CURVE SMOOTH",
"423 -2.667 OFFCURVE",
"423 0 OFFCURVE",
"423 3 CURVE SMOOTH",
"422 12 LINE",
"446.667 26.667 OFFCURVE",
"468.667 43.667 OFFCURVE",
"488 63 CURVE SMOOTH",
"511.333 87.667 OFFCURVE",
"523 111 OFFCURVE",
"523 133 CURVE SMOOTH",
"523 164.333 OFFCURVE",
"504 180 OFFCURVE",
"466 180 CURVE SMOOTH",
"432.667 180 OFFCURVE",
"394.667 166 OFFCURVE",
"352 138 CURVE",
"310.667 177.333 OFFCURVE",
"266.667 197.667 OFFCURVE",
"220 199 CURVE SMOOTH",
"217.333 199 OFFCURVE",
"216 197.667 OFFCURVE",
"216 195 CURVE SMOOTH",
"216 192.333 OFFCURVE",
"217.333 191 OFFCURVE",
"220 191 CURVE SMOOTH",
"264 189.667 OFFCURVE",
"305 170 OFFCURVE",
"343 132 CURVE",
"312.333 110.667 OFFCURVE",
"279.667 80.667 OFFCURVE",
"245 42 CURVE SMOOTH",
"244.333 41.333 OFFCURVE",
"243.333 38.667 OFFCURVE",
"242 34 CURVE SMOOTH",
"240.667 30 OFFCURVE",
"240.667 28 OFFCURVE",
"242 28 CURVE SMOOTH",
"242.667 28 OFFCURVE",
"244.667 29.667 OFFCURVE",
"248 33 CURVE SMOOTH",
"278.667 69 OFFCURVE",
"313.667 98.667 OFFCURVE",
"353 122 CURVE",
"381 90 OFFCURVE",
"398.333 57.333 OFFCURVE",
"405 24 CURVE",
"355.667 -6 OFFCURVE",
"305.333 -21 OFFCURVE",
"254 -21 CURVE SMOOTH",
"203.333 -21 OFFCURVE",
"162.667 -6.667 OFFCURVE",
"132 22 CURVE",
"129.333 40.667 OFFCURVE",
"128 61.333 OFFCURVE",
"128 84 CURVE SMOOTH",
"128 148 OFFCURVE",
"144 212.667 OFFCURVE",
"176 278 CURVE",
"262.667 288 OFFCURVE",
"350 293 OFFCURVE",
"438 293 CURVE SMOOTH",
"449.333 293 OFFCURVE",
"455 295.333 OFFCURVE",
"455 300 CURVE SMOOTH",
"455 304 OFFCURVE",
"451 306 OFFCURVE",
"444 306 CURVE SMOOTH",
"268.5 305.5 LINE SMOOTH",
"226 305 OFFCURVE",
"200 304.667 OFFCURVE",
"190 304 CURVE",
"242.667 395.333 OFFCURVE",
"314.667 453.667 OFFCURVE",
"406 479 CURVE SMOOTH",
"408.667 479.667 OFFCURVE",
"409.333 481.333 OFFCURVE",
"408 484 CURVE SMOOTH",
"407.333 486.667 OFFCURVE",
"405.667 487.667 OFFCURVE",
"403 487 CURVE SMOOTH",
"300.333 458.333 OFFCURVE",
"222.333 397 OFFCURVE",
"169 303 CURVE",
"125 299 LINE",
"161 362.333 OFFCURVE",
"204.333 412.333 OFFCURVE",
"255 449 CURVE SMOOTH",
"312.333 490.333 OFFCURVE",
"374.333 511 OFFCURVE",
"441 511 CURVE SMOOTH",
"483.667 511 OFFCURVE",
"512 503.333 OFFCURVE",
"526 488 CURVE",
"498 460 OFFCURVE",
"486 435 OFFCURVE",
"486 413 CURVE SMOOTH",
"486 398 OFFCURVE",
"493 391 OFFCURVE",
"508 391 CURVE SMOOTH",
"532 391 OFFCURVE",
"548.667 403 OFFCURVE",
"558 427 CURVE SMOOTH",
"560.667 433 OFFCURVE",
"562 440.667 OFFCURVE",
"562 450 CURVE SMOOTH",
"562 467.333 OFFCURVE",
"556.667 482.667 OFFCURVE",
"546 496 CURVE",
"560 514 OFFCURVE",
"575 529.333 OFFCURVE",
"591 542 CURVE SMOOTH",
"593 544 OFFCURVE",
"594 546 OFFCURVE",
"594 548 CURVE SMOOTH",
"594 550 OFFCURVE",
"592 552 OFFCURVE",
"588 552 CURVE SMOOTH",
"585 552 OFFCURVE",
"583 551 OFFCURVE",
"581 549 CURVE SMOOTH",
"569.667 540.333 OFFCURVE",
"555.333 525.333 OFFCURVE",
"538 504 CURVE",
"516.667 524 OFFCURVE",
"482.667 534 OFFCURVE",
"436 534 CURVE SMOOTH",
"363.333 534 OFFCURVE",
"292.667 509.667 OFFCURVE",
"224 461 CURVE SMOOTH",
"157.333 414.333 OFFCURVE",
"107.667 357.333 OFFCURVE",
"75 290 CURVE",
"55 286 LINE SMOOTH",
"41 283 OFFCURVE",
"35 273 OFFCURVE",
"35 259 CURVE SMOOTH",
"35 255 OFFCURVE",
"37 253 OFFCURVE",
"40 253 CURVE SMOOTH",
"41 253 OFFCURVE",
"41 253 OFFCURVE",
"42 253 CURVE",
"48.667 255.667 OFFCURVE",
"53.333 256.667 OFFCURVE",
"60 258 CURVE",
"43.333 218 OFFCURVE",
"35 178.667 OFFCURVE",
"35 140 CURVE SMOOTH",
"35 65.333 OFFCURVE",
"65.333 12.667 OFFCURVE",
"126 -18 CURVE",
"139.333 -67.333 OFFCURVE",
"161.667 -105.667 OFFCURVE",
"193 -133 CURVE SMOOTH",
"222.333 -158.333 OFFCURVE",
"254 -171 OFFCURVE",
"288 -171 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"254.333 -161 OFFCURVE",
"226.667 -150 OFFCURVE",
"202 -128 CURVE SMOOTH",
"174.667 -102.667 OFFCURVE",
"154.667 -68.333 OFFCURVE",
"142 -25 CURVE",
"170 -36.333 OFFCURVE",
"200.333 -42 OFFCURVE",
"233 -42 CURVE SMOOTH",
"293.667 -42 OFFCURVE",
"351.667 -26.667 OFFCURVE",
"407 4 CURVE",
"407.667 2 OFFCURVE",
"408 -1.333 OFFCURVE",
"408 -6 CURVE SMOOTH",
"408 -97.104 OFFCURVE",
"357.025 -161 OFFCURVE",
"285 -161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"91.667 70.667 OFFCURVE",
"80 107.333 OFFCURVE",
"80 150 CURVE SMOOTH",
"80 186 OFFCURVE",
"90 223 OFFCURVE",
"106 261 CURVE SMOOTH",
"109 268 LINE",
"116.333 269.333 OFFCURVE",
"124 270 OFFCURVE",
"131.5 271.5 CURVE SMOOTH",
"155 275 LINE",
"127 215 OFFCURVE",
"113 152.667 OFFCURVE",
"113 88 CURVE SMOOTH",
"113 70.667 OFFCURVE",
"113.667 54.667 OFFCURVE",
"115 40 CURVE"
);
},
{
closed = 1;
nodes = (
"409.333 65.333 OFFCURVE",
"391 97 OFFCURVE",
"363 127 CURVE",
"405.667 151 OFFCURVE",
"445.333 168 OFFCURVE",
"472 168 CURVE SMOOTH",
"493.333 168 OFFCURVE",
"504 159.667 OFFCURVE",
"504 143 CURVE SMOOTH",
"504 130.333 OFFCURVE",
"498.667 116.667 OFFCURVE",
"488 102 CURVE SMOOTH",
"470 76 OFFCURVE",
"446.667 52.667 OFFCURVE",
"418 32 CURVE"
);
},
{
closed = 1;
nodes = (
"508 401 OFFCURVE",
"506 404 OFFCURVE",
"506 411 CURVE SMOOTH",
"506 412 OFFCURVE",
"506 413 OFFCURVE",
"506 414 CURVE SMOOTH",
"508 431.333 OFFCURVE",
"517 452.667 OFFCURVE",
"533 478 CURVE",
"539 467 OFFCURVE",
"542 457 OFFCURVE",
"542 446 CURVE SMOOTH",
"542 436 OFFCURVE",
"539 427 OFFCURVE",
"535 417 CURVE SMOOTH",
"530.333 406.333 OFFCURVE",
"523 401 OFFCURVE",
"513 401 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 950 49 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 37 181 37 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\012116 43 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 947 87 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012136 24 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012103 8 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 24 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01211 43 116 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01222 24 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 24 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01231 8 103 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012107 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01298 63 81 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012132 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012151 63 81 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 522;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"138 -147 OFFCURVE",
"140 -147 OFFCURVE",
"142 -146 CURVE",
"194.667 -129.333 OFFCURVE",
"254.667 -85.333 OFFCURVE",
"322 -14 CURVE SMOOTH",
"385.333 54.667 OFFCURVE",
"439.333 130 OFFCURVE",
"484 212 CURVE",
"507.333 212 OFFCURVE",
"527 209.667 OFFCURVE",
"543 205 CURVE SMOOTH",
"553 201.667 OFFCURVE",
"558 204.667 OFFCURVE",
"558 214 CURVE SMOOTH",
"558 216 OFFCURVE",
"556.667 217.333 OFFCURVE",
"554 218 CURVE SMOOTH",
"537.333 222.667 OFFCURVE",
"517 226 OFFCURVE",
"493 228 CURVE",
"535.667 310.667 OFFCURVE",
"557 378 OFFCURVE",
"557 430 CURVE SMOOTH",
"557 475.333 OFFCURVE",
"540.333 510.667 OFFCURVE",
"507 536 CURVE SMOOTH",
"477.667 558.667 OFFCURVE",
"437.333 570 OFFCURVE",
"386 570 CURVE SMOOTH",
"368.667 570 OFFCURVE",
"350.667 568.667 OFFCURVE",
"332 566 CURVE",
"304 576 OFFCURVE",
"273.333 581 OFFCURVE",
"240 581 CURVE SMOOTH",
"189.333 581 OFFCURVE",
"143.667 570.333 OFFCURVE",
"103 549 CURVE SMOOTH",
"63 527.667 OFFCURVE",
"43 502.333 OFFCURVE",
"43 473 CURVE SMOOTH",
"43 453.667 OFFCURVE",
"52.667 435 OFFCURVE",
"72 417 CURVE",
"68 412 LINE SMOOTH",
"39.333 372.667 OFFCURVE",
"25 334.667 OFFCURVE",
"25 298 CURVE SMOOTH",
"25 238 OFFCURVE",
"66.667 198 OFFCURVE",
"124 198 CURVE SMOOTH",
"192 198 OFFCURVE",
"250.333 243.333 OFFCURVE",
"299 334 CURVE",
"317.667 332.667 OFFCURVE",
"337.333 332 OFFCURVE",
"356 332 CURVE SMOOTH",
"358.667 332 OFFCURVE",
"360 333.333 OFFCURVE",
"360 336 CURVE SMOOTH",
"360 338.667 OFFCURVE",
"358.667 340 OFFCURVE",
"356 340 CURVE SMOOTH",
"338.667 340 OFFCURVE",
"321.667 340.667 OFFCURVE",
"303 342 CURVE",
"321 376.667 OFFCURVE",
"336 415.667 OFFCURVE",
"348 459 CURVE SMOOTH",
"351.333 468.333 OFFCURVE",
"349.667 473 OFFCURVE",
"343 473 CURVE SMOOTH",
"341 473 OFFCURVE",
"339.333 471.333 OFFCURVE",
"338 468 CURVE SMOOTH",
"323.333 421.333 OFFCURVE",
"306.333 378.667 OFFCURVE",
"285 344 CURVE",
"240.333 350 OFFCURVE",
"202 359.667 OFFCURVE",
"170 373 CURVE SMOOTH",
"143.333 384.333 OFFCURVE",
"122 395.667 OFFCURVE",
"106 407 CURVE",
"157.332 476.299 OFFCURVE",
"254.018 532.629 OFFCURVE",
"338 551 CURVE",
"400.667 520.333 OFFCURVE",
"432 465.333 OFFCURVE",
"432 386 CURVE SMOOTH",
"432 333.333 OFFCURVE",
"421.333 280 OFFCURVE",
"400 226 CURVE",
"334.667 220 OFFCURVE",
"273.333 206 OFFCURVE",
"216 184 CURVE SMOOTH",
"152.667 158.667 OFFCURVE",
"110 129 OFFCURVE",
"88 95 CURVE SMOOTH",
"86 93 OFFCURVE",
"85 88 OFFCURVE",
"85 82 CURVE SMOOTH",
"85 79 OFFCURVE",
"86 75 OFFCURVE",
"86 71 CURVE SMOOTH",
"87.333 59.667 OFFCURVE",
"89.667 54 OFFCURVE",
"93 54 CURVE SMOOTH",
"93.667 54 OFFCURVE",
"94 54.333 OFFCURVE",
"94 55 CURVE",
"117.333 88.333 OFFCURVE",
"158 119.333 OFFCURVE",
"216 148 CURVE SMOOTH",
"271.333 174.667 OFFCURVE",
"329.333 193.333 OFFCURVE",
"390 204 CURVE",
"364.667 150 OFFCURVE",
"327.667 96 OFFCURVE",
"279 42 CURVE SMOOTH",
"260.333 22 OFFCURVE",
"225 -14 OFFCURVE",
"169 -66 CURVE SMOOTH",
"167 -68 OFFCURVE",
"166.333 -70.333 OFFCURVE",
"167 -73 CURVE SMOOTH",
"167.667 -75.667 OFFCURVE",
"169 -76 OFFCURVE",
"171 -74 CURVE SMOOTH",
"257 5 LINE SMOOTH",
"278.333 25 OFFCURVE",
"292.667 39 OFFCURVE",
"300 47 CURVE SMOOTH",
"349.333 99.667 OFFCURVE",
"386.333 153 OFFCURVE",
"411 207 CURVE",
"416.333 208.333 OFFCURVE",
"422 209.167 OFFCURVE",
"428 209.5 CURVE SMOOTH",
"445 211 LINE",
"402.333 129 OFFCURVE",
"354 57 OFFCURVE",
"300 -5 CURVE SMOOTH",
"240.667 -72.333 OFFCURVE",
"186.333 -114 OFFCURVE",
"137 -130 CURVE SMOOTH",
"133 -131.333 OFFCURVE",
"131 -134 OFFCURVE",
"131 -138 CURVE SMOOTH",
"131 -144 OFFCURVE",
"133 -147 OFFCURVE",
"137 -147 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85.667 221 OFFCURVE",
"58 248 OFFCURVE",
"58 292 CURVE SMOOTH",
"58 324.667 OFFCURVE",
"71.333 359.333 OFFCURVE",
"98 396 CURVE",
"114.667 384.667 OFFCURVE",
"135.667 373.667 OFFCURVE",
"161 363 CURVE SMOOTH",
"191 350.333 OFFCURVE",
"230.667 341.333 OFFCURVE",
"280 336 CURVE",
"233.333 259.333 OFFCURVE",
"182.333 221 OFFCURVE",
"127 221 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"67.667 444.333 OFFCURVE",
"61 459.333 OFFCURVE",
"61 474 CURVE SMOOTH",
"61 500.667 OFFCURVE",
"79 523.667 OFFCURVE",
"115 543 CURVE SMOOTH",
"151.667 562.333 OFFCURVE",
"192.667 572 OFFCURVE",
"238 572 CURVE SMOOTH",
"264 572 OFFCURVE",
"288 568.667 OFFCURVE",
"310 562 CURVE",
"212 540.667 OFFCURVE",
"135.667 496.333 OFFCURVE",
"81 429 CURVE"
);
},
{
closed = 1;
nodes = (
"439.333 278 OFFCURVE",
"449 330 OFFCURVE",
"449 384 CURVE SMOOTH",
"449 464 OFFCURVE",
"418.333 520.667 OFFCURVE",
"357 554 CURVE",
"369.667 556 OFFCURVE",
"382.333 557 OFFCURVE",
"395 557 CURVE SMOOTH",
"478.333 557 OFFCURVE",
"520 518.667 OFFCURVE",
"520 442 CURVE SMOOTH",
"520 388.667 OFFCURVE",
"498 317.667 OFFCURVE",
"454 229 CURVE",
"437 229 LINE SMOOTH",
"431 229 OFFCURVE",
"425.333 228.667 OFFCURVE",
"420 228 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 951 120 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012138 952 85 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0120 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 6 181 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01211 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01221 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01226 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01230 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\01258 85 74 85 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 85 25 85 41 85 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01252 85 138 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01264 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01269 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012105 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012112 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012140 85 138 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012134 112 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 947 117 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012112 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01211 112 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012134 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01230 112 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01252 117 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012117 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012105 112 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012112 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 534;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2021-05-11 10:37:22 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{216, 0}";
},
{
name = top;
position = "{486, 562}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"249 -324 OFFCURVE",
"288.667 -307.333 OFFCURVE",
"334 -274 CURVE SMOOTH",
"384 -237.333 OFFCURVE",
"425 -188.667 OFFCURVE",
"457 -128 CURVE SMOOTH",
"479.667 -86 OFFCURVE",
"500.667 -36.667 OFFCURVE",
"520 20 CURVE",
"534 22 OFFCURVE",
"547.667 23 OFFCURVE",
"561 23 CURVE SMOOTH",
"569 23 OFFCURVE",
"573 25.333 OFFCURVE",
"573 30 CURVE SMOOTH",
"573 34 OFFCURVE",
"568 36 OFFCURVE",
"558 36 CURVE SMOOTH",
"547.333 36 OFFCURVE",
"535.667 35.333 OFFCURVE",
"525 34 CURVE",
"558.333 127.333 OFFCURVE",
"579.333 216 OFFCURVE",
"590 304 CURVE SMOOTH",
"591 311 OFFCURVE",
"581 316 OFFCURVE",
"571 316 CURVE SMOOTH",
"569 316 OFFCURVE",
"568 316 OFFCURVE",
"567 316 CURVE",
"563.667 322.667 OFFCURVE",
"558.333 319.333 OFFCURVE",
"551 306 CURVE SMOOTH",
"503 212.667 OFFCURVE",
"444 138.667 OFFCURVE",
"374 84 CURVE",
"353.333 124.667 OFFCURVE",
"321.667 145 OFFCURVE",
"279 145 CURVE SMOOTH",
"268.333 145 OFFCURVE",
"258 143.667 OFFCURVE",
"248 141 CURVE SMOOTH",
"240 139.667 OFFCURVE",
"231 133.667 OFFCURVE",
"221 123 CURVE SMOOTH",
"210 110 OFFCURVE",
"204 98 OFFCURVE",
"204 87 CURVE SMOOTH",
"204 83 OFFCURVE",
"205 81 OFFCURVE",
"208 82 CURVE SMOOTH",
"211 82 OFFCURVE",
"212 84 OFFCURVE",
"212 88 CURVE SMOOTH",
"212 97 OFFCURVE",
"217 107 OFFCURVE",
"227 117 CURVE SMOOTH",
"237 127 OFFCURVE",
"244.333 132.333 OFFCURVE",
"249 133 CURVE SMOOTH",
"257.667 135 OFFCURVE",
"266.667 136 OFFCURVE",
"276 136 CURVE SMOOTH",
"316 136 OFFCURVE",
"345 116 OFFCURVE",
"363 76 CURVE",
"307 34 OFFCURVE",
"256 13 OFFCURVE",
"208 13 CURVE SMOOTH",
"154 13 OFFCURVE",
"118 37 OFFCURVE",
"102 86 CURVE",
"118 139.333 OFFCURVE",
"141.667 193 OFFCURVE",
"173 247 CURVE",
"195.667 242.333 OFFCURVE",
"222.333 240 OFFCURVE",
"253 240 CURVE SMOOTH",
"300.333 240 OFFCURVE",
"352 250.667 OFFCURVE",
"408 272 CURVE SMOOTH",
"460.667 292 OFFCURVE",
"504.667 317.333 OFFCURVE",
"540 348 CURVE SMOOTH",
"592 392.667 OFFCURVE",
"618 433.333 OFFCURVE",
"618 470 CURVE SMOOTH",
"618 518 OFFCURVE",
"569 548 OFFCURVE",
"497 548 CURVE SMOOTH",
"463 548 OFFCURVE",
"427 541.333 OFFCURVE",
"389 528 CURVE SMOOTH",
"331 506.667 OFFCURVE",
"276 475.667 OFFCURVE",
"224 435 CURVE SMOOTH",
"173.333 393.667 OFFCURVE",
"130.667 350.333 OFFCURVE",
"100 301 CURVE",
"64 323.667 OFFCURVE",
"46 354.667 OFFCURVE",
"46 394 CURVE SMOOTH",
"46 433.333 OFFCURVE",
"61.333 468.667 OFFCURVE",
"92 500 CURVE SMOOTH",
"122.667 532.667 OFFCURVE",
"159 549 OFFCURVE",
"201 549 CURVE SMOOTH",
"205.667 549 OFFCURVE",
"208 550.667 OFFCURVE",
"208 554 CURVE SMOOTH",
"208 559.333 OFFCURVE",
"203.667 562 OFFCURVE",
"195 562 CURVE SMOOTH",
"147.667 560.667 OFFCURVE",
"107.667 542.667 OFFCURVE",
"75 508 CURVE SMOOTH",
"41.667 472.667 OFFCURVE",
"25 433.333 OFFCURVE",
"25 390 CURVE SMOOTH",
"25 344 OFFCURVE",
"45.667 307.333 OFFCURVE",
"87 280 CURVE",
"60.333 233.333 OFFCURVE",
"47 188.667 OFFCURVE",
"47 146 CURVE SMOOTH",
"47 96.667 OFFCURVE",
"57.333 58.667 OFFCURVE",
"78 32 CURVE",
"75.333 9.333 OFFCURVE",
"73 -12.333 OFFCURVE",
"73 -31 CURVE SMOOTH",
"73 -82.333 OFFCURVE",
"85.667 -123.667 OFFCURVE",
"111 -155 CURVE SMOOTH",
"133.667 -183.667 OFFCURVE",
"163 -200 OFFCURVE",
"199 -204 CURVE",
"179.667 -236.667 OFFCURVE",
"170 -263 OFFCURVE",
"170 -283 CURVE SMOOTH",
"170 -310.333 OFFCURVE",
"185 -324 OFFCURVE",
"215 -324 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"169.333 -194 OFFCURVE",
"141 -179.333 OFFCURVE",
"119 -152 CURVE SMOOTH",
"95 -123.333 OFFCURVE",
"83 -83 OFFCURVE",
"83 -31 CURVE SMOOTH",
"83 -13.667 OFFCURVE",
"84.333 3.333 OFFCURVE",
"87 22 CURVE",
"110 -1 OFFCURVE",
"143 -13 OFFCURVE",
"183 -13 CURVE SMOOTH",
"239 -13 OFFCURVE",
"300 13 OFFCURVE",
"367 65 CURVE",
"374 45 OFFCURVE",
"377 24 OFFCURVE",
"377 1 CURVE SMOOTH",
"377 -6 OFFCURVE",
"377 -13 OFFCURVE",
"376 -20 CURVE",
"308 -62.667 OFFCURVE",
"250.667 -120 OFFCURVE",
"204 -196 CURVE"
);
},
{
closed = 1;
nodes = (
"268.667 -132.333 OFFCURVE",
"315.333 -81.333 OFFCURVE",
"372 -42 CURVE",
"372 -46 LINE",
"363.333 -87.333 OFFCURVE",
"345 -122 OFFCURVE",
"317 -150 CURVE SMOOTH",
"291.667 -175.333 OFFCURVE",
"263.333 -190.333 OFFCURVE",
"232 -195 CURVE"
);
},
{
closed = 1;
nodes = (
"207 -314 OFFCURVE",
"198 -304.333 OFFCURVE",
"198 -285 CURVE SMOOTH",
"198 -266.333 OFFCURVE",
"207.667 -239.333 OFFCURVE",
"227 -204 CURVE",
"264.333 -200.667 OFFCURVE",
"297.667 -185 OFFCURVE",
"327 -157 CURVE SMOOTH",
"359 -126.333 OFFCURVE",
"378 -86 OFFCURVE",
"388 -36 CURVE SMOOTH",
"389 -31 LINE",
"418.333 -12.333 OFFCURVE",
"446.333 0.667 OFFCURVE",
"477 10 CURVE",
"458.333 -48 OFFCURVE",
"439.333 -96.333 OFFCURVE",
"420 -135 CURVE SMOOTH",
"394.667 -186.333 OFFCURVE",
"361.333 -229.667 OFFCURVE",
"320 -265 CURVE SMOOTH",
"282.667 -297.667 OFFCURVE",
"251 -314 OFFCURVE",
"225 -314 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93.333 119.667 OFFCURVE",
"92 136.333 OFFCURVE",
"92 155 CURVE SMOOTH",
"92 188.333 OFFCURVE",
"100.667 224.333 OFFCURVE",
"118 263 CURVE",
"131.333 257.667 OFFCURVE",
"146.333 252.667 OFFCURVE",
"161 250 CURVE",
"133.667 202.667 OFFCURVE",
"112 154.333 OFFCURVE",
"96 105 CURVE"
);
},
{
closed = 1;
nodes = (
"393 20.667 OFFCURVE",
"389 48.667 OFFCURVE",
"379 74 CURVE",
"442.333 125.333 OFFCURVE",
"497.667 189.667 OFFCURVE",
"545 267 CURVE",
"527.667 183 OFFCURVE",
"507 104.333 OFFCURVE",
"483 27 CURVE",
"450.333 18.333 OFFCURVE",
"419.667 6 OFFCURVE",
"391 -10 CURVE"
);
},
{
closed = 1;
nodes = (
"226.333 268 OFFCURVE",
"206.667 269.333 OFFCURVE",
"188 272 CURVE",
"230.667 338.667 OFFCURVE",
"279.333 391.667 OFFCURVE",
"334 431 CURVE SMOOTH",
"394.667 475 OFFCURVE",
"457 497 OFFCURVE",
"521 497 CURVE SMOOTH",
"523.667 497 OFFCURVE",
"525 498.333 OFFCURVE",
"525 501 CURVE SMOOTH",
"525 503.667 OFFCURVE",
"523.667 505 OFFCURVE",
"521 505 CURVE SMOOTH",
"453.667 505 OFFCURVE",
"388.333 482.333 OFFCURVE",
"325 437 CURVE SMOOTH",
"268.333 396.333 OFFCURVE",
"218.667 342 OFFCURVE",
"176 274 CURVE",
"159.333 276.667 OFFCURVE",
"144 280.667 OFFCURVE",
"130 286 CURVE",
"157.333 334.667 OFFCURVE",
"194.333 379.333 OFFCURVE",
"241 420 CURVE SMOOTH",
"290.333 462 OFFCURVE",
"341.333 493.333 OFFCURVE",
"394 514 CURVE SMOOTH",
"428.667 527.333 OFFCURVE",
"461.333 534 OFFCURVE",
"492 534 CURVE SMOOTH",
"553.333 534 OFFCURVE",
"594 508 OFFCURVE",
"594 468 CURVE SMOOTH",
"594 432.667 OFFCURVE",
"565.667 394.667 OFFCURVE",
"509 354 CURVE SMOOTH",
"427.667 296.667 OFFCURVE",
"341 268 OFFCURVE",
"249 268 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012137 951 125 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012149 951 21 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01257 951 110 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0122 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 57 118 57 134 57 150 57 166 57 182 57 198 57 214 57 230 57 246 57 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 57 22 57 38 57 54 57 70 57 86 57 102 57 118 57 134 57 150 57 166 57 182 57 198 57 214 57 230 57 246 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 57 22 57 38 57 54 57 70 57 86 57 102 57 118 57 134 57 150 57 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 57 181 57 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01214 110 57 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012170 21 186 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01240 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01247 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01270 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01283 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 137 118 137 134 137 150 137 166 137 182 137 198 137 214 137 230 137 246 137 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 137 22 137 38 137 54 137 70 137 86 137 102 137 118 137 134 137 150 137 166 137 182 137 198 137 214 137 230 137 246 137 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 137 22 137 38 137 54 137 70 137 86 137 102 137 118 137 134 137 150 137 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 137 181 137 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012137 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01286 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01293 125 149 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012175 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012175 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012112 57 175 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012137 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012149 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012191 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012108 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012146 949 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012161 949 81 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 949 155 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 108 129 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0122 155 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01214 17 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01240 108 129 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 108 129 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01247 81 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 81 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01270 155 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 108 129 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01283 108 129 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01293 108 129 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012161 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012112 108 129 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012146 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012155 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012157 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012157 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012165 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012175 108 129 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 572;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"189 -45 OFFCURVE",
"254 -22 OFFCURVE",
"327 26 CURVE SMOOTH",
"400.333 74 OFFCURVE",
"456.333 127.333 OFFCURVE",
"495 186 CURVE",
"559 186 OFFCURVE",
"613.333 188.333 OFFCURVE",
"656 191 CURVE",
"655 182 LINE SMOOTH",
"652.333 152.667 OFFCURVE",
"650 128.667 OFFCURVE",
"650 106 CURVE SMOOTH",
"650 38 OFFCURVE",
"669.333 -0.333 OFFCURVE",
"708 -9 CURVE SMOOTH",
"711 -10 OFFCURVE",
"715 -10 OFFCURVE",
"718 -10 CURVE SMOOTH",
"735 -10 OFFCURVE",
"757 -2 OFFCURVE",
"783 14 CURVE SMOOTH",
"812.333 33.333 OFFCURVE",
"832.333 52 OFFCURVE",
"843 70 CURVE SMOOTH",
"845 72 OFFCURVE",
"848 78 OFFCURVE",
"848 86 CURVE SMOOTH",
"848 89 OFFCURVE",
"847 90 OFFCURVE",
"845 90 CURVE SMOOTH",
"842.333 90 OFFCURVE",
"838.667 86 OFFCURVE",
"834 78 CURVE SMOOTH",
"813.808 45.187 OFFCURVE",
"769.41 14 OFFCURVE",
"737 14 CURVE SMOOTH",
"703.667 14 OFFCURVE",
"687 47.667 OFFCURVE",
"687 115 CURVE SMOOTH",
"687 137.667 OFFCURVE",
"689.333 164.333 OFFCURVE",
"692 195 CURVE SMOOTH",
"692.667 203 OFFCURVE",
"701.667 207.667 OFFCURVE",
"719 209 CURVE SMOOTH",
"739.667 210.333 OFFCURVE",
"752.5 212.667 OFFCURVE",
"757.5 216 CURVE SMOOTH",
"762.5 219.333 OFFCURVE",
"765 223 OFFCURVE",
"765 227 CURVE SMOOTH",
"765 229 OFFCURVE",
"764.333 230 OFFCURVE",
"763 230 CURVE SMOOTH",
"760.333 230 OFFCURVE",
"757.333 228.667 OFFCURVE",
"754 226 CURVE SMOOTH",
"744.667 220.667 OFFCURVE",
"725.667 215.667 OFFCURVE",
"695 213 CURVE",
"703.667 273 OFFCURVE",
"724.333 341 OFFCURVE",
"757 417 CURVE SMOOTH",
"795.667 509.667 OFFCURVE",
"832.667 553.333 OFFCURVE",
"868 548 CURVE SMOOTH",
"877.333 546.667 OFFCURVE",
"882 547.333 OFFCURVE",
"882 550 CURVE SMOOTH",
"882 555 OFFCURVE",
"875 558 OFFCURVE",
"861 558 CURVE SMOOTH",
"820 558 OFFCURVE",
"777 514 OFFCURVE",
"732 425 CURVE SMOOTH",
"694.667 349 OFFCURVE",
"669.667 279 OFFCURVE",
"659 211 CURVE",
"505 207 LINE",
"517 231 OFFCURVE",
"526.667 257.333 OFFCURVE",
"536 284 CURVE",
"576.667 310 OFFCURVE",
"607 344.333 OFFCURVE",
"627 387 CURVE SMOOTH",
"628.333 390.333 OFFCURVE",
"627.667 392.333 OFFCURVE",
"625 393 CURVE",
"623 394.333 OFFCURVE",
"621.333 393.667 OFFCURVE",
"620 391 CURVE SMOOTH",
"602.667 353 OFFCURVE",
"575.667 321.333 OFFCURVE",
"539 296 CURVE",
"550.333 336 OFFCURVE",
"556 373.667 OFFCURVE",
"556 409 CURVE SMOOTH",
"556 423 OFFCURVE",
"555 436.667 OFFCURVE",
"553 450 CURVE SMOOTH",
"545 514 OFFCURVE",
"510.667 549 OFFCURVE",
"472 549 CURVE SMOOTH",
"461.333 549 OFFCURVE",
"451.333 546.333 OFFCURVE",
"442 541 CURVE",
"410.667 586.333 OFFCURVE",
"373 609 OFFCURVE",
"329 609 CURVE SMOOTH",
"301.667 609 OFFCURVE",
"276.333 601.333 OFFCURVE",
"253 586 CURVE SMOOTH",
"211.667 558 OFFCURVE",
"191 514.667 OFFCURVE",
"191 456 CURVE SMOOTH",
"191 403.333 OFFCURVE",
"208 356.667 OFFCURVE",
"242 316 CURVE SMOOTH",
"283 267 OFFCURVE",
"337 243 OFFCURVE",
"404 243 CURVE SMOOTH",
"415 243 OFFCURVE",
"427 245 OFFCURVE",
"438 247 CURVE",
"417 205 LINE",
"270.333 199.667 OFFCURVE",
"169.333 188.667 OFFCURVE",
"112 170 CURVE SMOOTH",
"47 148 OFFCURVE",
"12 109 OFFCURVE",
"12 52 CURVE SMOOTH",
"12 -1 OFFCURVE",
"52 -38 OFFCURVE",
"108 -44 CURVE SMOOTH",
"116 -45 OFFCURVE",
"123 -45 OFFCURVE",
"131 -45 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"144.333 -20 OFFCURVE",
"134.667 -19.333 OFFCURVE",
"124 -18 CURVE SMOOTH",
"98 -15.333 OFFCURVE",
"75.333 -7.333 OFFCURVE",
"56 6 CURVE SMOOTH",
"35 20 OFFCURVE",
"24 38 OFFCURVE",
"24 60 CURVE SMOOTH",
"24 97 OFFCURVE",
"52 124 OFFCURVE",
"107 143 CURVE SMOOTH",
"179 167 OFFCURVE",
"278.667 182 OFFCURVE",
"406 188 CURVE",
"375.333 137.333 OFFCURVE",
"336.667 96.333 OFFCURVE",
"290 65 CURVE SMOOTH",
"242.667 32.333 OFFCURVE",
"193.667 16 OFFCURVE",
"143 16 CURVE SMOOTH",
"132.333 16 OFFCURVE",
"122.667 16.667 OFFCURVE",
"112 18 CURVE SMOOTH",
"109.333 18 OFFCURVE",
"108 16.667 OFFCURVE",
"108 14 CURVE",
"107.333 12 OFFCURVE",
"108.333 10.667 OFFCURVE",
"111 10 CURVE SMOOTH",
"121.667 8.667 OFFCURVE",
"131.333 8 OFFCURVE",
"142 8 CURVE SMOOTH",
"194.667 8 OFFCURVE",
"246.333 25.333 OFFCURVE",
"297 60 CURVE SMOOTH",
"345 92.667 OFFCURVE",
"385.333 135.333 OFFCURVE",
"418 188 CURVE",
"434.667 188.667 OFFCURVE",
"449.667 188.667 OFFCURVE",
"463 188 CURVE",
"365 49.333 OFFCURVE",
"262.333 -20 OFFCURVE",
"155 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"436.667 219.667 OFFCURVE",
"444 234.333 OFFCURVE",
"450 249 CURVE",
"464.667 251.667 OFFCURVE",
"478.333 256.667 OFFCURVE",
"493 262 CURVE",
"485.667 240.667 OFFCURVE",
"478.333 222 OFFCURVE",
"471 206 CURVE",
"449 206 LINE SMOOTH",
"441.667 206 OFFCURVE",
"434.667 205.667 OFFCURVE",
"428 205 CURVE"
);
},
{
closed = 1;
nodes = (
"339 252 OFFCURVE",
"289 276 OFFCURVE",
"253 324 CURVE SMOOTH",
"221 364.667 OFFCURVE",
"205 411 OFFCURVE",
"205 463 CURVE SMOOTH",
"205 517.667 OFFCURVE",
"222.333 556.333 OFFCURVE",
"257 579 CURVE SMOOTH",
"277.667 593 OFFCURVE",
"299.667 600 OFFCURVE",
"323 600 CURVE SMOOTH",
"364.333 600 OFFCURVE",
"400 577.667 OFFCURVE",
"430 533 CURVE",
"399.333 507 OFFCURVE",
"384 462 OFFCURVE",
"384 398 CURVE SMOOTH",
"384 379.333 OFFCURVE",
"385.333 359.333 OFFCURVE",
"388 338 CURVE SMOOTH",
"388.667 332 OFFCURVE",
"391 329 OFFCURVE",
"395 329 CURVE SMOOTH",
"398.333 329 OFFCURVE",
"400 331.333 OFFCURVE",
"400 336 CURVE SMOOTH",
"400 425.333 OFFCURVE",
"413.333 485.667 OFFCURVE",
"440 517 CURVE",
"460 479.667 OFFCURVE",
"470 438.667 OFFCURVE",
"470 394 CURVE SMOOTH",
"470 350 OFFCURVE",
"460.333 304 OFFCURVE",
"441 256 CURVE",
"427 254 OFFCURVE",
"414 252 OFFCURVE",
"400 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"474 306 OFFCURVE",
"484 353 OFFCURVE",
"484 399 CURVE SMOOTH",
"484 447 OFFCURVE",
"473 489.667 OFFCURVE",
"451 527 CURVE",
"457 531 OFFCURVE",
"463.333 533 OFFCURVE",
"470 533 CURVE SMOOTH",
"498 533 OFFCURVE",
"514.667 507 OFFCURVE",
"520 455 CURVE SMOOTH",
"521.333 444.333 OFFCURVE",
"522 433.667 OFFCURVE",
"522 423 CURVE SMOOTH",
"522 377.667 OFFCURVE",
"513.333 327.333 OFFCURVE",
"496 272 CURVE",
"482 265.333 OFFCURVE",
"468 260.667 OFFCURVE",
"454 258 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0126 132 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012145 952 2 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01287 950 106 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 2 74 2 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 2 25 2 41 2 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 6 22 6 38 6 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 6 69 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01213 132 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01230 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0124 13 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01232 13 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012145 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01236 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01243 2 145 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 13 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01258 2 145 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 106 186 106 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 153 106 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012126 13 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012145 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012147 2 145 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012153 13 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012173 13 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012187 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012136 959 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012159 949 184 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012173 169 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012173 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01248 173 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012159 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012125 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012159 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012173 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012173 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012128 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012173 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012153 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012173 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012155 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012159 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012162 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012162 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012169 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012166 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012166 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012184 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012181 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012181 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 833;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
lastChange = "2021-05-11 10:37:53 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{169, -55}";
},
{
name = ogonek;
position = "{173, -46}";
},
{
name = top;
position = "{396, 526}";
},
{
name = topleft;
position = "{20, 609}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"28.333 -127 OFFCURVE",
"47 -122 OFFCURVE",
"67 -112 CURVE SMOOTH",
"93.667 -98.667 OFFCURVE",
"118.667 -78 OFFCURVE",
"144 -50 CURVE",
"153 -53 OFFCURVE",
"161 -55 OFFCURVE",
"169 -55 CURVE SMOOTH",
"179 -55 OFFCURVE",
"188 -52 OFFCURVE",
"196 -48 CURVE SMOOTH",
"212 -39.333 OFFCURVE",
"229 -24 OFFCURVE",
"247 -2 CURVE",
"293.667 -5.333 OFFCURVE",
"339.667 -11.333 OFFCURVE",
"385 -20 CURVE SMOOTH",
"395.667 -22.667 OFFCURVE",
"406 -24 OFFCURVE",
"416 -24 CURVE SMOOTH",
"434.667 -24 OFFCURVE",
"444 -19 OFFCURVE",
"444 -9 CURVE SMOOTH",
"444 5.667 OFFCURVE",
"432.333 17.667 OFFCURVE",
"409 27 CURVE",
"407 28.333 OFFCURVE",
"405 28 OFFCURVE",
"403 26 CURVE SMOOTH",
"401.667 24.667 OFFCURVE",
"402 23.333 OFFCURVE",
"404 22 CURVE SMOOTH",
"422.667 10 OFFCURVE",
"432 1.333 OFFCURVE",
"432 -4 CURVE SMOOTH",
"432 -7.333 OFFCURVE",
"428 -9 OFFCURVE",
"420 -9 CURVE SMOOTH",
"411.333 -9 OFFCURVE",
"401.667 -7.667 OFFCURVE",
"391 -5 CURVE SMOOTH",
"345.667 5.667 OFFCURVE",
"302.333 12.667 OFFCURVE",
"261 18 CURVE",
"283.667 52.667 OFFCURVE",
"305.667 100.333 OFFCURVE",
"327 161 CURVE",
"364.333 185 OFFCURVE",
"388.667 218.667 OFFCURVE",
"400 262 CURVE SMOOTH",
"400.667 264.667 OFFCURVE",
"400 266.667 OFFCURVE",
"398 268 CURVE",
"395.333 268.667 OFFCURVE",
"393.667 268 OFFCURVE",
"393 266 CURVE SMOOTH",
"386.333 230.667 OFFCURVE",
"366 200.667 OFFCURVE",
"332 176 CURVE",
"361.333 265.333 OFFCURVE",
"384.667 367 OFFCURVE",
"402 483 CURVE",
"453 482 LINE SMOOTH",
"466 482 OFFCURVE",
"476.667 482 OFFCURVE",
"484 482 CURVE SMOOTH",
"494 482 LINE SMOOTH",
"497.333 482 OFFCURVE",
"500.667 481.667 OFFCURVE",
"504 481 CURVE SMOOTH",
"509.333 479.667 OFFCURVE",
"512.667 479.667 OFFCURVE",
"514 481 CURVE SMOOTH",
"515.333 482.333 OFFCURVE",
"515.667 484.667 OFFCURVE",
"515 488 CURVE SMOOTH",
"514.333 494 OFFCURVE",
"501.333 498.667 OFFCURVE",
"476 502 CURVE SMOOTH",
"473.333 502.667 OFFCURVE",
"466 503 OFFCURVE",
"454.5 503.5 CURVE SMOOTH",
"406 506 LINE",
"406 519.333 OFFCURVE",
"402.667 526 OFFCURVE",
"396 526 CURVE SMOOTH",
"388.667 526 OFFCURVE",
"378.667 519 OFFCURVE",
"366 505 CURVE",
"348.667 504.333 OFFCURVE",
"333.5 504 OFFCURVE",
"320.5 504 CURVE SMOOTH",
"288 504 LINE",
"262.667 565.333 OFFCURVE",
"221 596 OFFCURVE",
"163 596 CURVE SMOOTH",
"121 596 OFFCURVE",
"84.667 578 OFFCURVE",
"54 542 CURVE SMOOTH",
"20.667 501.333 OFFCURVE",
"4 448.667 OFFCURVE",
"4 384 CURVE SMOOTH",
"4 367.333 OFFCURVE",
"5 350 OFFCURVE",
"7 332 CURVE SMOOTH",
"15.667 263.333 OFFCURVE",
"43.333 210.333 OFFCURVE",
"90 173 CURVE SMOOTH",
"126 144 OFFCURVE",
"168 129 OFFCURVE",
"215 129 CURVE SMOOTH",
"220 129 OFFCURVE",
"226 130 OFFCURVE",
"232 130 CURVE",
"217.333 91.333 OFFCURVE",
"201.667 55 OFFCURVE",
"183 23 CURVE",
"181 23.667 OFFCURVE",
"177.667 24 OFFCURVE",
"173 24 CURVE SMOOTH",
"58.333 24 OFFCURVE",
"1 2.667 OFFCURVE",
"1 -40 CURVE SMOOTH",
"1 -56 OFFCURVE",
"14.667 -73 OFFCURVE",
"42 -91 CURVE SMOOTH",
"45 -93 OFFCURVE",
"49 -95 OFFCURVE",
"53 -95 CURVE SMOOTH",
"54 -95 OFFCURVE",
"55 -94 OFFCURVE",
"57 -94 CURVE SMOOTH",
"62.333 -92.667 OFFCURVE",
"62.667 -90.667 OFFCURVE",
"58 -88 CURVE SMOOTH",
"38 -75.333 OFFCURVE",
"28 -61.667 OFFCURVE",
"28 -47 CURVE SMOOTH",
"28 -17.667 OFFCURVE",
"75 -2 OFFCURVE",
"169 0 CURVE",
"156 -19 LINE SMOOTH",
"152 -25 OFFCURVE",
"147.667 -30.667 OFFCURVE",
"143 -36 CURVE",
"123.717 -29.113 OFFCURVE",
"105.961 -8.654 OFFCURVE",
"101 -7 CURVE",
"97.667 -7 OFFCURVE",
"96 -8.333 OFFCURVE",
"96 -11 CURVE SMOOTH",
"96 -22.333 OFFCURVE",
"109 -34 OFFCURVE",
"135 -46 CURVE",
"113 -70.667 OFFCURVE",
"90.333 -89.667 OFFCURVE",
"67 -103 CURVE SMOOTH",
"48.333 -113.667 OFFCURVE",
"30.333 -119 OFFCURVE",
"13 -119 CURVE SMOOTH",
"-2.333 -119 OFFCURVE",
"-14 -113.667 OFFCURVE",
"-22 -103 CURVE SMOOTH",
"-23.333 -101 OFFCURVE",
"-25 -101 OFFCURVE",
"-27 -103 CURVE",
"-29 -103.667 OFFCURVE",
"-29.333 -105.667 OFFCURVE",
"-28 -109 CURVE",
"-20 -121 OFFCURVE",
"-7 -127 OFFCURVE",
"11 -127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"159.667 -31.667 OFFCURVE",
"164 -26 OFFCURVE",
"168.5 -19.5 CURVE SMOOTH",
"182 0 LINE",
"183 0 LINE",
"198.5 0 LINE SMOOTH",
"203.5 0 OFFCURVE",
"208.667 -0.333 OFFCURVE",
"214 -1 CURVE",
"194.667 -24.333 OFFCURVE",
"175 -36.333 OFFCURVE",
"155 -37 CURVE"
);
},
{
closed = 1;
nodes = (
"218.333 22.333 OFFCURVE",
"207.667 23 OFFCURVE",
"197 23 CURVE",
"215.667 56.333 OFFCURVE",
"234.333 92 OFFCURVE",
"249 132 CURVE",
"255 133.333 OFFCURVE",
"261 135 OFFCURVE",
"267 136 CURVE SMOOTH",
"284 140 LINE",
"266.667 89.333 OFFCURVE",
"247.667 50.333 OFFCURVE",
"229 21 CURVE"
);
},
{
closed = 1;
nodes = (
"185.667 135.333 OFFCURVE",
"141.667 147.667 OFFCURVE",
"103 177 CURVE SMOOTH",
"59 210.333 OFFCURVE",
"32.333 261.667 OFFCURVE",
"23 331 CURVE SMOOTH",
"20.333 349.667 OFFCURVE",
"19 367.667 OFFCURVE",
"19 385 CURVE SMOOTH",
"19 445.667 OFFCURVE",
"33.667 495.667 OFFCURVE",
"63 535 CURVE SMOOTH",
"89.667 569.667 OFFCURVE",
"122 587 OFFCURVE",
"160 587 CURVE SMOOTH",
"208 587 OFFCURVE",
"243 558.667 OFFCURVE",
"265 502 CURVE",
"154.66 490.506 OFFCURVE",
"56 444.972 OFFCURVE",
"56 383 CURVE SMOOTH",
"56 339 OFFCURVE",
"101.667 303.333 OFFCURVE",
"193 276 CURVE SMOOTH",
"202.333 272.667 OFFCURVE",
"207 274.667 OFFCURVE",
"207 282 CURVE",
"203 285 LINE",
"131 298.333 OFFCURVE",
"91 332.333 OFFCURVE",
"91 371 CURVE SMOOTH",
"91 396.333 OFFCURVE",
"106 419 OFFCURVE",
"136 439 CURVE SMOOTH",
"169.333 460.333 OFFCURVE",
"214.667 474 OFFCURVE",
"272 480 CURVE",
"278.667 456 OFFCURVE",
"282 426.667 OFFCURVE",
"282 392 CURVE SMOOTH",
"282 314 OFFCURVE",
"266.333 230 OFFCURVE",
"235 140 CURVE"
);
},
{
closed = 1;
nodes = (
"288 233.667 OFFCURVE",
"305 319 OFFCURVE",
"305 399 CURVE SMOOTH",
"305 431.667 OFFCURVE",
"301.667 459.333 OFFCURVE",
"295 482 CURVE",
"313.667 482.667 OFFCURVE",
"333.333 482.667 OFFCURVE",
"354 482 CURVE",
"352.667 445.333 OFFCURVE",
"346.333 397.333 OFFCURVE",
"335 338 CURVE SMOOTH",
"321.667 270 OFFCURVE",
"306.667 209 OFFCURVE",
"288 153 CURVE",
"282.667 150.333 OFFCURVE",
"277 148 OFFCURVE",
"271 147 CURVE SMOOTH",
"254 143 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012112 951 133 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 951 16 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01236 951 2 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 2 186 2 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 8 181 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01221 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 112 118 112 134 112 150 112 166 112 182 112 198 112 214 112 230 112 246 112 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 112 22 112 38 112 54 112 70 112 86 112 102 112 118 112 134 112 150 112 166 112 182 112 198 112 214 112 230 112 246 112 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 112 22 112 38 112 54 112 70 112 86 112 102 112 118 112 134 112 150 112 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 112 181 112 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012112 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01238 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01254 2 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01260 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01267 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01298 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012110 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012127 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012131 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012131 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012174 120 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012137 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01260 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01263 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01277 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012102 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012110 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012177 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012177 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012181 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012181 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012146 947 161 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012161 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012161 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01238 102 137 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012161 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01248 947 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 48 119 48 135 48 151 48 167 48 183 48 199 48 215 48 231 48 247 48 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 48 23 48 39 48 55 48 71 48 87 48 103 48 119 48 135 48 151 48 167 48 183 48 199 48 215 48 231 48 247 48 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 48 23 48 39 48 55 48 71 48 87 48 103 48 119 48 135 48 151 48 167 48 183 48 199 48 215 48 231 48 247 48 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01254 102 137 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01267 122 86 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01292 122 86 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01298 122 86 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012127 102 137 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012146 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012139 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012139 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012161 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012158 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012158 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012164 102 137 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012170 102 137 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012174 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012174 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 441;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
lastChange = "2021-05-18 10:47:30 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{211, 0}";
},
{
name = top;
position = "{447, 525}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"15 -292 OFFCURVE",
"69.333 -272.667 OFFCURVE",
"130 -234 CURVE SMOOTH",
"220 -177.333 OFFCURVE",
"301.333 -48 OFFCURVE",
"374 154 CURVE",
"392 156.667 OFFCURVE",
"410 158.667 OFFCURVE",
"428 160 CURVE SMOOTH",
"440 160.667 OFFCURVE",
"446 163 OFFCURVE",
"446 167 CURVE SMOOTH",
"446 170 OFFCURVE",
"440 171 OFFCURVE",
"429 171 CURVE SMOOTH",
"427 171 OFFCURVE",
"425 171 OFFCURVE",
"422 171 CURVE SMOOTH",
"378 168 LINE",
"419.333 284.667 OFFCURVE",
"445.667 389.667 OFFCURVE",
"457 483 CURVE",
"506.5 482 LINE SMOOTH",
"520 482 OFFCURVE",
"530.667 482 OFFCURVE",
"538 482 CURVE SMOOTH",
"548 482 LINE SMOOTH",
"551.333 482 OFFCURVE",
"554.667 481.667 OFFCURVE",
"558 481 CURVE SMOOTH",
"564 480.333 OFFCURVE",
"567.333 480.333 OFFCURVE",
"568 481 CURVE SMOOTH",
"569.333 481.667 OFFCURVE",
"569.667 484 OFFCURVE",
"569 488 CURVE SMOOTH",
"568.333 494 OFFCURVE",
"555.333 498.667 OFFCURVE",
"530 502 CURVE SMOOTH",
"527.333 502.667 OFFCURVE",
"520 503 OFFCURVE",
"509 503.5 CURVE SMOOTH",
"461 506 LINE",
"459.667 512.667 OFFCURVE",
"459 517.667 OFFCURVE",
"459 521 CURVE SMOOTH",
"458.333 523.667 OFFCURVE",
"456.333 525 OFFCURVE",
"453 525 CURVE SMOOTH",
"447 525 OFFCURVE",
"436.333 518.333 OFFCURVE",
"421 505 CURVE",
"346.333 500.333 OFFCURVE",
"294.333 493.667 OFFCURVE",
"265 485 CURVE SMOOTH",
"246.333 479.667 OFFCURVE",
"229 472.667 OFFCURVE",
"213 466 CURVE",
"193.667 476 OFFCURVE",
"174 481 OFFCURVE",
"154 481 CURVE SMOOTH",
"126.667 481 OFFCURVE",
"101.333 473.333 OFFCURVE",
"78 458 CURVE SMOOTH",
"31.333 427.333 OFFCURVE",
"8 381.667 OFFCURVE",
"8 321 CURVE SMOOTH",
"8 278.333 OFFCURVE",
"20 241.667 OFFCURVE",
"44 211 CURVE SMOOTH",
"72 176 OFFCURVE",
"109 158 OFFCURVE",
"154 158 CURVE SMOOTH",
"159 158 OFFCURVE",
"162 160 OFFCURVE",
"162 162 CURVE SMOOTH",
"162 162.667 OFFCURVE",
"157.333 163.667 OFFCURVE",
"148 165 CURVE",
"108 166.333 OFFCURVE",
"76.667 183.333 OFFCURVE",
"54 216 CURVE SMOOTH",
"32 246 OFFCURVE",
"21 281.667 OFFCURVE",
"21 323 CURVE SMOOTH",
"21 381.667 OFFCURVE",
"41.333 424.333 OFFCURVE",
"82 451 CURVE SMOOTH",
"102.667 465 OFFCURVE",
"124.667 472 OFFCURVE",
"148 472 CURVE SMOOTH",
"166.667 472 OFFCURVE",
"183.667 467.667 OFFCURVE",
"199 459 CURVE",
"134.333 426.333 OFFCURVE",
"102 387 OFFCURVE",
"102 341 CURVE SMOOTH",
"102 313 OFFCURVE",
"115.333 288 OFFCURVE",
"142 266 CURVE SMOOTH",
"172 241.333 OFFCURVE",
"211.667 224.667 OFFCURVE",
"261 216 CURVE SMOOTH",
"271.667 214 OFFCURVE",
"277 217 OFFCURVE",
"277 225 CURVE SMOOTH",
"277 227 OFFCURVE",
"275.333 228 OFFCURVE",
"272 228 CURVE SMOOTH",
"234.667 231.333 OFFCURVE",
"203 244 OFFCURVE",
"177 266 CURVE SMOOTH",
"150.333 288.667 OFFCURVE",
"137 314.333 OFFCURVE",
"137 343 CURVE SMOOTH",
"137 383 OFFCURVE",
"165 416.667 OFFCURVE",
"221 444 CURVE",
"229 436.667 OFFCURVE",
"238 427 OFFCURVE",
"248 415 CURVE SMOOTH",
"278 375 OFFCURVE",
"293 322.667 OFFCURVE",
"293 258 CURVE SMOOTH",
"293 224 OFFCURVE",
"289 188.667 OFFCURVE",
"281 152 CURVE",
"158.333 125.333 OFFCURVE",
"57 76 OFFCURVE",
"-23 4 CURVE SMOOTH",
"-73.667 -42 OFFCURVE",
"-107.333 -88.667 OFFCURVE",
"-124 -136 CURVE SMOOTH",
"-132 -157 OFFCURVE",
"-135 -176 OFFCURVE",
"-135 -194 CURVE SMOOTH",
"-135 -252 OFFCURVE",
"-98 -292 OFFCURVE",
"-33 -292 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-90 -274 OFFCURVE",
"-115 -250.667 OFFCURVE",
"-115 -204 CURVE SMOOTH",
"-115 -154 OFFCURVE",
"-83.667 -95.667 OFFCURVE",
"-21 -29 CURVE SMOOTH",
"49 47 OFFCURVE",
"148.333 101.667 OFFCURVE",
"277 135 CURVE",
"252.333 39 OFFCURVE",
"209.333 -45.667 OFFCURVE",
"148 -119 CURVE SMOOTH",
"82 -196.333 OFFCURVE",
"14.667 -235 OFFCURVE",
"-54 -235 CURVE SMOOTH",
"-62 -235 OFFCURVE",
"-70 -234.333 OFFCURVE",
"-78 -233 CURVE SMOOTH",
"-81 -233 OFFCURVE",
"-82 -235 OFFCURVE",
"-82 -238 CURVE SMOOTH",
"-82 -240 OFFCURVE",
"-81 -241 OFFCURVE",
"-79 -241 CURVE SMOOTH",
"-71 -242.333 OFFCURVE",
"-63 -243 OFFCURVE",
"-55 -243 CURVE SMOOTH",
"17 -243 OFFCURVE",
"87 -203 OFFCURVE",
"155 -123 CURVE SMOOTH",
"219 -47.667 OFFCURVE",
"264 39.667 OFFCURVE",
"290 139 CURVE",
"331 147 LINE",
"265.667 -39 OFFCURVE",
"194.333 -158.667 OFFCURVE",
"117 -212 CURVE SMOOTH",
"56.333 -253.333 OFFCURVE",
"4 -274 OFFCURVE",
"-40 -274 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"302.667 191.667 OFFCURVE",
"307 227.667 OFFCURVE",
"307 263 CURVE SMOOTH",
"307 328.333 OFFCURVE",
"291.667 381.333 OFFCURVE",
"261 422 CURVE SMOOTH",
"253 432.667 OFFCURVE",
"244.667 442 OFFCURVE",
"236 450 CURVE",
"254.667 456.667 OFFCURVE",
"276 463.333 OFFCURVE",
"300 470 CURVE",
"346.667 476.667 OFFCURVE",
"383.333 479.667 OFFCURVE",
"410 481 CURVE",
"400.667 389 OFFCURVE",
"377.333 284.667 OFFCURVE",
"336 162 CURVE",
"328.667 160.667 OFFCURVE",
"321 160 OFFCURVE",
"314.5 158.5 CURVE SMOOTH",
"294 155 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01296 20 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0128 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 96 118 96 134 96 150 96 166 96 182 96 198 96 214 96 230 96 246 96 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 96 22 96 38 96 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 96 69 96 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01222 20 96 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01298 20 96 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012110 20 96 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012133 20 96 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012139 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012129 85 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01251 947 72 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01222 139 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01274 139 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01298 139 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012110 139 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012112 139 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012133 139 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 421;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
lastChange = "2021-05-11 10:38:02 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{328, 0}";
},
{
name = top;
position = "{447, 525}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"147.667 -54 OFFCURVE",
"156.667 -52 OFFCURVE",
"166 -48 CURVE SMOOTH",
"225.333 -16 OFFCURVE",
"277.333 82.333 OFFCURVE",
"322 247 CURVE",
"372.5 153 LINE SMOOTH",
"386.833 126.333 OFFCURVE",
"398.667 103.667 OFFCURVE",
"408 85 CURVE",
"400 83.667 OFFCURVE",
"392 83 OFFCURVE",
"384 83 CURVE SMOOTH",
"359.333 83 OFFCURVE",
"337.333 89.333 OFFCURVE",
"318 102 CURVE",
"314.667 103.333 OFFCURVE",
"312.667 103 OFFCURVE",
"312 101 CURVE SMOOTH",
"310.667 97.667 OFFCURVE",
"311 95.667 OFFCURVE",
"313 95 CURVE",
"334.333 81.667 OFFCURVE",
"358.333 75 OFFCURVE",
"385 75 CURVE SMOOTH",
"394.333 75 OFFCURVE",
"403.667 75.667 OFFCURVE",
"413 77 CURVE",
"434.333 43.667 OFFCURVE",
"457.333 18 OFFCURVE",
"480 -2 CURVE SMOOTH",
"514 -32 OFFCURVE",
"546.333 -47 OFFCURVE",
"577 -47 CURVE SMOOTH",
"619.667 -47 OFFCURVE",
"648 -13.667 OFFCURVE",
"648 29 CURVE SMOOTH",
"648 59 OFFCURVE",
"637 86.667 OFFCURVE",
"615 112 CURVE SMOOTH",
"611.667 115.333 OFFCURVE",
"609.333 117 OFFCURVE",
"608 117 CURVE SMOOTH",
"606.667 117 OFFCURVE",
"606 116.333 OFFCURVE",
"606 115 CURVE SMOOTH",
"606 113.667 OFFCURVE",
"606.667 112.333 OFFCURVE",
"608 111 CURVE SMOOTH",
"626.667 84.333 OFFCURVE",
"636 56 OFFCURVE",
"636 26 CURVE SMOOTH",
"636 -7.333 OFFCURVE",
"623.333 -24 OFFCURVE",
"598 -24 CURVE SMOOTH",
"582 -24 OFFCURVE",
"562 -16 OFFCURVE",
"538 0 CURVE SMOOTH",
"518 13.333 OFFCURVE",
"489.667 43.333 OFFCURVE",
"453 90 CURVE",
"505.667 114.667 OFFCURVE",
"532 150 OFFCURVE",
"532 196 CURVE SMOOTH",
"532 249.333 OFFCURVE",
"487.333 299.667 OFFCURVE",
"410 321 CURVE",
"460.667 409 OFFCURVE",
"508.333 466.333 OFFCURVE",
"553 493 CURVE SMOOTH",
"577.667 507.667 OFFCURVE",
"603.667 515 OFFCURVE",
"631 515 CURVE SMOOTH",
"661 515 OFFCURVE",
"686.333 507.667 OFFCURVE",
"707 493 CURVE SMOOTH",
"731 475.667 OFFCURVE",
"744.333 452.667 OFFCURVE",
"747 424 CURVE SMOOTH",
"747.667 416 OFFCURVE",
"749 412 OFFCURVE",
"751 412 CURVE SMOOTH",
"753 412.667 OFFCURVE",
"753.333 417.667 OFFCURVE",
"752 427 CURVE SMOOTH",
"745 492 OFFCURVE",
"693 541 OFFCURVE",
"631 541 CURVE SMOOTH",
"626 541 OFFCURVE",
"622 541 OFFCURVE",
"617 540 CURVE SMOOTH",
"567 534 OFFCURVE",
"522 507.667 OFFCURVE",
"482 461 CURVE SMOOTH",
"455.333 430.333 OFFCURVE",
"427 384.667 OFFCURVE",
"397 324 CURVE",
"381.667 327.333 OFFCURVE",
"363.667 329.667 OFFCURVE",
"343 331 CURVE",
"353.667 381.667 OFFCURVE",
"364.333 432.333 OFFCURVE",
"371 483 CURVE",
"385.667 483 OFFCURVE",
"393 487 OFFCURVE",
"393 495 CURVE SMOOTH",
"393 501 OFFCURVE",
"387.333 504.667 OFFCURVE",
"376 506 CURVE",
"374.667 519.333 OFFCURVE",
"371 526 OFFCURVE",
"365 526 CURVE SMOOTH",
"357.667 526 OFFCURVE",
"348 519 OFFCURVE",
"336 505 CURVE",
"292 505 LINE",
"295 553 LINE",
"296 556 OFFCURVE",
"294 557 OFFCURVE",
"291 557 CURVE SMOOTH",
"289 557 OFFCURVE",
"288 556 OFFCURVE",
"287 554 CURVE",
"284 505 LINE",
"206 503 OFFCURVE",
"143 489.667 OFFCURVE",
"95 465 CURVE SMOOTH",
"48.333 442.333 OFFCURVE",
"25 415 OFFCURVE",
"25 383 CURVE SMOOTH",
"25 342.333 OFFCURVE",
"64.333 308.667 OFFCURVE",
"143 282 CURVE",
"93.667 254.667 OFFCURVE",
"58.667 225.667 OFFCURVE",
"38 195 CURVE SMOOTH",
"12.667 157.667 OFFCURVE",
"0 122.333 OFFCURVE",
"0 89 CURVE SMOOTH",
"0 38.333 OFFCURVE",
"32.333 4 OFFCURVE",
"75 4 CURVE SMOOTH",
"125.667 4 OFFCURVE",
"167 41.333 OFFCURVE",
"199 116 CURVE SMOOTH",
"223.667 172 OFFCURVE",
"244.667 239.333 OFFCURVE",
"262 318 CURVE",
"275.333 320.667 OFFCURVE",
"288.667 321.667 OFFCURVE",
"302 323 CURVE",
"283.333 232.333 OFFCURVE",
"261.667 157 OFFCURVE",
"235 93 CURVE SMOOTH",
"203 14.333 OFFCURVE",
"170 -28.333 OFFCURVE",
"136 -35 CURVE SMOOTH",
"130.667 -36.333 OFFCURVE",
"127.333 -37 OFFCURVE",
"122 -37 CURVE SMOOTH",
"112 -37 OFFCURVE",
"100.333 -32.333 OFFCURVE",
"87 -23 CURVE SMOOTH",
"83 -20.333 OFFCURVE",
"79.667 -17 OFFCURVE",
"77 -13 CURVE SMOOTH",
"74.333 -9 OFFCURVE",
"72 -7 OFFCURVE",
"70 -7 CURVE SMOOTH",
"66.667 -7 OFFCURVE",
"65 -8.333 OFFCURVE",
"65 -11 CURVE SMOOTH",
"65 -18.333 OFFCURVE",
"73 -27.333 OFFCURVE",
"89 -38 CURVE SMOOTH",
"104.333 -48.667 OFFCURVE",
"121 -54 OFFCURVE",
"139 -54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"47 20 OFFCURVE",
"19 50.667 OFFCURVE",
"19 96 CURVE SMOOTH",
"19 156 OFFCURVE",
"61.667 226 OFFCURVE",
"155 278 CURVE",
"162 276 LINE SMOOTH",
"169 274 OFFCURVE",
"176 278 OFFCURVE",
"176 282 CURVE SMOOTH",
"176 282.667 OFFCURVE",
"175 283.667 OFFCURVE",
"173 285 CURVE",
"169 286 LINE",
"195.667 300 OFFCURVE",
"223.667 310 OFFCURVE",
"253 316 CURVE",
"235.667 240 OFFCURVE",
"216 175 OFFCURVE",
"192 119 CURVE SMOOTH",
"162.667 53 OFFCURVE",
"126.333 20 OFFCURVE",
"83 20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"92.333 303.667 OFFCURVE",
"61 331 OFFCURVE",
"61 371 CURVE SMOOTH",
"61 399 OFFCURVE",
"79 423.667 OFFCURVE",
"115 445 CURVE SMOOTH",
"156.333 468.333 OFFCURVE",
"211.667 481 OFFCURVE",
"281 483 CURVE",
"274.333 429.667 OFFCURVE",
"265.667 377 OFFCURVE",
"255 325 CURVE",
"221.667 318.333 OFFCURVE",
"188.333 306.333 OFFCURVE",
"155 289 CURVE"
);
},
{
closed = 1;
nodes = (
"345.333 234.667 OFFCURVE",
"341 241 OFFCURVE",
"337.5 247 CURVE SMOOTH",
"327 264 LINE",
"329.667 273.333 OFFCURVE",
"332 283 OFFCURVE",
"334 293 CURVE SMOOTH",
"341 324 LINE",
"359.667 322.667 OFFCURVE",
"376.667 319.667 OFFCURVE",
"394 317 CURVE",
"350 228 LINE"
);
},
{
closed = 1;
nodes = (
"392 171.5 LINE SMOOTH",
"377 192 OFFCURVE",
"364.333 208.667 OFFCURVE",
"355 222 CURVE",
"377.667 260.667 OFFCURVE",
"394.333 291.333 OFFCURVE",
"405 314 CURVE",
"441.667 304 OFFCURVE",
"470 287.667 OFFCURVE",
"490 265 CURVE SMOOTH",
"508.667 245.667 OFFCURVE",
"518 223.333 OFFCURVE",
"518 198 CURVE SMOOTH",
"518 155.333 OFFCURVE",
"494.333 122 OFFCURVE",
"447 98 CURVE"
);
},
{
closed = 1;
nodes = (
"274.667 377.667 OFFCURVE",
"282.333 429.667 OFFCURVE",
"289 483 CURVE",
"306 483 LINE SMOOTH",
"312 483 OFFCURVE",
"317.667 482.667 OFFCURVE",
"323 482 CURVE",
"321.667 444.667 OFFCURVE",
"316.333 395 OFFCURVE",
"303 331 CURVE",
"283.5 329.5 LINE SMOOTH",
"277 329 OFFCURVE",
"270.667 328.333 OFFCURVE",
"264 327 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01236 950 180 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012180 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 36 118 36 134 36 150 36 166 36 182 36 198 36 214 36 230 36 246 36 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 102 36 118 36 134 36 150 36 166 36 182 36 198 36 214 36 230 36 246 36 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 102 36 118 36 134 36 150 36 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 36 181 36 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012185 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012187 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012189 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012184 947 32 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01230 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01252 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01262 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012184 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01295 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012119 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012104 947 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012133 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012138 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012141 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012164 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012178 145 187 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012184 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012190 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 655;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
lastChange = "2021-05-11 10:38:13 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{258, -44}";
},
{
name = center;
position = "{217, 305}";
},
{
name = top;
position = "{480, 585}";
},
{
name = topright;
position = "{607, 585}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"541 -54 OFFCURVE",
"559 -51 OFFCURVE",
"576 -44 CURVE SMOOTH",
"605.333 -32.667 OFFCURVE",
"625 -14 OFFCURVE",
"635 12 CURVE SMOOTH",
"637 18 OFFCURVE",
"636.667 21 OFFCURVE",
"634 21 CURVE SMOOTH",
"630.667 21 OFFCURVE",
"628 18.333 OFFCURVE",
"626 13 CURVE SMOOTH",
"617 -14 OFFCURVE",
"594 -28 OFFCURVE",
"558 -28 CURVE SMOOTH",
"509 -28 OFFCURVE",
"444 -7 OFFCURVE",
"362 31 CURVE SMOOTH",
"331.333 45.667 OFFCURVE",
"301 61.333 OFFCURVE",
"269 80 CURVE",
"282.333 105.333 OFFCURVE",
"295.667 139 OFFCURVE",
"309 183 CURVE",
"358.333 198.333 OFFCURVE",
"402.333 222.667 OFFCURVE",
"441 256 CURVE SMOOTH",
"510.333 316 OFFCURVE",
"547 392 OFFCURVE",
"547 472 CURVE SMOOTH",
"547 536 OFFCURVE",
"520 585 OFFCURVE",
"480 585 CURVE SMOOTH",
"444.667 585 OFFCURVE",
"408.667 551.667 OFFCURVE",
"372 485 CURVE SMOOTH",
"345.333 437 OFFCURVE",
"322.333 359 OFFCURVE",
"301 251 CURVE",
"289 247.667 OFFCURVE",
"277.333 246 OFFCURVE",
"266 246 CURVE",
"280.667 304.667 OFFCURVE",
"288 357 OFFCURVE",
"288 403 CURVE SMOOTH",
"288 462.333 OFFCURVE",
"277 508.667 OFFCURVE",
"255 542 CURVE SMOOTH",
"236.333 570.667 OFFCURVE",
"212.333 585 OFFCURVE",
"183 585 CURVE SMOOTH",
"171 585 OFFCURVE",
"159 582 OFFCURVE",
"147 576 CURVE SMOOTH",
"95.667 550.667 OFFCURVE",
"70 502.667 OFFCURVE",
"70 432 CURVE SMOOTH",
"70 389.333 OFFCURVE",
"81.667 350.333 OFFCURVE",
"105 315 CURVE",
"96.333 297.667 OFFCURVE",
"92 280.333 OFFCURVE",
"92 263 CURVE SMOOTH",
"92 203 OFFCURVE",
"145 167 OFFCURVE",
"233 171 CURVE",
"226.333 150.333 OFFCURVE",
"218.667 131 OFFCURVE",
"210 113 CURVE",
"162.667 136.333 OFFCURVE",
"126.333 150.667 OFFCURVE",
"101 156 CURVE SMOOTH",
"90.333 157.333 OFFCURVE",
"82 158 OFFCURVE",
"74 158 CURVE SMOOTH",
"23.333 158 OFFCURVE",
"-6 127.667 OFFCURVE",
"-6 89 CURVE SMOOTH",
"-6 43.667 OFFCURVE",
"32.667 -2 OFFCURVE",
"102 -14 CURVE SMOOTH",
"112.667 -16 OFFCURVE",
"122.667 -17 OFFCURVE",
"132 -17 CURVE SMOOTH",
"182.667 -17 OFFCURVE",
"225 9 OFFCURVE",
"259 61 CURVE",
"369 -16 OFFCURVE",
"456 -54 OFFCURVE",
"521 -54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 -3 LINE SMOOTH",
"79 0 OFFCURVE",
"59.333 9 OFFCURVE",
"46 23 CURVE SMOOTH",
"32.667 36.333 OFFCURVE",
"26 51 OFFCURVE",
"26 67 CURVE SMOOTH",
"26 97.667 OFFCURVE",
"51.667 123 OFFCURVE",
"97 123 CURVE SMOOTH",
"105 123 OFFCURVE",
"113.667 122.333 OFFCURVE",
"123 121 CURVE SMOOTH",
"140.333 118.333 OFFCURVE",
"165.667 107.667 OFFCURVE",
"199 93 CURVE",
"172.333 46.333 OFFCURVE",
"140.667 24 OFFCURVE",
"104 26 CURVE",
"100 22 LINE",
"100.667 19.333 OFFCURVE",
"102.333 18 OFFCURVE",
"105 18 CURVE SMOOTH",
"143.667 16 OFFCURVE",
"178 39.667 OFFCURVE",
"208 89 CURVE",
"217.333 84.333 OFFCURVE",
"225 80 OFFCURVE",
"230.5 77.5 CURVE SMOOTH",
"243 71 LINE",
"217 21 OFFCURVE",
"177 -4 OFFCURVE",
"123 -4 CURVE SMOOTH",
"119.667 -4 OFFCURVE",
"117 -4 OFFCURVE",
"114 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"219 108 LINE",
"228.333 125.333 OFFCURVE",
"235.667 145.333 OFFCURVE",
"245 172 CURVE",
"251.667 172.667 OFFCURVE",
"258.333 173.667 OFFCURVE",
"265 175 CURVE SMOOTH",
"285 179 LINE",
"277.667 155.667 OFFCURVE",
"271.333 136.5 OFFCURVE",
"266 121.5 CURVE SMOOTH",
"260.667 106.5 OFFCURVE",
"256.333 96 OFFCURVE",
"253 90 CURVE"
);
},
{
closed = 1;
nodes = (
"204.667 190 OFFCURVE",
"176.333 199.333 OFFCURVE",
"153 218 CURVE SMOOTH",
"127.667 238.667 OFFCURVE",
"116.333 265 OFFCURVE",
"119 297 CURVE",
"152.333 258.333 OFFCURVE",
"196.333 238.667 OFFCURVE",
"251 238 CURVE",
"247 220.667 OFFCURVE",
"243.333 204.667 OFFCURVE",
"238 190 CURVE"
);
},
{
closed = 1;
nodes = (
"256.333 204.667 OFFCURVE",
"260 220.667 OFFCURVE",
"264 238 CURVE",
"277.333 238 OFFCURVE",
"289 239.333 OFFCURVE",
"299 242 CURVE",
"290 196 LINE",
"276.667 192.667 OFFCURVE",
"263.667 190.667 OFFCURVE",
"251 190 CURVE"
);
},
{
closed = 1;
nodes = (
"195 248 OFFCURVE",
"151.333 271 OFFCURVE",
"122 315 CURVE",
"129.333 337.667 OFFCURVE",
"143.667 357.667 OFFCURVE",
"165 375 CURVE SMOOTH",
"167 377 OFFCURVE",
"166.667 378 OFFCURVE",
"164 378 CURVE SMOOTH",
"162 378 OFFCURVE",
"159.667 377.333 OFFCURVE",
"157 376 CURVE SMOOTH",
"139 363.333 OFFCURVE",
"124.667 348.333 OFFCURVE",
"114 331 CURVE",
"95.333 368.333 OFFCURVE",
"86 405.333 OFFCURVE",
"86 442 CURVE SMOOTH",
"86 480 OFFCURVE",
"96 512.667 OFFCURVE",
"116 540 CURVE SMOOTH",
"134.667 564.667 OFFCURVE",
"156.667 577 OFFCURVE",
"182 577 CURVE SMOOTH",
"207.333 577 OFFCURVE",
"228 563.333 OFFCURVE",
"244 536 CURVE SMOOTH",
"262.667 505.333 OFFCURVE",
"272 460.333 OFFCURVE",
"272 401 CURVE SMOOTH",
"272 355 OFFCURVE",
"265.667 303.333 OFFCURVE",
"253 246 CURVE"
);
},
{
closed = 1;
nodes = (
"317.667 209.667 OFFCURVE",
"320 217 OFFCURVE",
"323 225.5 CURVE SMOOTH",
"332 253 LINE",
"374.667 273 OFFCURVE",
"408.667 308.667 OFFCURVE",
"434 360 CURVE SMOOTH",
"436 363 OFFCURVE",
"434 366 OFFCURVE",
"430 366 CURVE SMOOTH",
"428 366 OFFCURVE",
"427 365 OFFCURVE",
"427 363 CURVE",
"403.667 315.667 OFFCURVE",
"373 282.667 OFFCURVE",
"335 264 CURVE",
"347 301.333 OFFCURVE",
"356.333 328.333 OFFCURVE",
"363 347 CURVE SMOOTH",
"392.333 427 OFFCURVE",
"421 486 OFFCURVE",
"449 524 CURVE SMOOTH",
"467 549 OFFCURVE",
"483 561 OFFCURVE",
"495 561 CURVE SMOOTH",
"499 561 OFFCURVE",
"502 560 OFFCURVE",
"505 558 CURVE SMOOTH",
"519 550.667 OFFCURVE",
"526 530 OFFCURVE",
"526 496 CURVE SMOOTH",
"526 431.333 OFFCURVE",
"506 370.667 OFFCURVE",
"466 314 CURVE SMOOTH",
"426 256.667 OFFCURVE",
"375.667 219.667 OFFCURVE",
"315 203 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012162 951 87 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01242 34 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 951 119 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 42 22 42 38 42 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 42 69 42 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01212 34 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 34 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01229 34 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01297 34 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012104 34 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012111 87 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012116 34 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 119 186 119 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 119 121 119 137 119 153 119 169 119 185 119 201 119 217 119 233 119 249 119 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 119 25 119 41 119 57 119 73 119 89 119 105 119 121 119 137 119 153 119 169 119 185 119 201 119 217 119 233 119 249 119 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 119 25 119 41 119 57 119 73 119 89 119 105 119 121 119 137 119 153 119 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012128 87 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012134 87 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012139 87 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012151 34 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 162 118 162 134 162 150 162 166 162 182 162 198 162 214 162 230 162 246 162 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 162 22 162 38 162 54 162 70 162 86 162 102 162 118 162 134 162 150 162 166 162 182 162 198 162 214 162 230 162 246 162 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 162 22 162 38 162 54 162 70 162 86 162 102 162 118 162 134 162 150 162 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 162 181 162 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012172 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012151 949 82 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01290 949 159 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 97 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01297 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012108 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01229 82 108 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012151 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012111 97 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012108 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012139 97 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 433;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"241.667 -115 OFFCURVE",
"266.333 -109.333 OFFCURVE",
"291 -98 CURVE SMOOTH",
"380.333 -56 OFFCURVE",
"440 18.333 OFFCURVE",
"470 125 CURVE",
"500 121 LINE",
"488.667 73.667 OFFCURVE",
"474.667 30 OFFCURVE",
"458 -10 CURVE SMOOTH",
"456 -14 OFFCURVE",
"457.333 -16 OFFCURVE",
"462 -16 CURVE SMOOTH",
"478.667 -16 OFFCURVE",
"512.333 23.333 OFFCURVE",
"563 102 CURVE SMOOTH",
"565 105 LINE",
"619.667 84.333 OFFCURVE",
"647 53 OFFCURVE",
"647 11 CURVE SMOOTH",
"647 -1 OFFCURVE",
"644.667 -13 OFFCURVE",
"640 -25 CURVE SMOOTH",
"639 -28 OFFCURVE",
"641 -31 OFFCURVE",
"645 -31 CURVE SMOOTH",
"647 -31 OFFCURVE",
"648 -30 OFFCURVE",
"648 -28 CURVE SMOOTH",
"652.667 -16 OFFCURVE",
"655 -3.333 OFFCURVE",
"655 10 CURVE SMOOTH",
"655 54 OFFCURVE",
"626.333 87.667 OFFCURVE",
"569 111 CURVE",
"635.667 215 OFFCURVE",
"684.333 285.667 OFFCURVE",
"715 327 CURVE SMOOTH",
"784.333 418.333 OFFCURVE",
"844 475.333 OFFCURVE",
"894 498 CURVE SMOOTH",
"906.667 504 OFFCURVE",
"919.667 507 OFFCURVE",
"933 507 CURVE SMOOTH",
"963.667 507 OFFCURVE",
"979 492.333 OFFCURVE",
"979 463 CURVE SMOOTH",
"979 458.333 OFFCURVE",
"980.667 456 OFFCURVE",
"984 456 CURVE SMOOTH",
"987 456 OFFCURVE",
"988 462 OFFCURVE",
"988 473 CURVE SMOOTH",
"988 506 OFFCURVE",
"967 533 OFFCURVE",
"935 533 CURVE SMOOTH",
"875 533 OFFCURVE",
"803.667 480 OFFCURVE",
"721 374 CURVE SMOOTH",
"685.667 328.667 OFFCURVE",
"634.667 250.667 OFFCURVE",
"568 140 CURVE SMOOTH",
"555 117 LINE",
"524 125 LINE",
"551.333 209 OFFCURVE",
"565 282 OFFCURVE",
"565 344 CURVE SMOOTH",
"565 399.333 OFFCURVE",
"554 443.667 OFFCURVE",
"532 477 CURVE",
"538 481.667 OFFCURVE",
"544.167 484.5 OFFCURVE",
"550.5 485.5 CURVE SMOOTH",
"556.833 486.5 OFFCURVE",
"560 489.333 OFFCURVE",
"560 494 CURVE SMOOTH",
"560 497.333 OFFCURVE",
"558 498.667 OFFCURVE",
"554 498 CURVE SMOOTH",
"544 496 OFFCURVE",
"534.667 492 OFFCURVE",
"526 486 CURVE",
"494 526.667 OFFCURVE",
"444 547 OFFCURVE",
"376 547 CURVE SMOOTH",
"365.5 547 LINE SMOOTH",
"361.833 547 OFFCURVE",
"358.333 546.667 OFFCURVE",
"355 546 CURVE",
"350 549 LINE SMOOTH",
"321.333 562.333 OFFCURVE",
"291.667 569 OFFCURVE",
"261 569 CURVE SMOOTH",
"221 569 OFFCURVE",
"184.333 558.667 OFFCURVE",
"151 538 CURVE SMOOTH",
"84.333 498 OFFCURVE",
"51 442.333 OFFCURVE",
"51 371 CURVE SMOOTH",
"51 353 OFFCURVE",
"53.333 337 OFFCURVE",
"58 323 CURVE",
"50.667 299 OFFCURVE",
"47 276 OFFCURVE",
"47 254 CURVE SMOOTH",
"47 219.333 OFFCURVE",
"55.667 190.667 OFFCURVE",
"73 168 CURVE SMOOTH",
"93 143.333 OFFCURVE",
"122.333 131 OFFCURVE",
"161 131 CURVE SMOOTH",
"192.333 131 OFFCURVE",
"224.667 141.667 OFFCURVE",
"258 163 CURVE SMOOTH",
"286 181.667 OFFCURVE",
"304.333 200.333 OFFCURVE",
"313 219 CURVE SMOOTH",
"314 223 OFFCURVE",
"315 226 OFFCURVE",
"315 228 CURVE SMOOTH",
"315 228 OFFCURVE",
"315 229 OFFCURVE",
"315 229 CURVE SMOOTH",
"313.667 231.667 OFFCURVE",
"311.667 230.667 OFFCURVE",
"309 226 CURVE SMOOTH",
"298.333 211.333 OFFCURVE",
"283.667 197.333 OFFCURVE",
"265 184 CURVE SMOOTH",
"237 164 OFFCURVE",
"208.667 154 OFFCURVE",
"180 154 CURVE SMOOTH",
"142 154 OFFCURVE",
"114.333 166.667 OFFCURVE",
"97 192 CURVE SMOOTH",
"86 209 OFFCURVE",
"80 231 OFFCURVE",
"80 257 CURVE SMOOTH",
"80 264 OFFCURVE",
"80 270 OFFCURVE",
"81 277 CURVE",
"104 245 OFFCURVE",
"136 231 OFFCURVE",
"175 231 CURVE SMOOTH",
"204 231 OFFCURVE",
"231 240 OFFCURVE",
"255 257 CURVE SMOOTH",
"281.667 276.333 OFFCURVE",
"296.333 298 OFFCURVE",
"299 322 CURVE SMOOTH",
"299 324.667 OFFCURVE",
"297.667 326.333 OFFCURVE",
"295 327 CURVE SMOOTH",
"292.333 327 OFFCURVE",
"291 325.667 OFFCURVE",
"291 323 CURVE SMOOTH",
"287.667 299.667 OFFCURVE",
"274 279.667 OFFCURVE",
"250 263 CURVE SMOOTH",
"228 247 OFFCURVE",
"204 239 OFFCURVE",
"178 239 CURVE SMOOTH",
"136 239 OFFCURVE",
"104 257 OFFCURVE",
"83 298 CURVE",
"85.667 315.333 OFFCURVE",
"92.333 331.667 OFFCURVE",
"99 349 CURVE SMOOTH",
"120.333 399.667 OFFCURVE",
"155 442.667 OFFCURVE",
"203 478 CURVE SMOOTH",
"251.667 514 OFFCURVE",
"299 532 OFFCURVE",
"345 532 CURVE SMOOTH",
"355.5 532 LINE SMOOTH",
"359.167 532 OFFCURVE",
"362.667 531.667 OFFCURVE",
"366 531 CURVE",
"408 506.333 OFFCURVE",
"438 465 OFFCURVE",
"456 407 CURVE",
"436 375.667 OFFCURVE",
"414.333 334.333 OFFCURVE",
"391 283 CURVE SMOOTH",
"376.333 247 OFFCURVE",
"360 211 OFFCURVE",
"344 175 CURVE SMOOTH",
"336 155.667 OFFCURVE",
"328 138.667 OFFCURVE",
"320 124 CURVE",
"248.667 108 OFFCURVE",
"195.667 80 OFFCURVE",
"161 40 CURVE SMOOTH",
"135 10 OFFCURVE",
"122 -18 OFFCURVE",
"122 -44 CURVE SMOOTH",
"122 -49.333 OFFCURVE",
"122.333 -53 OFFCURVE",
"123 -55 CURVE",
"103 -57 OFFCURVE",
"85 -55.667 OFFCURVE",
"69 -51 CURVE SMOOTH",
"47 -45 OFFCURVE",
"36 -35 OFFCURVE",
"36 -21 CURVE SMOOTH",
"36 -18.333 OFFCURVE",
"36.833 -15.667 OFFCURVE",
"38.5 -13 CURVE SMOOTH",
"41 -8 LINE",
"41 -5.333 OFFCURVE",
"39.333 -4 OFFCURVE",
"36 -4 CURVE SMOOTH",
"26.667 -4 OFFCURVE",
"22 -10.333 OFFCURVE",
"22 -23 CURVE SMOOTH",
"22 -53.667 OFFCURVE",
"50 -69 OFFCURVE",
"106 -69 CURVE SMOOTH",
"116.5 -69 LINE SMOOTH",
"120.167 -69 OFFCURVE",
"123.667 -68.667 OFFCURVE",
"127 -68 CURVE",
"140.333 -99.333 OFFCURVE",
"170.333 -115 OFFCURVE",
"217 -115 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135.667 -25.667 OFFCURVE",
"148.333 4 OFFCURVE",
"177 36 CURVE SMOOTH",
"206.333 69.333 OFFCURVE",
"251.667 94 OFFCURVE",
"313 110 CURVE",
"261.667 14 OFFCURVE",
"203.667 -40.333 OFFCURVE",
"139 -53 CURVE"
);
},
{
closed = 1;
nodes = (
"177.667 -108 OFFCURVE",
"153 -94 OFFCURVE",
"143 -66 CURVE",
"233 -53.333 OFFCURVE",
"307 8.667 OFFCURVE",
"365 120 CURVE",
"395.667 125.333 OFFCURVE",
"426.333 126.333 OFFCURVE",
"457 125 CURVE",
"429 21 OFFCURVE",
"372.667 -51 OFFCURVE",
"288 -91 CURVE SMOOTH",
"262 -102.333 OFFCURVE",
"238.333 -108 OFFCURVE",
"217 -108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"490.667 33 OFFCURVE",
"507.333 72.667 OFFCURVE",
"522 118 CURVE",
"551 110 LINE",
"513.667 42 OFFCURVE",
"487.333 4.333 OFFCURVE",
"472 -3 CURVE"
);
},
{
closed = 1;
nodes = (
"67.333 353.333 OFFCURVE",
"67 357 OFFCURVE",
"67 361 CURVE SMOOTH",
"67 373 LINE SMOOTH",
"67 443.667 OFFCURVE",
"96.333 496.333 OFFCURVE",
"155 531 CURVE SMOOTH",
"187.667 551 OFFCURVE",
"223 561 OFFCURVE",
"261 561 CURVE SMOOTH",
"289 561 OFFCURVE",
"315 555.667 OFFCURVE",
"339 545 CURVE",
"284.333 538.333 OFFCURVE",
"231 516.333 OFFCURVE",
"179 479 CURVE SMOOTH",
"127 441.667 OFFCURVE",
"90 398.667 OFFCURVE",
"68 350 CURVE"
);
},
{
closed = 1;
nodes = (
"376.333 142.667 OFFCURVE",
"380 151.333 OFFCURVE",
"384 162 CURVE SMOOTH",
"430.5 280 LINE SMOOTH",
"444.167 314.667 OFFCURVE",
"455.667 344.667 OFFCURVE",
"465 370 CURVE",
"471.667 340.667 OFFCURVE",
"475 307.667 OFFCURVE",
"475 271 CURVE SMOOTH",
"475 220.333 OFFCURVE",
"470 174.667 OFFCURVE",
"460 134 CURVE",
"450 135 OFFCURVE",
"440 135 OFFCURVE",
"431 135 CURVE SMOOTH",
"411 135 OFFCURVE",
"391 134 OFFCURVE",
"371 132 CURVE"
);
},
{
closed = 1;
nodes = (
"472 133 LINE",
"484.667 181 OFFCURVE",
"491 231.333 OFFCURVE",
"491 284 CURVE SMOOTH",
"491 324 OFFCURVE",
"486.333 361 OFFCURVE",
"477 395 CURVE",
"485.667 413 OFFCURVE",
"493.667 428 OFFCURVE",
"501 440 CURVE",
"517.667 406 OFFCURVE",
"526 361.667 OFFCURVE",
"526 307 CURVE SMOOTH",
"526 253.667 OFFCURVE",
"518 194.667 OFFCURVE",
"502 130 CURVE"
);
},
{
closed = 1;
nodes = (
"449 469.333 OFFCURVE",
"421.667 504.333 OFFCURVE",
"385 529 CURVE",
"433.667 519.667 OFFCURVE",
"469.333 495.667 OFFCURVE",
"492 457 CURVE",
"484 447.667 OFFCURVE",
"476.333 437.333 OFFCURVE",
"467 424 CURVE"
);
},
{
closed = 1;
nodes = (
"809.333 -51 OFFCURVE",
"851.333 -22 OFFCURVE",
"874 22 CURVE SMOOTH",
"876 25 OFFCURVE",
"876 28 OFFCURVE",
"876 30 CURVE SMOOTH",
"876 32 OFFCURVE",
"875 33 OFFCURVE",
"873 33 CURVE SMOOTH",
"870.333 33 OFFCURVE",
"867.667 31 OFFCURVE",
"865 27 CURVE SMOOTH",
"840.333 -13.667 OFFCURVE",
"815 -34 OFFCURVE",
"789 -34 CURVE SMOOTH",
"760 -34 OFFCURVE",
"744 -5 OFFCURVE",
"744 54 CURVE SMOOTH",
"744 100 OFFCURVE",
"755 166 OFFCURVE",
"777 253 CURVE SMOOTH",
"806 366 OFFCURVE",
"839 422 OFFCURVE",
"875 422 CURVE SMOOTH",
"880 422 OFFCURVE",
"883 423 OFFCURVE",
"885 428 CURVE",
"885 432 OFFCURVE",
"883 434 OFFCURVE",
"879 434 CURVE SMOOTH",
"825.667 438 OFFCURVE",
"780.667 384 OFFCURVE",
"744 272 CURVE SMOOTH",
"716 185 OFFCURVE",
"702 110 OFFCURVE",
"702 47 CURVE SMOOTH",
"702 -18 OFFCURVE",
"725 -51 OFFCURVE",
"772 -51 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01299 952 79 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 950 125 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 79 74 79 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 79 25 79 41 79 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01281 79 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01290 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 125 186 125 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 125 121 125 137 125 153 125 169 125 185 125 201 125 217 125 233 125 249 125 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 125 25 125 41 125 57 125 73 125 89 125 105 125 121 125 137 125 153 125 169 125 185 125 201 125 217 125 233 125 249 125 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 125 25 125 41 125 57 125 73 125 89 125 105 125 121 125 137 125 153 125 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012131 79 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012246 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012147 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012235 949 183 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012210 152 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01225 183 235 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 152 210 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012183 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01253 152 210 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012152 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012223 947 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012183 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\012116 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012131 152 210 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012192 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 833;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2021-05-11 10:38:29 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{434, 0}";
},
{
name = top;
position = "{572, 544}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"122 -95 OFFCURVE",
"180.333 -71.667 OFFCURVE",
"237 -25 CURVE SMOOTH",
"258.333 -7.667 OFFCURVE",
"279.333 10.667 OFFCURVE",
"298 32 CURVE",
"306 29.333 OFFCURVE",
"315.333 28 OFFCURVE",
"326 28 CURVE SMOOTH",
"352 28 OFFCURVE",
"376.333 38.333 OFFCURVE",
"399 59 CURVE SMOOTH",
"401 61 OFFCURVE",
"401 63 OFFCURVE",
"399 65 CURVE SMOOTH",
"397.667 67 OFFCURVE",
"396 67 OFFCURVE",
"394 65 CURVE SMOOTH",
"372.667 45.667 OFFCURVE",
"350 36 OFFCURVE",
"326 36 CURVE SMOOTH",
"318 36 OFFCURVE",
"310.667 37 OFFCURVE",
"304 39 CURVE",
"361.333 102.333 OFFCURVE",
"405.667 175 OFFCURVE",
"437 257 CURVE",
"451 259.667 OFFCURVE",
"465 260.667 OFFCURVE",
"479 260 CURVE",
"493.667 168 OFFCURVE",
"514.333 95 OFFCURVE",
"541 39 CURVE",
"537.667 37 OFFCURVE",
"532.833 35.333 OFFCURVE",
"526.5 34 CURVE SMOOTH",
"520.167 32.667 OFFCURVE",
"517 31.333 OFFCURVE",
"517 30 CURVE SMOOTH",
"517 24 OFFCURVE",
"522 21 OFFCURVE",
"532 21 CURVE SMOOTH",
"538.667 21 OFFCURVE",
"544.667 22.667 OFFCURVE",
"550 26 CURVE",
"572.667 -6.667 OFFCURVE",
"598.667 -23 OFFCURVE",
"628 -23 CURVE SMOOTH",
"658.667 -23 OFFCURVE",
"688.333 -7.667 OFFCURVE",
"717 23 CURVE SMOOTH",
"717.667 23.667 OFFCURVE",
"717.667 24.333 OFFCURVE",
"717 25 CURVE SMOOTH",
"715.667 25.667 OFFCURVE",
"715 26.5 OFFCURVE",
"715 27.5 CURVE SMOOTH",
"715 28.5 OFFCURVE",
"714.333 29.333 OFFCURVE",
"713 30 CURVE",
"714.333 30 OFFCURVE",
"706.333 23.333 OFFCURVE",
"689 10 CURVE SMOOTH",
"671.667 -3.333 OFFCURVE",
"656 -10 OFFCURVE",
"642 -10 CURVE SMOOTH",
"616.667 -10 OFFCURVE",
"592.667 12 OFFCURVE",
"570 56 CURVE",
"575.333 66.667 OFFCURVE",
"580.667 80.333 OFFCURVE",
"586 99 CURVE",
"605.333 49.667 OFFCURVE",
"626.333 25 OFFCURVE",
"649 25 CURVE SMOOTH",
"674.333 25 OFFCURVE",
"687 45 OFFCURVE",
"687 85 CURVE SMOOTH",
"687 117 OFFCURVE",
"676 148 OFFCURVE",
"654 178 CURVE SMOOTH",
"643.333 192.667 OFFCURVE",
"630.667 206 OFFCURVE",
"616 218 CURVE",
"638.667 311.333 OFFCURVE",
"660.667 379.667 OFFCURVE",
"682 423 CURVE SMOOTH",
"714.667 489 OFFCURVE",
"756 522 OFFCURVE",
"806 522 CURVE SMOOTH",
"824 522 OFFCURVE",
"840.667 515.333 OFFCURVE",
"856 502 CURVE SMOOTH",
"868 491.333 OFFCURVE",
"875.333 481 OFFCURVE",
"878 471 CURVE SMOOTH",
"878.667 466.333 OFFCURVE",
"880.667 464.667 OFFCURVE",
"884 466 CURVE SMOOTH",
"886.667 467.333 OFFCURVE",
"887.333 470.333 OFFCURVE",
"886 475 CURVE SMOOTH",
"880.667 494.333 OFFCURVE",
"872.333 510.667 OFFCURVE",
"861 524 CURVE SMOOTH",
"843.667 544 OFFCURVE",
"822 554 OFFCURVE",
"796 554 CURVE SMOOTH",
"740.667 554 OFFCURVE",
"696.667 518 OFFCURVE",
"664 446 CURVE SMOOTH",
"644.667 403.333 OFFCURVE",
"624.333 330.667 OFFCURVE",
"603 228 CURVE",
"588.333 238.667 OFFCURVE",
"573.667 246.333 OFFCURVE",
"559 253 CURVE",
"543 345.667 OFFCURVE",
"525 416 OFFCURVE",
"505 464 CURVE SMOOTH",
"473.667 537.333 OFFCURVE",
"433.333 574 OFFCURVE",
"384 574 CURVE SMOOTH",
"358.667 574 OFFCURVE",
"338.667 565.667 OFFCURVE",
"324 549 CURVE",
"276 550.333 OFFCURVE",
"229 535.667 OFFCURVE",
"183 505 CURVE SMOOTH",
"136.333 475 OFFCURVE",
"100.333 435.333 OFFCURVE",
"75 386 CURVE SMOOTH",
"58.333 353.333 OFFCURVE",
"50 317.333 OFFCURVE",
"50 278 CURVE SMOOTH",
"50 208.667 OFFCURVE",
"75 176 OFFCURVE",
"125 180 CURVE SMOOTH",
"145.667 180.667 OFFCURVE",
"169.667 193.667 OFFCURVE",
"197 219 CURVE SMOOTH",
"219.667 239.667 OFFCURVE",
"234.667 258.333 OFFCURVE",
"242 275 CURVE",
"242.667 279 OFFCURVE",
"242.667 282 OFFCURVE",
"242 284 CURVE",
"240 284.667 OFFCURVE",
"237.667 283.333 OFFCURVE",
"235 280 CURVE SMOOTH",
"202 227 OFFCURVE",
"168 200 OFFCURVE",
"132 200 CURVE SMOOTH",
"95 200 OFFCURVE",
"77 226 OFFCURVE",
"77 278 CURVE SMOOTH",
"77 309.333 OFFCURVE",
"83.333 340.667 OFFCURVE",
"96 372 CURVE SMOOTH",
"116.667 424 OFFCURVE",
"147 464.333 OFFCURVE",
"187 493 CURVE SMOOTH",
"223 519 OFFCURVE",
"259 532 OFFCURVE",
"295 532 CURVE SMOOTH",
"300 532 OFFCURVE",
"305 531 OFFCURVE",
"310 531 CURVE",
"298.667 510.333 OFFCURVE",
"293 488 OFFCURVE",
"293 464 CURVE SMOOTH",
"293 432 OFFCURVE",
"302 403.667 OFFCURVE",
"320 379 CURVE",
"320.667 376.333 OFFCURVE",
"322.667 376 OFFCURVE",
"326 378 CURVE SMOOTH",
"328 378.667 OFFCURVE",
"328.333 380.333 OFFCURVE",
"327 383 CURVE SMOOTH",
"309.667 408.333 OFFCURVE",
"301 435.333 OFFCURVE",
"301 464 CURVE SMOOTH",
"301 488.667 OFFCURVE",
"307 510.667 OFFCURVE",
"319 530 CURVE",
"381 518.667 OFFCURVE",
"424.333 473.667 OFFCURVE",
"449 395 CURVE",
"445 356.333 OFFCURVE",
"434 313 OFFCURVE",
"416 265 CURVE",
"364 254.333 OFFCURVE",
"317.333 229.333 OFFCURVE",
"276 190 CURVE SMOOTH",
"250.667 166 OFFCURVE",
"238 140 OFFCURVE",
"238 112 CURVE SMOOTH",
"238 79.333 OFFCURVE",
"253 55 OFFCURVE",
"283 39 CURVE",
"211 -42.333 OFFCURVE",
"138.667 -83 OFFCURVE",
"66 -83 CURVE SMOOTH",
"32.667 -83 OFFCURVE",
"12 -54.333 OFFCURVE",
"12 -21 CURVE SMOOTH",
"12 -12.333 OFFCURVE",
"14.667 -1 OFFCURVE",
"20 13 CURVE SMOOTH",
"28 34 LINE",
"28 36 OFFCURVE",
"27.333 37 OFFCURVE",
"26 37 CURVE SMOOTH",
"24 37 OFFCURVE",
"22.667 36 OFFCURVE",
"22 34 CURVE",
"5.333 12.667 OFFCURVE",
"-3 -9.333 OFFCURVE",
"-3 -32 CURVE SMOOTH",
"-3 -70.667 OFFCURVE",
"23.333 -95 OFFCURVE",
"62 -95 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"264 59 OFFCURVE",
"252 79.667 OFFCURVE",
"252 107 CURVE SMOOTH",
"252 133 OFFCURVE",
"264 157.667 OFFCURVE",
"288 181 CURVE SMOOTH",
"324 215 OFFCURVE",
"365 238.667 OFFCURVE",
"411 252 CURVE",
"379.667 174 OFFCURVE",
"338.667 105 OFFCURVE",
"288 45 CURVE"
);
},
{
closed = 1;
nodes = (
"548.333 103 OFFCURVE",
"532 165 OFFCURVE",
"514 257 CURVE",
"528 255 OFFCURVE",
"540.333 251.667 OFFCURVE",
"551 247 CURVE",
"553.667 236.333 OFFCURVE",
"554.667 228.333 OFFCURVE",
"556 219 CURVE SMOOTH",
"562.667 180.333 OFFCURVE",
"569.667 147 OFFCURVE",
"579 119 CURVE",
"573.667 99 OFFCURVE",
"568.333 83 OFFCURVE",
"563 71 CURVE"
);
},
{
closed = 1;
nodes = (
"628 33 OFFCURVE",
"608 59.333 OFFCURVE",
"590 112 CURVE",
"601.333 155.333 OFFCURVE",
"609.333 187.667 OFFCURVE",
"614 209 CURVE",
"626 198.333 OFFCURVE",
"637.333 186.333 OFFCURVE",
"648 173 CURVE SMOOTH",
"668.667 144.333 OFFCURVE",
"679 115.333 OFFCURVE",
"679 86 CURVE SMOOTH",
"679 50.667 OFFCURVE",
"669.333 33 OFFCURVE",
"650 33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"576.333 159.333 OFFCURVE",
"570 187 OFFCURVE",
"564 220 CURVE SMOOTH",
"560 243 LINE",
"574.667 236.333 OFFCURVE",
"587.667 229.333 OFFCURVE",
"601 220 CURVE",
"593 178.667 OFFCURVE",
"587 151.333 OFFCURVE",
"583 134 CURVE"
);
},
{
closed = 1;
nodes = (
"452.333 298.333 OFFCURVE",
"460.333 326.667 OFFCURVE",
"465 354 CURVE",
"478 270 LINE",
"464.667 271.333 OFFCURVE",
"453 270.333 OFFCURVE",
"441 269 CURVE"
);
},
{
closed = 1;
nodes = (
"537 261 OFFCURVE",
"524.667 264 OFFCURVE",
"512 266 CURVE",
"498.667 331.333 OFFCURVE",
"489 377.667 OFFCURVE",
"481 407 CURVE SMOOTH",
"457 493 OFFCURVE",
"408 540 OFFCURVE",
"334 548 CURVE",
"343.333 556.667 OFFCURVE",
"354.333 562 OFFCURVE",
"367 564 CURVE SMOOTH",
"371 565 OFFCURVE",
"375 565 OFFCURVE",
"379 565 CURVE SMOOTH",
"420 565 OFFCURVE",
"456 529 OFFCURVE",
"489 457 CURVE SMOOTH",
"513 404.333 OFFCURVE",
"533 337.667 OFFCURVE",
"549 257 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 951 85 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 71 118 71 134 71 150 71 166 71 182 71 198 71 214 71 230 71 246 71 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 150 71 166 71 182 71 198 71 214 71 230 71 246 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 150 71 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 71 181 71 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012178 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012104 949 116 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 949 145 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 948 83 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01213 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01217 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01219 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01229 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01231 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01249 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01251 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01255 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 116 104 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012100 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012129 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012143 145 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012161 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012169 178 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012171 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012171 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 686;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
lastChange = "2021-05-11 11:11:54 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{173, -26}";
},
{
name = center;
position = "{267, 305}";
},
{
name = ogonek;
position = "{176, -26}";
},
{
name = top;
position = "{425, 539}";
},
{
name = topleft;
position = "{295, 215}";
},
{
name = topright;
position = "{470, 434}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"361 -60 OFFCURVE",
"403 -41.333 OFFCURVE",
"439 -4 CURVE SMOOTH",
"475.667 33.333 OFFCURVE",
"498.333 82 OFFCURVE",
"507 142 CURVE",
"541 194.667 OFFCURVE",
"558 249.333 OFFCURVE",
"558 306 CURVE SMOOTH",
"558 352.667 OFFCURVE",
"543 392.667 OFFCURVE",
"513 426 CURVE SMOOTH",
"484.333 458 OFFCURVE",
"447.667 478.333 OFFCURVE",
"403 487 CURVE",
"355 544.333 OFFCURVE",
"304.667 573 OFFCURVE",
"252 573 CURVE SMOOTH",
"233.333 573 OFFCURVE",
"215.667 568.667 OFFCURVE",
"199 560 CURVE SMOOTH",
"146.333 534.667 OFFCURVE",
"121.667 488 OFFCURVE",
"125 420 CURVE",
"67.667 374.667 OFFCURVE",
"39 324 OFFCURVE",
"39 268 CURVE SMOOTH",
"39 236.667 OFFCURVE",
"42.667 204.667 OFFCURVE",
"50 172 CURVE",
"44 148.667 OFFCURVE",
"41 127.333 OFFCURVE",
"41 108 CURVE SMOOTH",
"41 15.333 OFFCURVE",
"93 -31.333 OFFCURVE",
"197 -32 CURVE",
"232.333 -50.667 OFFCURVE",
"271 -60 OFFCURVE",
"313 -60 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"88 21 OFFCURVE",
"60 57 OFFCURVE",
"60 114 CURVE SMOOTH",
"60 120 OFFCURVE",
"60 126 OFFCURVE",
"61 132 CURVE",
"80.333 80.667 OFFCURVE",
"107.667 38.667 OFFCURVE",
"143 6 CURVE"
);
},
{
closed = 1;
nodes = (
"278 -52 OFFCURVE",
"245.667 -45 OFFCURVE",
"217 -31 CURVE",
"318.333 -25.667 OFFCURVE",
"420 32 OFFCURVE",
"488 116 CURVE",
"464.871 18.343 OFFCURVE",
"400.162 -52 OFFCURVE",
"314 -52 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"64.667 260.667 OFFCURVE",
"71.667 295.667 OFFCURVE",
"87 327 CURVE SMOOTH",
"97.667 349.667 OFFCURVE",
"111.667 370.333 OFFCURVE",
"129 389 CURVE",
"133 370.333 OFFCURVE",
"138.333 353.333 OFFCURVE",
"145 340 CURVE",
"109 304 OFFCURVE",
"82.667 264.667 OFFCURVE",
"66 222 CURVE"
);
},
{
closed = 1;
nodes = (
"179 1 OFFCURVE",
"171 2 OFFCURVE",
"164 3 CURVE",
"115.333 45 OFFCURVE",
"84.333 102.667 OFFCURVE",
"71 176 CURVE",
"87 226 OFFCURVE",
"116 274 OFFCURVE",
"158 320 CURVE",
"190 278.667 OFFCURVE",
"228.333 258 OFFCURVE",
"273 258 CURVE SMOOTH",
"311 258 OFFCURVE",
"338.333 278.333 OFFCURVE",
"355 319 CURVE SMOOTH",
"356 322 OFFCURVE",
"354 325 OFFCURVE",
"350 325 CURVE SMOOTH",
"348 325 OFFCURVE",
"347 324 OFFCURVE",
"347 322 CURVE SMOOTH",
"331.667 284.667 OFFCURVE",
"306.667 266 OFFCURVE",
"272 266 CURVE SMOOTH",
"230 266 OFFCURVE",
"194.333 286.667 OFFCURVE",
"165 328 CURVE",
"225 390 OFFCURVE",
"281.333 421 OFFCURVE",
"334 421 CURVE SMOOTH",
"342.667 421 OFFCURVE",
"347 423 OFFCURVE",
"347 427 CURVE SMOOTH",
"347 431.667 OFFCURVE",
"343 434 OFFCURVE",
"335 434 CURVE SMOOTH",
"273.667 434 OFFCURVE",
"213.333 405.333 OFFCURVE",
"154 348 CURVE",
"147.333 362.667 OFFCURVE",
"140.667 379.333 OFFCURVE",
"138 398 CURVE",
"193.333 452.667 OFFCURVE",
"265 480 OFFCURVE",
"353 480 CURVE SMOOTH",
"368.333 480 OFFCURVE",
"381.667 478.667 OFFCURVE",
"393 476 CURVE",
"440.333 420 OFFCURVE",
"471.333 353.667 OFFCURVE",
"486 277 CURVE SMOOTH",
"492.667 250.333 OFFCURVE",
"494.667 225.333 OFFCURVE",
"496 200 CURVE",
"466.667 144.667 OFFCURVE",
"422.667 98 OFFCURVE",
"364 60 CURVE SMOOTH",
"305 22 OFFCURVE",
"245 1 OFFCURVE",
"186 1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"134 488.333 OFFCURVE",
"156.333 530.333 OFFCURVE",
"203 553 CURVE SMOOTH",
"215.667 559.667 OFFCURVE",
"230 563 OFFCURVE",
"246 563 CURVE SMOOTH",
"290 563 OFFCURVE",
"334.667 539 OFFCURVE",
"380 491 CURVE",
"370.667 492.333 OFFCURVE",
"362.333 493 OFFCURVE",
"353 493 CURVE SMOOTH",
"269 493 OFFCURVE",
"196.667 471 OFFCURVE",
"136 427 CURVE"
);
},
{
closed = 1;
nodes = (
"507.667 238.333 OFFCURVE",
"507 246 OFFCURVE",
"505.5 253.5 CURVE SMOOTH",
"502 277 LINE SMOOTH",
"491 352 OFFCURVE",
"458.667 415 OFFCURVE",
"418 469 CURVE",
"488.667 445 OFFCURVE",
"524 395 OFFCURVE",
"524 319 CURVE SMOOTH",
"524 289 OFFCURVE",
"519 259.667 OFFCURVE",
"509 231 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 951 32 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 32 186 32 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 32 121 32 137 32 153 32 169 32 185 32 201 32 217 32 233 32 249 32 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 169 32 185 32 201 32 217 32 233 32 249 32 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01281 50 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01238 92 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0128 103 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01299 72 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 92 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 103 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01252 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01225 103 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 72 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01297 72 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 534;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"243 -60 OFFCURVE",
"338.667 31 OFFCURVE",
"400 213 CURVE",
"447.333 215.667 OFFCURVE",
"492.667 223.667 OFFCURVE",
"536 237 CURVE",
"530 189.667 OFFCURVE",
"503.667 155.667 OFFCURVE",
"457 135 CURVE SMOOTH",
"455 134.333 OFFCURVE",
"454.333 132.667 OFFCURVE",
"455 130 CURVE SMOOTH",
"455.667 127.333 OFFCURVE",
"457.667 126.667 OFFCURVE",
"461 128 CURVE SMOOTH",
"511.667 150 OFFCURVE",
"539.333 187.333 OFFCURVE",
"544 240 CURVE",
"645 273 OFFCURVE",
"730 334 OFFCURVE",
"730 401 CURVE SMOOTH",
"730 435 OFFCURVE",
"709 463 OFFCURVE",
"666 484 CURVE SMOOTH",
"626 503.333 OFFCURVE",
"573.667 514.667 OFFCURVE",
"509 518 CURVE",
"519.667 529.333 OFFCURVE",
"530 536 OFFCURVE",
"540 538 CURVE SMOOTH",
"546.667 538.667 OFFCURVE",
"550 542 OFFCURVE",
"550 548 CURVE SMOOTH",
"550 551.333 OFFCURVE",
"547.667 552.667 OFFCURVE",
"543 552 CURVE SMOOTH",
"523 548.667 OFFCURVE",
"504.667 537.667 OFFCURVE",
"488 519 CURVE",
"380.667 519.667 OFFCURVE",
"292.333 500.333 OFFCURVE",
"223 461 CURVE SMOOTH",
"165 427 OFFCURVE",
"136 389.667 OFFCURVE",
"136 349 CURVE SMOOTH",
"136 336.333 OFFCURVE",
"139.667 324.333 OFFCURVE",
"147 313 CURVE",
"83.667 263.667 OFFCURVE",
"46.333 206 OFFCURVE",
"35 140 CURVE SMOOTH",
"33 130 OFFCURVE",
"32 120 OFFCURVE",
"32 110 CURVE",
"14.667 83.333 OFFCURVE",
"6 57 OFFCURVE",
"6 31 CURVE SMOOTH",
"6 4.333 OFFCURVE",
"15 -17 OFFCURVE",
"33 -33 CURVE SMOOTH",
"51.667 -51 OFFCURVE",
"78.333 -60 OFFCURVE",
"113 -60 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 -46 OFFCURVE",
"25 -23 OFFCURVE",
"25 23 CURVE SMOOTH",
"25 37 OFFCURVE",
"28.667 52.333 OFFCURVE",
"36 69 CURVE",
"48 20 OFFCURVE",
"79 -6 OFFCURVE",
"129 -6 CURVE SMOOTH",
"178 -6 OFFCURVE",
"223 28 OFFCURVE",
"265 97 CURVE SMOOTH",
"294.333 145 OFFCURVE",
"318.667 202 OFFCURVE",
"338 268 CURVE SMOOTH",
"339.333 272.667 OFFCURVE",
"340.667 277.167 OFFCURVE",
"342 281.5 CURVE SMOOTH",
"346 296 LINE",
"359.333 298.667 OFFCURVE",
"372.667 303.667 OFFCURVE",
"386 309 CURVE",
"347 199 LINE SMOOTH",
"285.667 35.667 OFFCURVE",
"207.333 -46 OFFCURVE",
"112 -46 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"76 2 OFFCURVE",
"49 32 OFFCURVE",
"46 90 CURVE",
"88 158.667 OFFCURVE",
"157 200.667 OFFCURVE",
"253 216 CURVE",
"256.333 217.333 OFFCURVE",
"258.333 219 OFFCURVE",
"259 221 CURVE SMOOTH",
"259.667 223 OFFCURVE",
"259.667 225 OFFCURVE",
"259 227 CURVE SMOOTH",
"257.667 229 OFFCURVE",
"256 229.667 OFFCURVE",
"254 229 CURVE",
"163.333 219.667 OFFCURVE",
"94.667 187.667 OFFCURVE",
"48 133 CURVE",
"49 138 LINE SMOOTH",
"59 199.333 OFFCURVE",
"94.667 254.667 OFFCURVE",
"156 304 CURVE",
"174 288 OFFCURVE",
"201.667 280 OFFCURVE",
"239 280 CURVE SMOOTH",
"264.333 280 OFFCURVE",
"294.667 284 OFFCURVE",
"330 292 CURVE",
"323 270 LINE SMOOTH",
"303.667 202 OFFCURVE",
"280.667 145.667 OFFCURVE",
"254 101 CURVE SMOOTH",
"215 35 OFFCURVE",
"173 2 OFFCURVE",
"127 2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 301 OFFCURVE",
"179 305 OFFCURVE",
"168 314 CURVE",
"226.667 357.333 OFFCURVE",
"292 380 OFFCURVE",
"364 382 CURVE",
"354.667 360.667 OFFCURVE",
"346 338.667 OFFCURVE",
"338 316 CURVE",
"311.333 309.333 OFFCURVE",
"286.667 305.667 OFFCURVE",
"260 303 CURVE SMOOTH",
"247 301 OFFCURVE",
"234 301 OFFCURVE",
"224 301 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"155.667 327.333 OFFCURVE",
"154 333.667 OFFCURVE",
"154 341 CURVE SMOOTH",
"154 375 OFFCURVE",
"185 410 OFFCURVE",
"247 446 CURVE SMOOTH",
"316.333 487.333 OFFCURVE",
"393.667 508.333 OFFCURVE",
"479 509 CURVE",
"457.667 482.333 OFFCURVE",
"436 441.333 OFFCURVE",
"414 386 CURVE",
"408.667 387.333 OFFCURVE",
"403.167 388.167 OFFCURVE",
"397.5 388.5 CURVE SMOOTH",
"379 390 LINE",
"399 438 OFFCURVE",
"417 468 OFFCURVE",
"433 480 CURVE SMOOTH",
"435 482 OFFCURVE",
"435.333 484 OFFCURVE",
"434 486 CURVE SMOOTH",
"432 488 OFFCURVE",
"430 488.333 OFFCURVE",
"428 487 CURVE SMOOTH",
"410.667 473 OFFCURVE",
"390.667 440.667 OFFCURVE",
"368 390 CURVE",
"288.667 388.667 OFFCURVE",
"219 366 OFFCURVE",
"159 322 CURVE"
);
},
{
closed = 1;
nodes = (
"357.333 331.333 OFFCURVE",
"361 342.167 OFFCURVE",
"365 352.5 CURVE SMOOTH",
"376 382 LINE",
"388 382 OFFCURVE",
"399.667 381 OFFCURVE",
"411 379 CURVE",
"394 332 LINE",
"382 327.333 OFFCURVE",
"368.667 323.333 OFFCURVE",
"354 320 CURVE"
);
},
{
closed = 1;
nodes = (
"408.333 237.333 OFFCURVE",
"412.667 251.667 OFFCURVE",
"418 269 CURVE SMOOTH",
"436 330 LINE",
"450.667 336.667 OFFCURVE",
"466.333 343.667 OFFCURVE",
"481 353 CURVE",
"517 329 OFFCURVE",
"535.667 296.333 OFFCURVE",
"537 255 CURVE",
"511 245.667 OFFCURVE",
"483.667 238 OFFCURVE",
"455 232 CURVE SMOOTH",
"435.667 229.333 OFFCURVE",
"419 227.333 OFFCURVE",
"405 226 CURVE"
);
},
{
closed = 1;
nodes = (
"448 370 LINE",
"467 362 LINE",
"442 350 LINE"
);
},
{
closed = 1;
nodes = (
"543.333 299.333 OFFCURVE",
"525 332.667 OFFCURVE",
"489 358 CURVE",
"507.667 368.667 OFFCURVE",
"525.667 380.333 OFFCURVE",
"547 395 CURVE SMOOTH",
"554 399 OFFCURVE",
"557 403 OFFCURVE",
"557 408 CURVE SMOOTH",
"557 411 OFFCURVE",
"556 412 OFFCURVE",
"554 412 CURVE SMOOTH",
"550.667 412 OFFCURVE",
"547.667 410.667 OFFCURVE",
"545 408 CURVE",
"523.667 393.333 OFFCURVE",
"500.333 379.333 OFFCURVE",
"475 366 CURVE",
"466.333 371.333 OFFCURVE",
"458 375.333 OFFCURVE",
"450 378 CURVE",
"468.667 442 OFFCURVE",
"487.333 485.333 OFFCURVE",
"502 508 CURVE",
"556.667 506 OFFCURVE",
"602.667 494.333 OFFCURVE",
"640 473 CURVE SMOOTH",
"677.333 451.667 OFFCURVE",
"695 426 OFFCURVE",
"693 396 CURVE SMOOTH",
"687.667 340 OFFCURVE",
"638 294 OFFCURVE",
"544 258 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 950 117 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 13 181 13 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012128 117 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01284 138 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012161 22 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01220 22 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01226 22 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 22 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01236 22 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 22 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012135 22 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012141 22 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 138 84 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012153 138 84 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 606;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"361 -56 OFFCURVE",
"375.667 -53.667 OFFCURVE",
"389 -49 CURVE SMOOTH",
"425 -36.333 OFFCURVE",
"451.333 -14 OFFCURVE",
"468 18 CURVE SMOOTH",
"480 41 OFFCURVE",
"486 66 OFFCURVE",
"486 94 CURVE SMOOTH",
"486 100 OFFCURVE",
"486 106 OFFCURVE",
"485 113 CURVE",
"533.667 172.333 OFFCURVE",
"558 236.667 OFFCURVE",
"558 306 CURVE SMOOTH",
"558 377.333 OFFCURVE",
"526.667 430.333 OFFCURVE",
"464 465 CURVE",
"464.667 479 OFFCURVE",
"462.667 492.333 OFFCURVE",
"458 505 CURVE SMOOTH",
"442 553 OFFCURVE",
"405 577 OFFCURVE",
"347 577 CURVE SMOOTH",
"308.333 577 OFFCURVE",
"270.667 564.667 OFFCURVE",
"234 540 CURVE SMOOTH",
"192.667 514 OFFCURVE",
"161.667 477.667 OFFCURVE",
"141 431 CURVE",
"73 383.667 OFFCURVE",
"39 329.333 OFFCURVE",
"39 268 CURVE SMOOTH",
"39 243.333 OFFCURVE",
"45 219.667 OFFCURVE",
"57 197 CURVE",
"46.333 165.667 OFFCURVE",
"41 136 OFFCURVE",
"41 108 CURVE SMOOTH",
"41 65.333 OFFCURVE",
"53.333 32 OFFCURVE",
"78 8 CURVE SMOOTH",
"105.333 -18.667 OFFCURVE",
"146.333 -32 OFFCURVE",
"201 -32 CURVE SMOOTH",
"217 -32 OFFCURVE",
"234.333 -30.333 OFFCURVE",
"253 -27 CURVE",
"283.667 -46.333 OFFCURVE",
"314.333 -56 OFFCURVE",
"345 -56 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"575.333 -309 OFFCURVE",
"610.667 -293 OFFCURVE",
"634 -261 CURVE SMOOTH",
"636 -258.333 OFFCURVE",
"637 -256.333 OFFCURVE",
"637 -255 CURVE SMOOTH",
"637 -253 OFFCURVE",
"636 -252.333 OFFCURVE",
"634 -253 CURVE SMOOTH",
"632 -253.667 OFFCURVE",
"629.333 -255.667 OFFCURVE",
"626 -259 CURVE",
"612 -279 OFFCURVE",
"590 -289 OFFCURVE",
"560 -289 CURVE SMOOTH",
"550.667 -289 OFFCURVE",
"540 -287.333 OFFCURVE",
"528 -284 CURVE SMOOTH",
"481.333 -272 OFFCURVE",
"434.667 -249 OFFCURVE",
"388 -215 CURVE",
"274 -121 LINE SMOOTH",
"231.333 -86.333 OFFCURVE",
"191.667 -61.667 OFFCURVE",
"157 -51 CURVE SMOOTH",
"139.667 -45.667 OFFCURVE",
"124.333 -43 OFFCURVE",
"111 -43 CURVE SMOOTH",
"57.667 -43 OFFCURVE",
"19 -79.333 OFFCURVE",
"19 -122 CURVE SMOOTH",
"19 -161.333 OFFCURVE",
"44.667 -189.667 OFFCURVE",
"96 -207 CURVE",
"106 -209 LINE",
"111.333 -209 OFFCURVE",
"114 -207.667 OFFCURVE",
"114 -205 CURVE SMOOTH",
"114 -201.667 OFFCURVE",
"110 -199 OFFCURVE",
"102 -197 CURVE SMOOTH",
"59.333 -186.333 OFFCURVE",
"38 -161 OFFCURVE",
"38 -121 CURVE SMOOTH",
"38 -95.667 OFFCURVE",
"47.667 -76.333 OFFCURVE",
"67 -63 CURVE SMOOTH",
"78 -56 OFFCURVE",
"89 -53 OFFCURVE",
"102 -53 CURVE SMOOTH",
"115 -53 OFFCURVE",
"129 -56 OFFCURVE",
"144 -63 CURVE SMOOTH",
"174.667 -78.333 OFFCURVE",
"229 -121 OFFCURVE",
"307 -191 CURVE SMOOTH",
"376.333 -252.333 OFFCURVE",
"434.667 -289.667 OFFCURVE",
"482 -303 CURVE SMOOTH",
"496.667 -307 OFFCURVE",
"512 -309 OFFCURVE",
"528 -309 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109 -3.333 OFFCURVE",
"61 44 OFFCURVE",
"61 116 CURVE SMOOTH",
"61 158.667 OFFCURVE",
"77.667 206.333 OFFCURVE",
"111 259 CURVE",
"117 151.667 OFFCURVE",
"151.667 66.333 OFFCURVE",
"215 3 CURVE",
"211.667 2.333 OFFCURVE",
"208.667 2 OFFCURVE",
"206 2 CURVE SMOOTH",
"197 2 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"65.333 225.333 OFFCURVE",
"65 230 OFFCURVE",
"65 236 CURVE SMOOTH",
"65 268 OFFCURVE",
"72.333 298.333 OFFCURVE",
"87 327 CURVE SMOOTH",
"96.333 346.333 OFFCURVE",
"108.333 364.667 OFFCURVE",
"123 382 CURVE",
"115.667 356 OFFCURVE",
"111.667 328.667 OFFCURVE",
"111 300 CURVE",
"91 274 OFFCURVE",
"76 248 OFFCURVE",
"66 222 CURVE"
);
},
{
closed = 1;
nodes = (
"324 -48 OFFCURVE",
"298 -40 OFFCURVE",
"272 -24 CURVE",
"352 -4.667 OFFCURVE",
"419.667 37 OFFCURVE",
"475 101 CURVE",
"476.333 69 OFFCURVE",
"470 40.667 OFFCURVE",
"456 16 CURVE SMOOTH",
"440.667 -11.333 OFFCURVE",
"417.667 -30.333 OFFCURVE",
"387 -41 CURVE SMOOTH",
"375.667 -45.667 OFFCURVE",
"363.333 -48 OFFCURVE",
"350 -48 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170.333 64.667 OFFCURVE",
"135 144.333 OFFCURVE",
"127 245 CURVE SMOOTH",
"125 280 LINE",
"155.667 321.333 OFFCURVE",
"188.333 354.333 OFFCURVE",
"227 381 CURVE SMOOTH",
"265.667 407.667 OFFCURVE",
"301.333 421 OFFCURVE",
"334 421 CURVE SMOOTH",
"345 421 OFFCURVE",
"348 423 OFFCURVE",
"348 428 CURVE SMOOTH",
"348 432 OFFCURVE",
"344 434 OFFCURVE",
"335 434 CURVE SMOOTH",
"262.333 434 OFFCURVE",
"193 396 OFFCURVE",
"127 320 CURVE",
"129.667 350.667 OFFCURVE",
"134.667 377.333 OFFCURVE",
"144 404 CURVE",
"198.667 454.667 OFFCURVE",
"268.333 480 OFFCURVE",
"353 480 CURVE SMOOTH",
"391.667 480 OFFCURVE",
"425.333 470.667 OFFCURVE",
"454 452 CURVE",
"444.667 408 OFFCURVE",
"410.333 373.333 OFFCURVE",
"369 372 CURVE SMOOTH",
"366.333 372 OFFCURVE",
"365 370.667 OFFCURVE",
"365 368 CURVE SMOOTH",
"365 365.333 OFFCURVE",
"366.333 364 OFFCURVE",
"369 364 CURVE SMOOTH",
"414.333 365.333 OFFCURVE",
"450.333 401.667 OFFCURVE",
"461 447 CURVE",
"503 417 OFFCURVE",
"524 374.333 OFFCURVE",
"524 319 CURVE SMOOTH",
"524 263 OFFCURVE",
"506.667 210.667 OFFCURVE",
"472 162 CURVE",
"448.736 208.528 OFFCURVE",
"397.071 250 OFFCURVE",
"349 250 CURVE SMOOTH",
"315.667 250 OFFCURVE",
"289.667 232.667 OFFCURVE",
"271 198 CURVE SMOOTH",
"269 195 OFFCURVE",
"271 192 OFFCURVE",
"276 192 CURVE SMOOTH",
"277 192 OFFCURVE",
"278 193 OFFCURVE",
"278 194 CURVE",
"295.333 225.333 OFFCURVE",
"319 241 OFFCURVE",
"349 241 CURVE SMOOTH",
"396.481 241 OFFCURVE",
"446.384 199.87 OFFCURVE",
"465 152 CURVE",
"407.667 76 OFFCURVE",
"318.333 22 OFFCURVE",
"233 6 CURVE"
);
},
{
closed = 1;
nodes = (
"181.667 483.333 OFFCURVE",
"210.333 514.667 OFFCURVE",
"247 538 CURVE SMOOTH",
"278.333 558.667 OFFCURVE",
"311.667 569 OFFCURVE",
"347 569 CURVE SMOOTH",
"400.333 569 OFFCURVE",
"434.667 547.333 OFFCURVE",
"450 504 CURVE SMOOTH",
"454 492.667 OFFCURVE",
"456 481 OFFCURVE",
"456 469 CURVE",
"424 485 OFFCURVE",
"389.667 493 OFFCURVE",
"353 493 CURVE SMOOTH",
"281.667 493 OFFCURVE",
"217.667 476.667 OFFCURVE",
"161 444 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01299 950 22 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01295 951 117 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 99 118 99 134 99 150 99 166 99 182 99 198 99 214 99 230 99 246 99 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 99 22 99 38 99 54 99 70 99 86 99 102 99 118 99 134 99 150 99 166 99 182 99 198 99 214 99 230 99 246 99 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 99 22 99 38 99 54 99 70 99 86 99 102 99 118 99 134 99 150 99 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 99 181 99 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01283 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01243 22 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01251 22 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01253 22 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 22 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012148 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01297 83 148 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012105 22 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012107 83 148 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012113 83 148 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012170 117 186 117 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 117 121 117 137 117 153 117 169 117 185 117 201 117 217 117 233 117 249 117 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 117 25 117 41 117 57 117 73 117 89 117 105 117 121 117 137 117 153 117 169 117 185 117 201 117 217 117 233 117 249 117 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 117 25 117 41 117 57 117 73 117 89 117 105 117 121 117 137 117 153 117 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012119 22 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012126 22 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012148 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012164 22 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012171 22 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012174 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01235 948 2 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01289 131 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01263 122 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 949 75 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012138 158 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01243 75 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01253 122 63 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 122 63 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01297 158 138 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012107 122 63 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012119 122 63 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012126 122 63 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012136 158 138 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 535;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2021-05-11 11:09:28 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{394, -58}";
},
{
name = top;
position = "{530, 564}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"700 -80 OFFCURVE",
"727 -47.667 OFFCURVE",
"727 -5 CURVE SMOOTH",
"727 25 OFFCURVE",
"716.333 52.667 OFFCURVE",
"695 78 CURVE SMOOTH",
"691.667 81.333 OFFCURVE",
"689 83 OFFCURVE",
"687 83 CURVE SMOOTH",
"683.667 83 OFFCURVE",
"683.667 81 OFFCURVE",
"687 77 CURVE SMOOTH",
"706.333 49.667 OFFCURVE",
"716 21.667 OFFCURVE",
"716 -7 CURVE SMOOTH",
"716 -41 OFFCURVE",
"703.333 -58 OFFCURVE",
"678 -58 CURVE SMOOTH",
"662 -58 OFFCURVE",
"642 -50 OFFCURVE",
"618 -34 CURVE SMOOTH",
"585.333 -12 OFFCURVE",
"549 25 OFFCURVE",
"513 78 CURVE SMOOTH",
"420 215 LINE",
"505.333 224.333 OFFCURVE",
"576 245.333 OFFCURVE",
"636 280 CURVE SMOOTH",
"700 318 OFFCURVE",
"730 358 OFFCURVE",
"730 401 CURVE SMOOTH",
"730 435 OFFCURVE",
"709 463 OFFCURVE",
"666 484 CURVE SMOOTH",
"626 503.333 OFFCURVE",
"573.667 514.667 OFFCURVE",
"509 518 CURVE",
"519.667 529.333 OFFCURVE",
"530 536 OFFCURVE",
"540 538 CURVE SMOOTH",
"546.667 538.667 OFFCURVE",
"550 542 OFFCURVE",
"550 548 CURVE SMOOTH",
"550 551.333 OFFCURVE",
"547.667 552.667 OFFCURVE",
"543 552 CURVE SMOOTH",
"523 548.667 OFFCURVE",
"504.667 537.667 OFFCURVE",
"488 519 CURVE",
"428.667 519 OFFCURVE",
"374.667 513 OFFCURVE",
"326 501 CURVE",
"299.333 557 OFFCURVE",
"248 588 OFFCURVE",
"192 588 CURVE SMOOTH",
"155.333 588 OFFCURVE",
"123.667 575.667 OFFCURVE",
"97 551 CURVE SMOOTH",
"70.333 527 OFFCURVE",
"57 496.333 OFFCURVE",
"57 459 CURVE SMOOTH",
"57 449.667 OFFCURVE",
"58 440.667 OFFCURVE",
"60 432 CURVE SMOOTH",
"66.667 394 OFFCURVE",
"92 367 OFFCURVE",
"136 351 CURVE",
"134.667 309.667 OFFCURVE",
"171 280 OFFCURVE",
"239 280 CURVE SMOOTH",
"263 280 OFFCURVE",
"292.333 283.667 OFFCURVE",
"327 291 CURVE",
"324.333 276.333 OFFCURVE",
"321.333 259.667 OFFCURVE",
"316 245 CURVE",
"264.667 63.667 OFFCURVE",
"187.333 -24.333 OFFCURVE",
"84 -19 CURVE",
"81.333 -18.333 OFFCURVE",
"80 -19.333 OFFCURVE",
"80 -22 CURVE SMOOTH",
"80 -24.667 OFFCURVE",
"81.333 -26.333 OFFCURVE",
"84 -27 CURVE",
"146 -29.667 OFFCURVE",
"200.667 0.667 OFFCURVE",
"248 64 CURVE SMOOTH",
"282.667 110.667 OFFCURVE",
"310.667 170.667 OFFCURVE",
"332 244 CURVE SMOOTH",
"336.667 260.667 OFFCURVE",
"340.667 277.667 OFFCURVE",
"344 295 CURVE",
"358.667 299 OFFCURVE",
"371.333 302.667 OFFCURVE",
"386 308 CURVE",
"347 199 LINE SMOOTH",
"288 35 OFFCURVE",
"207.333 -46 OFFCURVE",
"112 -46 CURVE SMOOTH",
"54 -46 OFFCURVE",
"25 -23 OFFCURVE",
"25 23 CURVE SMOOTH",
"25 61.667 OFFCURVE",
"45 99.667 OFFCURVE",
"85 137 CURVE SMOOTH",
"129.667 178.333 OFFCURVE",
"185.667 204.667 OFFCURVE",
"253 216 CURVE",
"256.333 217.333 OFFCURVE",
"258.333 219 OFFCURVE",
"259 221 CURVE SMOOTH",
"259.667 223 OFFCURVE",
"259.667 225 OFFCURVE",
"259 227 CURVE SMOOTH",
"257.667 229 OFFCURVE",
"256 229.667 OFFCURVE",
"254 229 CURVE",
"176.667 221 OFFCURVE",
"114.667 195.667 OFFCURVE",
"68 153 CURVE SMOOTH",
"26.667 115.667 OFFCURVE",
"6 75.333 OFFCURVE",
"6 32 CURVE SMOOTH",
"6 4.667 OFFCURVE",
"15 -17 OFFCURVE",
"33 -33 CURVE SMOOTH",
"51.667 -51 OFFCURVE",
"78.333 -60 OFFCURVE",
"113 -60 CURVE SMOOTH",
"243 -60 OFFCURVE",
"338.667 31 OFFCURVE",
"400 213 CURVE",
"402 213 LINE",
"470 81 LINE SMOOTH",
"497 29 OFFCURVE",
"528.333 -9.333 OFFCURVE",
"559 -36 CURVE SMOOTH",
"594.333 -65.333 OFFCURVE",
"626.667 -80 OFFCURVE",
"656 -80 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"175.333 300 OFFCURVE",
"151.333 315.333 OFFCURVE",
"154 346 CURVE",
"162 343.333 OFFCURVE",
"171.333 342 OFFCURVE",
"182 342 CURVE SMOOTH",
"213.333 342 OFFCURVE",
"239.667 352.667 OFFCURVE",
"261 374 CURVE SMOOTH",
"263 376 OFFCURVE",
"263 378 OFFCURVE",
"261 380 CURVE SMOOTH",
"259.667 382 OFFCURVE",
"258 382 OFFCURVE",
"256 380 CURVE SMOOTH",
"235.333 360.667 OFFCURVE",
"211.333 351 OFFCURVE",
"184 351 CURVE SMOOTH",
"174 351 OFFCURVE",
"164.667 352 OFFCURVE",
"156 354 CURVE",
"167.746 400.985 OFFCURVE",
"247.149 454.054 OFFCURVE",
"324 482 CURVE",
"333.333 454 OFFCURVE",
"338 423 OFFCURVE",
"338 389 CURVE SMOOTH",
"338 365.667 OFFCURVE",
"336 341 OFFCURVE",
"332 315 CURVE",
"290 305 OFFCURVE",
"254.667 300 OFFCURVE",
"226 300 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"101.667 376.333 OFFCURVE",
"81 400.667 OFFCURVE",
"75 434 CURVE SMOOTH",
"73 442.667 OFFCURVE",
"72 451.333 OFFCURVE",
"72 460 CURVE SMOOTH",
"72 494 OFFCURVE",
"83.667 522.667 OFFCURVE",
"107 546 CURVE SMOOTH",
"130.333 568.667 OFFCURVE",
"159 580 OFFCURVE",
"193 580 CURVE SMOOTH",
"243.667 580 OFFCURVE",
"293 549.667 OFFCURVE",
"317 499 CURVE",
"263 483.667 OFFCURVE",
"220 463 OFFCURVE",
"188 437 CURVE SMOOTH",
"158.667 411.667 OFFCURVE",
"141.667 386.333 OFFCURVE",
"137 361 CURVE"
);
},
{
closed = 1;
nodes = (
"349.667 339.333 OFFCURVE",
"351 358.333 OFFCURVE",
"351 377 CURVE SMOOTH",
"351 417.667 OFFCURVE",
"345 453.667 OFFCURVE",
"333 485 CURVE",
"379.667 499.667 OFFCURVE",
"428.333 507.667 OFFCURVE",
"479 509 CURVE",
"453.667 477.667 OFFCURVE",
"425.333 418.667 OFFCURVE",
"394 332 CURVE",
"379.333 326.667 OFFCURVE",
"363 322 OFFCURVE",
"347 318 CURVE"
);
},
{
closed = 1;
nodes = (
"407 233 LINE",
"410.333 244.333 OFFCURVE",
"415 258 OFFCURVE",
"419.5 274 CURVE SMOOTH",
"436 330 LINE",
"467.333 344.667 OFFCURVE",
"504.333 366.333 OFFCURVE",
"547 395 CURVE SMOOTH",
"554 399 OFFCURVE",
"557 403 OFFCURVE",
"557 408 CURVE SMOOTH",
"557 411 OFFCURVE",
"556 412 OFFCURVE",
"554 412 CURVE SMOOTH",
"550.667 412 OFFCURVE",
"547.667 410.667 OFFCURVE",
"545 408 CURVE",
"514.333 385.333 OFFCURVE",
"479.333 366 OFFCURVE",
"442 350 CURVE",
"465.333 431.333 OFFCURVE",
"485.333 484 OFFCURVE",
"502 508 CURVE",
"556.667 506 OFFCURVE",
"602.667 494.333 OFFCURVE",
"640 473 CURVE SMOOTH",
"675 453 OFFCURVE",
"693 429 OFFCURVE",
"693 401 CURVE SMOOTH",
"693 368 OFFCURVE",
"672 336 OFFCURVE",
"633 305 CURVE SMOOTH",
"591 272.333 OFFCURVE",
"531.667 248 OFFCURVE",
"455 232 CURVE SMOOTH",
"446.333 230.667 OFFCURVE",
"438 230 OFFCURVE",
"431 229 CURVE SMOOTH",
"411 227 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012125 947 138 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01298 74 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 948 87 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 74 98 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01233 87 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 74 98 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01272 74 98 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01280 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01285 87 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012111 74 98 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012169 87 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 688;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
lastChange = "2021-05-18 10:44:03 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{226, -178}";
},
{
name = top;
position = "{416, 559}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"266.667 -178 OFFCURVE",
"294.667 -168.667 OFFCURVE",
"320 -150 CURVE SMOOTH",
"346.667 -131.333 OFFCURVE",
"362 -109.333 OFFCURVE",
"366 -84 CURVE SMOOTH",
"366 -81.333 OFFCURVE",
"364.667 -79.667 OFFCURVE",
"362 -79 CURVE SMOOTH",
"359.333 -79 OFFCURVE",
"358 -80.333 OFFCURVE",
"358 -83 CURVE SMOOTH",
"354.667 -105 OFFCURVE",
"341.667 -124 OFFCURVE",
"319 -140 CURVE SMOOTH",
"297 -156 OFFCURVE",
"273.333 -164 OFFCURVE",
"248 -164 CURVE SMOOTH",
"191.333 -164 OFFCURVE",
"159 -129.333 OFFCURVE",
"151 -60 CURVE",
"185.667 -62.667 OFFCURVE",
"223.667 -59.333 OFFCURVE",
"269 -50 CURVE SMOOTH",
"337 -37.333 OFFCURVE",
"393 -13 OFFCURVE",
"437 23 CURVE SMOOTH",
"480.333 58.333 OFFCURVE",
"502 98 OFFCURVE",
"502 142 CURVE SMOOTH",
"502 171.333 OFFCURVE",
"491.667 199.667 OFFCURVE",
"471 227 CURVE",
"482.333 251 OFFCURVE",
"488 273 OFFCURVE",
"488 293 CURVE SMOOTH",
"488 339.667 OFFCURVE",
"466.667 363 OFFCURVE",
"424 363 CURVE SMOOTH",
"401.333 363 OFFCURVE",
"375.333 354.333 OFFCURVE",
"346 337 CURVE",
"296.667 374.333 OFFCURVE",
"272 409 OFFCURVE",
"272 441 CURVE SMOOTH",
"272 463.667 OFFCURVE",
"282.333 484 OFFCURVE",
"303 502 CURVE",
"355 491.333 OFFCURVE",
"390.333 465 OFFCURVE",
"409 423 CURVE SMOOTH",
"409.667 421.667 OFFCURVE",
"411.333 421.333 OFFCURVE",
"414 422 CURVE",
"416 423.333 OFFCURVE",
"416.667 425 OFFCURVE",
"416 427 CURVE SMOOTH",
"398 467.667 OFFCURVE",
"362.333 494.667 OFFCURVE",
"309 508 CURVE",
"339.667 532.667 OFFCURVE",
"377 545 OFFCURVE",
"421 545 CURVE SMOOTH",
"472.333 545 OFFCURVE",
"504.667 528.333 OFFCURVE",
"518 495 CURVE",
"492.667 472.333 OFFCURVE",
"477 451.333 OFFCURVE",
"471 432 CURVE SMOOTH",
"469.667 426.667 OFFCURVE",
"469 423 OFFCURVE",
"469 419 CURVE SMOOTH",
"469 405 OFFCURVE",
"476 398 OFFCURVE",
"490 398 CURVE SMOOTH",
"514 398 OFFCURVE",
"531.333 409.333 OFFCURVE",
"542 432 CURVE SMOOTH",
"547.333 444 OFFCURVE",
"550 454.667 OFFCURVE",
"550 464 CURVE SMOOTH",
"550 478 OFFCURVE",
"546.667 490.667 OFFCURVE",
"540 502 CURVE",
"557.333 520.667 OFFCURVE",
"572.667 535.333 OFFCURVE",
"590 546 CURVE SMOOTH",
"593.333 548 OFFCURVE",
"595 550 OFFCURVE",
"595 552 CURVE SMOOTH",
"595 558 OFFCURVE",
"590.667 558.667 OFFCURVE",
"582 554 CURVE SMOOTH",
"568.667 544.667 OFFCURVE",
"551.667 531 OFFCURVE",
"533 511 CURVE",
"509.667 543 OFFCURVE",
"470.667 559 OFFCURVE",
"416 559 CURVE SMOOTH",
"362 559 OFFCURVE",
"315.333 543.667 OFFCURVE",
"276 513 CURVE",
"192 519 OFFCURVE",
"121.333 490.333 OFFCURVE",
"64 427 CURVE SMOOTH",
"23.333 382.333 OFFCURVE",
"3 333 OFFCURVE",
"3 279 CURVE SMOOTH",
"3 222.333 OFFCURVE",
"23.333 175 OFFCURVE",
"64 137 CURVE",
"36.667 111 OFFCURVE",
"23 80 OFFCURVE",
"23 44 CURVE SMOOTH",
"23 -13.333 OFFCURVE",
"59.333 -47.333 OFFCURVE",
"132 -58 CURVE",
"136.667 -138 OFFCURVE",
"171.333 -178 OFFCURVE",
"236 -178 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 -20.333 OFFCURVE",
"53 9.333 OFFCURVE",
"53 54 CURVE SMOOTH",
"53 80 OFFCURVE",
"61.333 103.333 OFFCURVE",
"78 124 CURVE",
"101.333 106.667 OFFCURVE",
"127 95 OFFCURVE",
"155 89 CURVE",
"139.667 47 OFFCURVE",
"131.667 5.667 OFFCURVE",
"131 -35 CURVE"
);
},
{
closed = 1;
nodes = (
"130 102 OFFCURVE",
"105.333 113.667 OFFCURVE",
"84 131 CURVE",
"111.333 162.333 OFFCURVE",
"152.667 184 OFFCURVE",
"208 196 CURVE",
"188 162.667 OFFCURVE",
"171.333 130.667 OFFCURVE",
"158 96 CURVE"
);
},
{
closed = 1;
nodes = (
"175 -43 OFFCURVE",
"162 -41 OFFCURVE",
"149 -39 CURVE",
"147.667 3 OFFCURVE",
"154 45 OFFCURVE",
"168 87 CURVE",
"174.667 85.667 OFFCURVE",
"180.333 85 OFFCURVE",
"187 85 CURVE SMOOTH",
"277 81 OFFCURVE",
"351.667 104.333 OFFCURVE",
"411 155 CURVE SMOOTH",
"421.667 164.333 OFFCURVE",
"430.667 172.333 OFFCURVE",
"440 183 CURVE",
"446.667 167.667 OFFCURVE",
"450 151.667 OFFCURVE",
"450 135 CURVE SMOOTH",
"450 61.667 OFFCURVE",
"381.333 -5.333 OFFCURVE",
"268 -32 CURVE SMOOTH",
"239 -39 OFFCURVE",
"213 -43 OFFCURVE",
"189 -43 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"36.333 177.667 OFFCURVE",
"19 220.667 OFFCURVE",
"19 272 CURVE SMOOTH",
"19 327.333 OFFCURVE",
"39.667 377.667 OFFCURVE",
"81 423 CURVE SMOOTH",
"133 480.333 OFFCURVE",
"195.333 508 OFFCURVE",
"268 506 CURVE",
"240 482 OFFCURVE",
"226 455.667 OFFCURVE",
"226 427 CURVE SMOOTH",
"226 397.667 OFFCURVE",
"240.667 369.333 OFFCURVE",
"270 342 CURVE SMOOTH",
"279.333 334 OFFCURVE",
"291.667 324.333 OFFCURVE",
"309 311 CURVE",
"274.333 283.667 OFFCURVE",
"243.667 249.667 OFFCURVE",
"217 209 CURVE",
"157 196.333 OFFCURVE",
"108.333 174.333 OFFCURVE",
"71 143 CURVE"
);
},
{
closed = 1;
nodes = (
"208 90 OFFCURVE",
"198 91 OFFCURVE",
"188 92 CURVE SMOOTH",
"170 94 LINE",
"183.333 130 OFFCURVE",
"199 164.667 OFFCURVE",
"219 198 CURVE",
"237 201 OFFCURVE",
"254 203 OFFCURVE",
"270 203 CURVE SMOOTH",
"282 203 OFFCURVE",
"293 202 OFFCURVE",
"304 200 CURVE SMOOTH",
"308.667 199.333 OFFCURVE",
"311 201 OFFCURVE",
"311 205 CURVE SMOOTH",
"311 211 OFFCURVE",
"307.667 214.333 OFFCURVE",
"301 215 CURVE SMOOTH",
"294 216 OFFCURVE",
"286 216 OFFCURVE",
"277 216 CURVE SMOOTH",
"263 216 OFFCURVE",
"246 215 OFFCURVE",
"228 212 CURVE",
"252.667 248 OFFCURVE",
"282 279.667 OFFCURVE",
"316 307 CURVE",
"379.333 261.667 OFFCURVE",
"418.667 225 OFFCURVE",
"434 197 CURVE",
"423.333 183.667 OFFCURVE",
"412.333 172.667 OFFCURVE",
"399 162 CURVE SMOOTH",
"347 118 OFFCURVE",
"287 90 OFFCURVE",
"217 90 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"448.333 254.333 OFFCURVE",
"430.667 271.333 OFFCURVE",
"408 290 CURVE SMOOTH",
"404 293.333 OFFCURVE",
"398 299 OFFCURVE",
"388.5 305.5 CURVE SMOOTH",
"353 332 LINE",
"379.667 347.333 OFFCURVE",
"402.667 355 OFFCURVE",
"422 355 CURVE SMOOTH",
"457.333 355 OFFCURVE",
"475 335.667 OFFCURVE",
"475 297 CURVE SMOOTH",
"475 280.333 OFFCURVE",
"470.333 261 OFFCURVE",
"461 239 CURVE"
);
},
{
closed = 1;
nodes = (
"491 408 OFFCURVE",
"488 411 OFFCURVE",
"488 416 CURVE SMOOTH",
"488 418 OFFCURVE",
"489 420 OFFCURVE",
"489 422 CURVE SMOOTH",
"494.333 440.667 OFFCURVE",
"505.333 461.333 OFFCURVE",
"524 484 CURVE",
"527 475 OFFCURVE",
"529 467 OFFCURVE",
"529 459 CURVE SMOOTH",
"529 447 OFFCURVE",
"525 435 OFFCURVE",
"518 424 CURVE SMOOTH",
"511.333 413.333 OFFCURVE",
"503.667 408 OFFCURVE",
"495 408 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01288 951 98 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012157 952 56 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012147 950 65 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 56 74 56 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 56 25 56 41 56 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0129 56 157 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01215 71 157 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 147 118 147 134 147 150 147 166 147 182 147 198 147 214 147 230 147 246 147 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 147 22 147 38 147 54 147 70 147 86 147 102 147 118 147 134 147 150 147 166 147 182 147 198 147 214 147 230 147 246 147 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 147 22 147 38 147 54 147 70 147 86 147 102 147 118 147 134 147 150 147 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 147 181 147 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01230 65 147 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01241 71 157 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01267 65 147 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01278 71 157 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01282 71 157 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 88 181 88 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012137 71 157 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012143 71 157 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012157 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012175 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012108 126 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 126 108 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012108 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01267 126 108 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012137 126 108 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012143 126 108 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 520;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
lastChange = "2021-05-11 10:39:13 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{171, -67}";
},
{
name = center;
position = "{232, 305}";
},
{
name = top;
position = "{584, 534}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"55 -128 OFFCURVE",
"101.667 -110 OFFCURVE",
"149 -74 CURVE",
"255 -58 OFFCURVE",
"340 22.667 OFFCURVE",
"404 168 CURVE SMOOTH",
"418.667 200 OFFCURVE",
"437.667 250.333 OFFCURVE",
"463 321 CURVE SMOOTH",
"486.333 384.333 OFFCURVE",
"503.667 427.667 OFFCURVE",
"515 451 CURVE",
"549.667 445.667 OFFCURVE",
"580 443 OFFCURVE",
"608 443 CURVE SMOOTH",
"676 443 OFFCURVE",
"727.667 458.667 OFFCURVE",
"763 490 CURVE SMOOTH",
"767 494 OFFCURVE",
"769 499 OFFCURVE",
"769 504 CURVE SMOOTH",
"769 507 OFFCURVE",
"768 508 OFFCURVE",
"767 508 CURVE SMOOTH",
"765.667 508 OFFCURVE",
"764.333 507.333 OFFCURVE",
"763 506 CURVE SMOOTH",
"723.667 472.667 OFFCURVE",
"672 456 OFFCURVE",
"608 456 CURVE SMOOTH",
"581.333 456 OFFCURVE",
"552.667 458.667 OFFCURVE",
"522 464 CURVE",
"541.333 499.333 OFFCURVE",
"560.667 518.333 OFFCURVE",
"580 521 CURVE SMOOTH",
"586.667 521.667 OFFCURVE",
"590 524.667 OFFCURVE",
"590 530 CURVE SMOOTH",
"590 533.333 OFFCURVE",
"588 534.667 OFFCURVE",
"584 534 CURVE SMOOTH",
"554.667 528.667 OFFCURVE",
"526 506.667 OFFCURVE",
"498 468 CURVE",
"343 507 LINE",
"338.333 517.667 OFFCURVE",
"332 528 OFFCURVE",
"324 538 CURVE SMOOTH",
"294 578 OFFCURVE",
"257.333 598 OFFCURVE",
"214 598 CURVE SMOOTH",
"186 598 OFFCURVE",
"162.667 590.667 OFFCURVE",
"144 576 CURVE SMOOTH",
"130 565.333 OFFCURVE",
"118.667 552.667 OFFCURVE",
"110 538 CURVE",
"36.667 526 OFFCURVE",
"-1 482.667 OFFCURVE",
"-1 432 CURVE SMOOTH",
"-1 403.333 OFFCURVE",
"10 378.667 OFFCURVE",
"32 358 CURVE SMOOTH",
"56 334 OFFCURVE",
"86.333 320.667 OFFCURVE",
"123 318 CURVE",
"145 292 OFFCURVE",
"172.333 278 OFFCURVE",
"205 276 CURVE SMOOTH",
"208 276 OFFCURVE",
"209 277 OFFCURVE",
"209 280 CURVE SMOOTH",
"209 281 OFFCURVE",
"208 282 OFFCURVE",
"206 282 CURVE SMOOTH",
"178 283.333 OFFCURVE",
"154.333 295 OFFCURVE",
"135 317 CURVE",
"139 317 LINE SMOOTH",
"187.667 317 OFFCURVE",
"230.333 328.667 OFFCURVE",
"267 352 CURVE SMOOTH",
"297.667 370.667 OFFCURVE",
"317.667 393 OFFCURVE",
"327 419 CURVE SMOOTH",
"329.667 427 OFFCURVE",
"328.333 431 OFFCURVE",
"323 431 CURVE SMOOTH",
"320.333 431 OFFCURVE",
"318.667 429 OFFCURVE",
"318 425 CURVE",
"310 404.333 OFFCURVE",
"290.667 385 OFFCURVE",
"260 367 CURVE SMOOTH",
"224 345 OFFCURVE",
"183.667 334 OFFCURVE",
"139 334 CURVE SMOOTH",
"130 334 LINE SMOOTH",
"127.333 334 OFFCURVE",
"124.667 334.333 OFFCURVE",
"122 335 CURVE",
"103.333 364.333 OFFCURVE",
"94 399.667 OFFCURVE",
"94 441 CURVE SMOOTH",
"94 465 OFFCURVE",
"97.333 486 OFFCURVE",
"104 504 CURVE",
"124 512 OFFCURVE",
"146 515 OFFCURVE",
"173 515 CURVE SMOOTH",
"181 515 OFFCURVE",
"191 515 OFFCURVE",
"200 514 CURVE SMOOTH",
"225.333 511.333 OFFCURVE",
"269.667 502.667 OFFCURVE",
"335 488 CURVE",
"349 454.667 OFFCURVE",
"356 416.333 OFFCURVE",
"356 373 CURVE SMOOTH",
"356 297.667 OFFCURVE",
"337 219 OFFCURVE",
"299 137 CURVE SMOOTH",
"261.667 55.667 OFFCURVE",
"214.667 -9 OFFCURVE",
"158 -57 CURVE",
"143.333 -61.667 OFFCURVE",
"126.667 -64 OFFCURVE",
"108 -64 CURVE SMOOTH",
"53.333 -64 OFFCURVE",
"26 -43 OFFCURVE",
"26 -1 CURVE SMOOTH",
"26 37.667 OFFCURVE",
"48 77 OFFCURVE",
"92 117 CURVE SMOOTH",
"140.667 161 OFFCURVE",
"199.667 188.333 OFFCURVE",
"269 199 CURVE",
"273 199 OFFCURVE",
"276 203 OFFCURVE",
"276 207 CURVE SMOOTH",
"276 208 OFFCURVE",
"276 208 OFFCURVE",
"276 209 CURVE",
"274.667 211 OFFCURVE",
"272.667 212 OFFCURVE",
"270 212 CURVE SMOOTH",
"190 202.667 OFFCURVE",
"125 176 OFFCURVE",
"75 132 CURVE SMOOTH",
"30.333 92 OFFCURVE",
"8 50 OFFCURVE",
"8 6 CURVE SMOOTH",
"8 -43.333 OFFCURVE",
"42.667 -77 OFFCURVE",
"108 -77 CURVE SMOOTH",
"121 -77 LINE SMOOTH",
"125 -77 OFFCURVE",
"129 -76.667 OFFCURVE",
"133 -76 CURVE",
"90.333 -105.333 OFFCURVE",
"49 -120 OFFCURVE",
"9 -120 CURVE SMOOTH",
"1 -120 OFFCURVE",
"-7.333 -119.333 OFFCURVE",
"-14 -118 CURVE SMOOTH",
"-16.667 -118 OFFCURVE",
"-18.333 -119.333 OFFCURVE",
"-19 -122 CURVE SMOOTH",
"-19 -124.667 OFFCURVE",
"-17.667 -126 OFFCURVE",
"-15 -126 CURVE SMOOTH",
"-7 -127.333 OFFCURVE",
"1 -128 OFFCURVE",
"9 -128 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"65 349 OFFCURVE",
"38 383.667 OFFCURVE",
"38 421 CURVE SMOOTH",
"38 455.667 OFFCURVE",
"56 481.667 OFFCURVE",
"92 499 CURVE",
"85.333 481 OFFCURVE",
"82 460.667 OFFCURVE",
"82 438 CURVE SMOOTH",
"82 400.667 OFFCURVE",
"91 367 OFFCURVE",
"109 337 CURVE"
);
},
{
closed = 1;
nodes = (
"234.667 1.667 OFFCURVE",
"280 67 OFFCURVE",
"316 147 CURVE SMOOTH",
"352 227.667 OFFCURVE",
"370 304.667 OFFCURVE",
"370 378 CURVE SMOOTH",
"370 416.667 OFFCURVE",
"364.333 452 OFFCURVE",
"353 484 CURVE",
"411.667 469.333 OFFCURVE",
"455.667 460.333 OFFCURVE",
"489 455 CURVE",
"469.667 425.667 OFFCURVE",
"448 383 OFFCURVE",
"424 328 CURVE SMOOTH",
"361 181 LINE SMOOTH",
"308 56 OFFCURVE",
"245.333 -19.667 OFFCURVE",
"180 -49 CURVE"
);
},
{
closed = 1;
nodes = (
"271 527.667 OFFCURVE",
"230.667 536.333 OFFCURVE",
"204 539 CURVE SMOOTH",
"188 541 OFFCURVE",
"172 542 OFFCURVE",
"157 542 CURVE SMOOTH",
"145 542 OFFCURVE",
"133 542 OFFCURVE",
"121 540 CURVE",
"128.333 552.667 OFFCURVE",
"137.333 562.333 OFFCURVE",
"148 569 CURVE SMOOTH",
"165.333 582.333 OFFCURVE",
"185.333 589 OFFCURVE",
"208 589 CURVE SMOOTH",
"254 589 OFFCURVE",
"292.333 563.667 OFFCURVE",
"323 513 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012101 951 148 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012148 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012118 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0124 148 118 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012148 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0126 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 101 22 101 38 101 54 101 70 101 86 101 102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 101 22 101 38 101 54 101 70 101 86 101 102 101 118 101 134 101 150 101 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 101 181 101 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012155 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012103 70 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01282 70 103 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 464;
}
);
note = T;
unicode = 0054;
},
{
glyphname = U;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{398, -57}";
},
{
name = ogonek;
position = "{623, -26}";
},
{
name = top;
position = "{530, 565}";
},
{
name = topright;
position = "{645, 529}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"348.333 -50 OFFCURVE",
"398.667 -12.333 OFFCURVE",
"454 63 CURVE SMOOTH",
"482 101 OFFCURVE",
"518 160.333 OFFCURVE",
"562 241 CURVE",
"551.333 167.667 OFFCURVE",
"547.667 110.667 OFFCURVE",
"549 68 CURVE SMOOTH",
"550.333 4 OFFCURVE",
"578.667 -33 OFFCURVE",
"616 -33 CURVE SMOOTH",
"654.667 -33 OFFCURVE",
"693 7 OFFCURVE",
"713 67 CURVE",
"715 70 OFFCURVE",
"713 73 OFFCURVE",
"707 73 CURVE SMOOTH",
"705 73 OFFCURVE",
"703 72 OFFCURVE",
"703 70 CURVE SMOOTH",
"694.333 46 OFFCURVE",
"681 25 OFFCURVE",
"663 7 CURVE SMOOTH",
"651.667 -4.333 OFFCURVE",
"640.333 -10 OFFCURVE",
"629 -10 CURVE SMOOTH",
"603.667 -10 OFFCURVE",
"591 22.667 OFFCURVE",
"591 88 CURVE SMOOTH",
"591 198 OFFCURVE",
"628 341.667 OFFCURVE",
"702 519 CURVE",
"704.667 535.667 OFFCURVE",
"694 544 OFFCURVE",
"670 544 CURVE SMOOTH",
"654 544 OFFCURVE",
"645.667 539 OFFCURVE",
"645 529 CURVE",
"585 349 OFFCURVE",
"529.667 217.667 OFFCURVE",
"479 131 CURVE SMOOTH",
"415 23.667 OFFCURVE",
"357.333 -30 OFFCURVE",
"306 -30 CURVE SMOOTH",
"280 -30 OFFCURVE",
"264 -17.667 OFFCURVE",
"258 7 CURVE",
"282 11 OFFCURVE",
"305.333 19 OFFCURVE",
"328 31 CURVE SMOOTH",
"358.667 45.667 OFFCURVE",
"383.667 68 OFFCURVE",
"403 98 CURVE SMOOTH",
"419 124 OFFCURVE",
"427 150 OFFCURVE",
"427 176 CURVE SMOOTH",
"427 200.667 OFFCURVE",
"419.333 217.667 OFFCURVE",
"404 227 CURVE SMOOTH",
"401 229 OFFCURVE",
"398 228 OFFCURVE",
"398 224 CURVE SMOOTH",
"398 222 OFFCURVE",
"399 221 OFFCURVE",
"401 221 CURVE",
"411.667 214.333 OFFCURVE",
"417 201.667 OFFCURVE",
"417 183 CURVE SMOOTH",
"417 159 OFFCURVE",
"409 134.667 OFFCURVE",
"393 110 CURVE SMOOTH",
"374.333 82 OFFCURVE",
"348.333 59.333 OFFCURVE",
"315 42 CURVE SMOOTH",
"295 32.667 OFFCURVE",
"275 25.667 OFFCURVE",
"255 21 CURVE",
"254.333 24.333 OFFCURVE",
"254 27.5 OFFCURVE",
"254 30.5 CURVE SMOOTH",
"254 40 LINE SMOOTH",
"254 77.333 OFFCURVE",
"270.667 130 OFFCURVE",
"304 198 CURVE SMOOTH",
"344.667 279.333 OFFCURVE",
"368.667 334 OFFCURVE",
"376 362 CURVE",
"414.667 376 OFFCURVE",
"444.333 391.667 OFFCURVE",
"465 409 CURVE SMOOTH",
"487.667 427.667 OFFCURVE",
"499 446 OFFCURVE",
"499 464 CURVE SMOOTH",
"499 482 OFFCURVE",
"487.667 497 OFFCURVE",
"465 509 CURVE SMOOTH",
"448 518 OFFCURVE",
"430 523 OFFCURVE",
"409 523 CURVE SMOOTH",
"389 523 OFFCURVE",
"368 520 OFFCURVE",
"346 514 CURVE",
"320.667 535.333 OFFCURVE",
"286.333 546 OFFCURVE",
"243 546 CURVE SMOOTH",
"191.667 546 OFFCURVE",
"140.333 532.667 OFFCURVE",
"89 506 CURVE SMOOTH",
"37 478.667 OFFCURVE",
"-0.333 445 OFFCURVE",
"-23 405 CURVE",
"-32.333 420.333 OFFCURVE",
"-37 436 OFFCURVE",
"-37 452 CURVE SMOOTH",
"-37 481.333 OFFCURVE",
"-24 507.667 OFFCURVE",
"2 531 CURVE SMOOTH",
"28.667 554.333 OFFCURVE",
"57.667 566 OFFCURVE",
"89 566 CURVE SMOOTH",
"103 566 OFFCURVE",
"115.667 563.667 OFFCURVE",
"127 559 CURVE SMOOTH",
"130 558 OFFCURVE",
"132 559 OFFCURVE",
"132 562 CURVE SMOOTH",
"132 564 OFFCURVE",
"131 565 OFFCURVE",
"129 566 CURVE SMOOTH",
"115 571.333 OFFCURVE",
"101.333 574 OFFCURVE",
"88 574 CURVE SMOOTH",
"53.333 574 OFFCURVE",
"22.667 562 OFFCURVE",
"-4 538 CURVE SMOOTH",
"-31.333 514 OFFCURVE",
"-45 486 OFFCURVE",
"-45 454 CURVE SMOOTH",
"-45 433.333 OFFCURVE",
"-39 414.667 OFFCURVE",
"-27 398 CURVE",
"-37 377 OFFCURVE",
"-42 356 OFFCURVE",
"-42 335 CURVE SMOOTH",
"-42 327 OFFCURVE",
"-41 319 OFFCURVE",
"-40 311 CURVE SMOOTH",
"-35.333 282.333 OFFCURVE",
"-12.667 257.667 OFFCURVE",
"28 237 CURVE SMOOTH",
"35.333 233 OFFCURVE",
"39 234 OFFCURVE",
"39 240 CURVE SMOOTH",
"39 241.333 OFFCURVE",
"38 242.667 OFFCURVE",
"36 244 CURVE",
"-0.667 258 OFFCURVE",
"-19 283.333 OFFCURVE",
"-19 320 CURVE SMOOTH",
"-19 336.667 OFFCURVE",
"-16 354 OFFCURVE",
"-7 371 CURVE SMOOTH",
"-5 375 LINE",
"16.333 357 OFFCURVE",
"45.667 343.333 OFFCURVE",
"83 334 CURVE",
"51.667 285.333 OFFCURVE",
"36 237 OFFCURVE",
"36 189 CURVE SMOOTH",
"36 136.333 OFFCURVE",
"53.667 91.667 OFFCURVE",
"89 55 CURVE SMOOTH",
"125 19.667 OFFCURVE",
"170 2.667 OFFCURVE",
"224 4 CURVE",
"236.667 -32 OFFCURVE",
"263 -50 OFFCURVE",
"303 -50 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"171.667 14 OFFCURVE",
"131 28 OFFCURVE",
"99 58 CURVE SMOOTH",
"67 88 OFFCURVE",
"51 127.333 OFFCURVE",
"51 176 CURVE SMOOTH",
"51 226 OFFCURVE",
"69 277 OFFCURVE",
"105 329 CURVE",
"120.333 326.333 OFFCURVE",
"139.333 325 OFFCURVE",
"162 325 CURVE SMOOTH",
"216 325 OFFCURVE",
"272.667 333 OFFCURVE",
"332 349 CURVE",
"330.667 343.667 OFFCURVE",
"324 329 OFFCURVE",
"312 304.5 CURVE SMOOTH",
"262 202 LINE SMOOTH",
"232 141 OFFCURVE",
"217 90.667 OFFCURVE",
"217 52 CURVE SMOOTH",
"217 41.333 OFFCURVE",
"217 31 OFFCURVE",
"220 20 CURVE SMOOTH",
"221 16 LINE"
);
},
{
closed = 1;
nodes = (
"48 350.333 OFFCURVE",
"18 364 OFFCURVE",
"-2 382 CURVE",
"19.333 422.667 OFFCURVE",
"55.333 457.333 OFFCURVE",
"106 486 CURVE SMOOTH",
"155.333 515.333 OFFCURVE",
"201.667 530 OFFCURVE",
"245 530 CURVE SMOOTH",
"275.667 530 OFFCURVE",
"300 522 OFFCURVE",
"318 506 CURVE",
"220 475.333 OFFCURVE",
"143.333 420.333 OFFCURVE",
"88 341 CURVE"
);
},
{
closed = 1;
nodes = (
"156 332 OFFCURVE",
"148 332 OFFCURVE",
"140 333 CURVE SMOOTH",
"125.5 334.5 LINE SMOOTH",
"121 335 OFFCURVE",
"115.333 335.667 OFFCURVE",
"110 337 CURVE",
"164.667 413 OFFCURVE",
"236.667 466.667 OFFCURVE",
"326 498 CURVE",
"335.333 486.667 OFFCURVE",
"341.667 471.667 OFFCURVE",
"345 453 CURVE SMOOTH",
"346 445 OFFCURVE",
"347 437 OFFCURVE",
"347 428 CURVE SMOOTH",
"347 408 OFFCURVE",
"343 385 OFFCURVE",
"335 359 CURVE",
"274 341 OFFCURVE",
"217 332 OFFCURVE",
"165 332 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"382 388 OFFCURVE",
"383 404 OFFCURVE",
"383 419 CURVE SMOOTH",
"383 429 OFFCURVE",
"383 439 OFFCURVE",
"381 448 CURVE SMOOTH",
"377 472 OFFCURVE",
"368 491.333 OFFCURVE",
"354 506 CURVE",
"374 512 OFFCURVE",
"393 515 OFFCURVE",
"411 515 CURVE SMOOTH",
"450 515 OFFCURVE",
"490 496 OFFCURVE",
"490 465 CURVE SMOOTH",
"490 448.333 OFFCURVE",
"479.667 431.667 OFFCURVE",
"459 415 CURVE SMOOTH",
"439.667 399 OFFCURVE",
"412.667 384.667 OFFCURVE",
"378 372 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01299 9 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 99 118 99 134 99 150 99 166 99 182 99 198 99 214 99 230 99 246 99 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 99 22 99 38 99 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 99 69 99 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01214 9 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 9 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01229 9 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 9 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01291 9 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\01258 91 74 91 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 91 121 91 137 91 153 91 169 91 185 91 201 91 217 91 233 91 249 91 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 91 25 91 41 91 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01297 9 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 2 values pushed */\012134 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012137 91 118 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012118 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012177 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012107 948 141 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01266 16 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012141 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01214 16 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 16 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01229 16 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01233 16 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 16 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01262 16 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012114 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012107 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012131 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012131 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\012120 947 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012149 16 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012170 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 707;
}
);
note = U;
unicode = 0055;
},
{
glyphname = V;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"254 -87.333 OFFCURVE",
"256 -87 OFFCURVE",
"258 -85 CURVE SMOOTH",
"288 -49 OFFCURVE",
"312.333 -0.333 OFFCURVE",
"331 61 CURVE SMOOTH",
"349 121.667 OFFCURVE",
"358 184.333 OFFCURVE",
"358 249 CURVE SMOOTH",
"358 277 OFFCURVE",
"355.667 303.333 OFFCURVE",
"353 330 CURVE",
"363.667 331.333 OFFCURVE",
"376.333 334.333 OFFCURVE",
"387 337 CURVE",
"387.667 329.667 OFFCURVE",
"388 322.167 OFFCURVE",
"388 314.5 CURVE SMOOTH",
"388 292 LINE SMOOTH",
"388 178.667 OFFCURVE",
"369.667 78 OFFCURVE",
"333 -10 CURVE SMOOTH",
"331 -14 OFFCURVE",
"332.333 -16 OFFCURVE",
"337 -16 CURVE SMOOTH",
"353.667 -16 OFFCURVE",
"387.333 23.333 OFFCURVE",
"438 102 CURVE SMOOTH",
"599 351 LINE",
"681 467 OFFCURVE",
"747 536.333 OFFCURVE",
"797 559 CURVE SMOOTH",
"811 564.333 OFFCURVE",
"824 567 OFFCURVE",
"836 567 CURVE SMOOTH",
"866.667 567 OFFCURVE",
"882 552.667 OFFCURVE",
"882 524 CURVE SMOOTH",
"882 519.333 OFFCURVE",
"883.667 517 OFFCURVE",
"887 517 CURVE SMOOTH",
"889 517 OFFCURVE",
"890.667 520.667 OFFCURVE",
"892 528 CURVE",
"893.333 564 OFFCURVE",
"871.333 594 OFFCURVE",
"838 594 CURVE SMOOTH",
"778 594 OFFCURVE",
"702 531 OFFCURVE",
"610 405 CURVE SMOOTH",
"581.333 365 OFFCURVE",
"525.667 276.667 OFFCURVE",
"443 140 CURVE SMOOTH",
"435.667 127.333 OFFCURVE",
"428.333 114.667 OFFCURVE",
"421 102 CURVE SMOOTH",
"399 63 LINE SMOOTH",
"376.333 24.333 OFFCURVE",
"359 2.333 OFFCURVE",
"347 -3 CURVE",
"369 41 OFFCURVE",
"387 94.333 OFFCURVE",
"401 157 CURVE SMOOTH",
"416 216 OFFCURVE",
"423 270 OFFCURVE",
"423 320 CURVE SMOOTH",
"423 329 OFFCURVE",
"423 339 OFFCURVE",
"422 348 CURVE",
"481.333 371.333 OFFCURVE",
"521.333 407.667 OFFCURVE",
"542 457 CURVE SMOOTH",
"545.333 467 OFFCURVE",
"547 476.333 OFFCURVE",
"547 485 CURVE SMOOTH",
"547 499.667 OFFCURVE",
"543.333 510.667 OFFCURVE",
"536 518 CURVE SMOOTH",
"534 519.333 OFFCURVE",
"532 519 OFFCURVE",
"530 517 CURVE",
"528.667 514.333 OFFCURVE",
"529 512.667 OFFCURVE",
"531 512 CURVE",
"537 507 OFFCURVE",
"539 501 OFFCURVE",
"539 492 CURVE SMOOTH",
"539 483 OFFCURVE",
"537 473 OFFCURVE",
"531 460 CURVE SMOOTH",
"511.667 414.667 OFFCURVE",
"475 380.667 OFFCURVE",
"421 358 CURVE",
"412.333 483.333 OFFCURVE",
"359.667 545.667 OFFCURVE",
"263 545 CURVE SMOOTH",
"258 545 LINE",
"226 577.667 OFFCURVE",
"194.333 594 OFFCURVE",
"163 594 CURVE SMOOTH",
"113.667 594 OFFCURVE",
"75 552.333 OFFCURVE",
"75 495 CURVE SMOOTH",
"75 483 OFFCURVE",
"76.333 471.667 OFFCURVE",
"79 461 CURVE",
"56.333 438.333 OFFCURVE",
"38.667 414.333 OFFCURVE",
"26 389 CURVE SMOOTH",
"10 357.667 OFFCURVE",
"2 324.667 OFFCURVE",
"2 290 CURVE SMOOTH",
"2 218 OFFCURVE",
"32.333 182 OFFCURVE",
"93 182 CURVE SMOOTH",
"117 182 OFFCURVE",
"142.333 191.667 OFFCURVE",
"169 211 CURVE SMOOTH",
"191 227 OFFCURVE",
"205.667 243 OFFCURVE",
"213 259 CURVE",
"215 265 OFFCURVE",
"215 269 OFFCURVE",
"213 269 CURVE SMOOTH",
"212 269 OFFCURVE",
"211 267 OFFCURVE",
"209 265 CURVE SMOOTH",
"201 252.333 OFFCURVE",
"189.333 240.333 OFFCURVE",
"174 229 CURVE SMOOTH",
"151.333 211.667 OFFCURVE",
"129 203 OFFCURVE",
"107 203 CURVE SMOOTH",
"54.333 203 OFFCURVE",
"28 233.333 OFFCURVE",
"28 294 CURVE SMOOTH",
"28 348 OFFCURVE",
"47 398 OFFCURVE",
"85 444 CURVE",
"99.667 406 OFFCURVE",
"128 376.667 OFFCURVE",
"170 356 CURVE SMOOTH",
"210 336.667 OFFCURVE",
"254.667 327 OFFCURVE",
"304 327 CURVE SMOOTH",
"322 327 LINE SMOOTH",
"328 327 OFFCURVE",
"333.667 327.333 OFFCURVE",
"339 328 CURVE",
"341.667 301.333 OFFCURVE",
"344 275.333 OFFCURVE",
"344 246 CURVE SMOOTH",
"344 180 OFFCURVE",
"335.667 118 OFFCURVE",
"319 60 CURVE SMOOTH",
"301.667 0 OFFCURVE",
"279.333 -46.667 OFFCURVE",
"252 -80 CURVE SMOOTH",
"250 -82 OFFCURVE",
"250 -84 OFFCURVE",
"252 -86 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"253 334 OFFCURVE",
"211 344 OFFCURVE",
"175 364 CURVE SMOOTH",
"135.667 386 OFFCURVE",
"109.333 417 OFFCURVE",
"96 457 CURVE",
"142 507 OFFCURVE",
"189.333 532 OFFCURVE",
"238 532 CURVE SMOOTH",
"249.5 532 LINE SMOOTH",
"253.167 532 OFFCURVE",
"256.667 531.667 OFFCURVE",
"260 531 CURVE",
"300 483.667 OFFCURVE",
"326 418.667 OFFCURVE",
"338 336 CURVE",
"324.667 334.667 OFFCURVE",
"313 334 OFFCURVE",
"301 334 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"90 481.667 OFFCURVE",
"89 490.667 OFFCURVE",
"89 500 CURVE SMOOTH",
"89 550.667 OFFCURVE",
"120.333 586 OFFCURVE",
"163 586 CURVE SMOOTH",
"189.667 586 OFFCURVE",
"217.667 572.333 OFFCURVE",
"247 545 CURVE",
"191.667 539.667 OFFCURVE",
"140 515.667 OFFCURVE",
"92 473 CURVE"
);
},
{
closed = 1;
nodes = (
"340 416.667 OFFCURVE",
"314 480 OFFCURVE",
"274 528 CURVE",
"340 510.667 OFFCURVE",
"377.333 450 OFFCURVE",
"386 346 CURVE",
"380.667 344.667 OFFCURVE",
"375 343.333 OFFCURVE",
"369 342 CURVE SMOOTH",
"352 338 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 951 118 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012132 952 90 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 132 118 132 134 132 150 132 166 132 182 132 198 132 214 132 230 132 246 132 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 132 22 132 38 132 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 132 69 132 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012132 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0120 118 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0127 118 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01223 118 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012132 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01269 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 2 values pushed */\01278 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01240 90 132 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01269 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01286 118 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012100 118 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 102 118 102 134 102 150 102 166 102 182 102 198 102 214 102 230 102 246 102 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 102 22 102 38 102 54 102 70 102 86 102 102 102 118 102 134 102 150 102 166 102 182 102 198 102 214 102 230 102 246 102 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 102 22 102 38 102 54 102 70 102 86 102 102 102 118 102 134 102 150 102 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 102 181 102 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012132 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012141 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01249 949 58 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012130 96 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012104 948 116 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0127 96 130 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01223 96 130 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012100 96 130 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012132 96 130 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 543;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2021-05-11 10:39:44 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{394, -48}";
},
{
name = top;
position = "{530, 568}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"113 -134 OFFCURVE",
"150 -110 OFFCURVE",
"184 -62 CURVE SMOOTH",
"232.667 5.333 OFFCURVE",
"268 87.333 OFFCURVE",
"290 184 CURVE",
"304.667 190.667 OFFCURVE",
"317.333 195.667 OFFCURVE",
"332 201 CURVE",
"317.333 125 OFFCURVE",
"288.667 41 OFFCURVE",
"250 -55 CURVE",
"248 -65 LINE",
"248 -69.667 OFFCURVE",
"250.333 -72 OFFCURVE",
"255 -72 CURVE SMOOTH",
"262.333 -72 OFFCURVE",
"272.333 -66.667 OFFCURVE",
"285 -56 CURVE SMOOTH",
"319.667 -26.667 OFFCURVE",
"360.667 16.667 OFFCURVE",
"410 78 CURVE SMOOTH",
"449.333 128 OFFCURVE",
"481.667 172.333 OFFCURVE",
"507 211 CURVE",
"507.667 197 OFFCURVE",
"513.667 163 OFFCURVE",
"525 109 CURVE SMOOTH",
"533.667 64.333 OFFCURVE",
"538 30.333 OFFCURVE",
"538 7 CURVE SMOOTH",
"538 -16.333 OFFCURVE",
"540.333 -28 OFFCURVE",
"545 -28 CURVE SMOOTH",
"547.667 -28 OFFCURVE",
"549.333 -26.667 OFFCURVE",
"550 -24 CURVE",
"616.667 56 OFFCURVE",
"672.667 121.667 OFFCURVE",
"722 175 CURVE",
"754.667 150.333 OFFCURVE",
"771 122.667 OFFCURVE",
"771 92 CURVE SMOOTH",
"771 56.518 OFFCURVE",
"736.171 27 OFFCURVE",
"701 27 CURVE SMOOTH",
"684.333 27 OFFCURVE",
"671.667 33.333 OFFCURVE",
"663 46 CURVE",
"662.333 48 OFFCURVE",
"660.333 48.333 OFFCURVE",
"657 47 CURVE SMOOTH",
"655 46.333 OFFCURVE",
"654.667 44.667 OFFCURVE",
"656 42 CURVE",
"667.333 26.667 OFFCURVE",
"682 19 OFFCURVE",
"700 19 CURVE SMOOTH",
"740.276 19 OFFCURVE",
"779 54.448 OFFCURVE",
"779 94 CURVE SMOOTH",
"779 127.333 OFFCURVE",
"762.667 157.333 OFFCURVE",
"730 184 CURVE",
"831.333 305.333 OFFCURVE",
"882 399.667 OFFCURVE",
"882 467 CURVE SMOOTH",
"882 527.667 OFFCURVE",
"843.333 570.667 OFFCURVE",
"766 596 CURVE",
"754 598 LINE SMOOTH",
"750 599 OFFCURVE",
"748 596.667 OFFCURVE",
"748 594 CURVE SMOOTH",
"748 590.667 OFFCURVE",
"751 587.667 OFFCURVE",
"757 585 CURVE SMOOTH",
"810 568 OFFCURVE",
"836 533 OFFCURVE",
"836 481 CURVE SMOOTH",
"836 394 OFFCURVE",
"796 298 OFFCURVE",
"717 194 CURVE",
"675.667 222.667 OFFCURVE",
"620.333 239 OFFCURVE",
"551 243 CURVE",
"549.667 254.333 OFFCURVE",
"548 263 OFFCURVE",
"548 270.5 CURVE SMOOTH",
"547 286 LINE",
"586.333 353.333 OFFCURVE",
"606 403 OFFCURVE",
"606 435 CURVE SMOOTH",
"606 458.333 OFFCURVE",
"597 470 OFFCURVE",
"579 470 CURVE SMOOTH",
"575 470 OFFCURVE",
"569.667 468.333 OFFCURVE",
"563 465 CURVE SMOOTH",
"541.667 451.667 OFFCURVE",
"525.667 420.667 OFFCURVE",
"515 372 CURVE SMOOTH",
"505.667 328 OFFCURVE",
"502 285 OFFCURVE",
"504 243 CURVE",
"453.333 241.667 OFFCURVE",
"410.667 234.667 OFFCURVE",
"372 224 CURVE",
"384 272.667 OFFCURVE",
"390 315.667 OFFCURVE",
"390 353 CURVE SMOOTH",
"390 462.333 OFFCURVE",
"338.333 517 OFFCURVE",
"235 517 CURVE SMOOTH",
"191 517 OFFCURVE",
"147.333 503.333 OFFCURVE",
"104 476 CURVE SMOOTH",
"61.333 449.333 OFFCURVE",
"31 415.667 OFFCURVE",
"13 375 CURVE SMOOTH",
"-0.333 345 OFFCURVE",
"-7 315 OFFCURVE",
"-7 285 CURVE SMOOTH",
"-7 229 OFFCURVE",
"19 189 OFFCURVE",
"75 189 CURVE SMOOTH",
"98.333 189 OFFCURVE",
"125.667 199 OFFCURVE",
"157 219 CURVE SMOOTH",
"185.667 237.667 OFFCURVE",
"207 258.667 OFFCURVE",
"221 282 CURVE",
"223 288 LINE SMOOTH",
"223 289 OFFCURVE",
"222.333 289.667 OFFCURVE",
"221 291 CURVE",
"219 291 OFFCURVE",
"217.667 289.667 OFFCURVE",
"217 287 CURVE",
"202.333 265.667 OFFCURVE",
"183.667 246.667 OFFCURVE",
"161 232 CURVE SMOOTH",
"136.333 215.333 OFFCURVE",
"112.333 207 OFFCURVE",
"89 207 CURVE SMOOTH",
"40.333 207 OFFCURVE",
"16 235.333 OFFCURVE",
"16 292 CURVE SMOOTH",
"16 344 OFFCURVE",
"36.667 391.667 OFFCURVE",
"78 435 CURVE SMOOTH",
"118.667 479 OFFCURVE",
"165.667 501 OFFCURVE",
"219 501 CURVE SMOOTH",
"274.333 501 OFFCURVE",
"311.667 473 OFFCURVE",
"331 417 CURVE SMOOTH",
"340.333 389 OFFCURVE",
"345 356.667 OFFCURVE",
"345 320 CURVE SMOOTH",
"345 286.667 OFFCURVE",
"340.667 251 OFFCURVE",
"334 211 CURVE",
"320 205.667 OFFCURVE",
"306 199.667 OFFCURVE",
"292 193 CURVE",
"301 235 OFFCURVE",
"305 275 OFFCURVE",
"305 314 CURVE SMOOTH",
"305 331 OFFCURVE",
"305 348 OFFCURVE",
"303 364 CURVE SMOOTH",
"295 442 OFFCURVE",
"260.667 481 OFFCURVE",
"200 481 CURVE SMOOTH",
"182.667 481 OFFCURVE",
"166 477.333 OFFCURVE",
"150 470 CURVE",
"147.333 469.333 OFFCURVE",
"146.667 467.667 OFFCURVE",
"148 465 CURVE SMOOTH",
"148.667 462.333 OFFCURVE",
"150.333 461.667 OFFCURVE",
"153 463 CURVE SMOOTH",
"167 469.667 OFFCURVE",
"182.333 473 OFFCURVE",
"199 473 CURVE SMOOTH",
"251.667 473 OFFCURVE",
"281.667 436.333 OFFCURVE",
"289 363 CURVE SMOOTH",
"290.333 349.667 OFFCURVE",
"291 334.667 OFFCURVE",
"291 320 CURVE SMOOTH",
"291 277.333 OFFCURVE",
"285.667 232.333 OFFCURVE",
"275 185 CURVE",
"181 138.333 OFFCURVE",
"109.333 80 OFFCURVE",
"60 10 CURVE SMOOTH",
"34.667 -25.333 OFFCURVE",
"22 -56.333 OFFCURVE",
"22 -83 CURVE SMOOTH",
"22 -117 OFFCURVE",
"39 -134 OFFCURVE",
"73 -134 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"52.667 -123 OFFCURVE",
"39 -108.333 OFFCURVE",
"39 -79 CURVE SMOOTH",
"39 -53 OFFCURVE",
"51.667 -21.667 OFFCURVE",
"77 15 CURVE SMOOTH",
"124.333 81 OFFCURVE",
"189.667 134.667 OFFCURVE",
"273 176 CURVE",
"250.333 77.333 OFFCURVE",
"219.333 0.333 OFFCURVE",
"178 -57 CURVE SMOOTH",
"146.667 -101 OFFCURVE",
"114 -123 OFFCURVE",
"80 -123 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"313 41.667 OFFCURVE",
"347 128.667 OFFCURVE",
"369 212 CURVE",
"407.667 222.667 OFFCURVE",
"453 228.667 OFFCURVE",
"505 230 CURVE",
"505 229 LINE",
"459 149 OFFCURVE",
"385.667 59.667 OFFCURVE",
"285 -39 CURVE SMOOTH",
"279 -45 OFFCURVE",
"273 -48.333 OFFCURVE",
"267 -49 CURVE"
);
},
{
closed = 1;
nodes = (
"563 23 OFFCURVE",
"567 50 OFFCURVE",
"567 81 CURVE SMOOTH",
"567 101 OFFCURVE",
"565 123 OFFCURVE",
"562 147 CURVE SMOOTH",
"560.667 160.333 OFFCURVE",
"559 173.667 OFFCURVE",
"557 187 CURVE SMOOTH",
"555 200.333 OFFCURVE",
"553.333 214.333 OFFCURVE",
"552 229 CURVE",
"616.667 225 OFFCURVE",
"669 210 OFFCURVE",
"709 184 CURVE",
"699.667 172 OFFCURVE",
"688 158 OFFCURVE",
"673 140.5 CURVE SMOOTH",
"622 81 LINE SMOOTH",
"589 42 OFFCURVE",
"565.667 16 OFFCURVE",
"555 0 CURVE"
);
},
{
closed = 1;
nodes = (
"543.667 326.333 OFFCURVE",
"543 345.333 OFFCURVE",
"543 364 CURVE SMOOTH",
"543 394 OFFCURVE",
"547.333 418 OFFCURVE",
"556 436 CURVE SMOOTH",
"562.667 452.667 OFFCURVE",
"570.333 461 OFFCURVE",
"579 461 CURVE SMOOTH",
"587 461 OFFCURVE",
"591 453.667 OFFCURVE",
"591 439 CURVE SMOOTH",
"591 410.333 OFFCURVE",
"575.667 365.667 OFFCURVE",
"545 305 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01264 951 84 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012124 950 114 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 950 97 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01292 950 56 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01211 84 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 84 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 84 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01251 84 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 64 22 64 38 64 54 64 70 64 86 64 102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 64 22 64 38 64 54 64 70 64 86 64 102 64 118 64 134 64 150 64 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 64 181 64 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 92 181 92 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01294 56 92 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012170 97 186 97 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 114 186 114 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012139 84 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01297 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012158 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012158 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012172 84 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012181 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012181 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012199 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012179 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01290 949 192 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0123 179 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01211 179 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 179 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 179 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01251 179 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01294 179 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012192 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012139 179 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012158 179 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012172 179 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 816;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-61 -169 OFFCURVE",
"-60 -169 OFFCURVE",
"-59 -169 CURVE SMOOTH",
"-47 -167.667 OFFCURVE",
"-34 -154.333 OFFCURVE",
"-20 -129 CURVE SMOOTH",
"36.667 -25 OFFCURVE",
"135.333 88.333 OFFCURVE",
"276 211 CURVE",
"276 183.5 LINE SMOOTH",
"276 175.167 OFFCURVE",
"276.333 167.667 OFFCURVE",
"277 161 CURVE SMOOTH",
"280 64 LINE",
"284 18 OFFCURVE",
"292 -16.333 OFFCURVE",
"304 -39 CURVE SMOOTH",
"320 -71 OFFCURVE",
"345 -87 OFFCURVE",
"379 -87 CURVE SMOOTH",
"403 -87 OFFCURVE",
"425.667 -77.333 OFFCURVE",
"447 -58 CURVE SMOOTH",
"449 -56 OFFCURVE",
"449 -54 OFFCURVE",
"447 -52 CURVE SMOOTH",
"445 -50 OFFCURVE",
"443 -50 OFFCURVE",
"441 -52 CURVE SMOOTH",
"422.333 -68.667 OFFCURVE",
"401.667 -77 OFFCURVE",
"379 -77 CURVE SMOOTH",
"340.333 -77 OFFCURVE",
"314.333 -45.333 OFFCURVE",
"301 18 CURVE SMOOTH",
"299.667 23.333 OFFCURVE",
"298.167 38 OFFCURVE",
"296.5 62 CURVE SMOOTH",
"290 161 LINE SMOOTH",
"289.333 168.333 OFFCURVE",
"289 177 OFFCURVE",
"289 187 CURVE SMOOTH",
"288 222 LINE",
"325 253 LINE",
"325 144 LINE SMOOTH",
"327 86 OFFCURVE",
"333 41.667 OFFCURVE",
"343 11 CURVE SMOOTH",
"355 -30 OFFCURVE",
"376 -51 OFFCURVE",
"404 -51 CURVE SMOOTH",
"427 -51 OFFCURVE",
"458 -33 OFFCURVE",
"495 -1 CURVE SMOOTH",
"520.333 21.667 OFFCURVE",
"545.667 46.667 OFFCURVE",
"571 76 CURVE SMOOTH",
"574 80 OFFCURVE",
"575 83 OFFCURVE",
"575 85 CURVE SMOOTH",
"575 87 OFFCURVE",
"575 88 OFFCURVE",
"574 89 CURVE SMOOTH",
"571.333 91.667 OFFCURVE",
"567.667 90.667 OFFCURVE",
"563 86 CURVE SMOOTH",
"533.667 50 OFFCURVE",
"508 24.667 OFFCURVE",
"486 10 CURVE SMOOTH",
"468 -2 OFFCURVE",
"450 -8 OFFCURVE",
"433 -8 CURVE SMOOTH",
"402 -8 OFFCURVE",
"382 26 OFFCURVE",
"372 93 CURVE SMOOTH",
"368.667 119 OFFCURVE",
"366.667 168 OFFCURVE",
"366 240 CURVE SMOOTH",
"366 288 LINE",
"404.667 318.667 OFFCURVE",
"471 371 OFFCURVE",
"567 443 CURVE SMOOTH",
"665.667 517.667 OFFCURVE",
"714.667 564.333 OFFCURVE",
"714 583 CURVE SMOOTH",
"714 585.667 OFFCURVE",
"712 587 OFFCURVE",
"708 587 CURVE SMOOTH",
"698.667 585.667 OFFCURVE",
"670 563 OFFCURVE",
"622 519 CURVE SMOOTH",
"534 439 LINE",
"365 304 LINE",
"363.667 328 OFFCURVE",
"363 346 OFFCURVE",
"363 358 CURVE",
"389.667 372 OFFCURVE",
"410.333 390 OFFCURVE",
"425 412 CURVE SMOOTH",
"438.333 431.333 OFFCURVE",
"445 450.333 OFFCURVE",
"445 469 CURVE SMOOTH",
"445 477.667 OFFCURVE",
"443.333 486 OFFCURVE",
"440 494 CURVE SMOOTH",
"438.667 496 OFFCURVE",
"436.667 496.667 OFFCURVE",
"434 496 CURVE",
"432 494.667 OFFCURVE",
"431.333 492.667 OFFCURVE",
"432 490 CURVE",
"434 486.667 OFFCURVE",
"435 482.333 OFFCURVE",
"435 477 CURVE SMOOTH",
"435 461 OFFCURVE",
"429 443.667 OFFCURVE",
"417 425 CURVE SMOOTH",
"403 403 OFFCURVE",
"384.667 384.667 OFFCURVE",
"362 370 CURVE",
"360 424.667 OFFCURVE",
"353.667 463 OFFCURVE",
"343 485 CURVE SMOOTH",
"326.333 519.667 OFFCURVE",
"297.333 537 OFFCURVE",
"256 537 CURVE SMOOTH",
"246.667 537 OFFCURVE",
"236.667 536.333 OFFCURVE",
"226 535 CURVE",
"199.333 569.667 OFFCURVE",
"168.667 587 OFFCURVE",
"134 587 CURVE SMOOTH",
"92.667 587 OFFCURVE",
"63 554 OFFCURVE",
"63 502 CURVE SMOOTH",
"63 486.667 OFFCURVE",
"65.333 471 OFFCURVE",
"70 455 CURVE",
"44 430.333 OFFCURVE",
"22.333 402.333 OFFCURVE",
"5 371 CURVE SMOOTH",
"-12.333 341.667 OFFCURVE",
"-21 310 OFFCURVE",
"-21 276 CURVE SMOOTH",
"-21 206.667 OFFCURVE",
"11 172 OFFCURVE",
"75 172 CURVE SMOOTH",
"101.667 172 OFFCURVE",
"128.667 181.333 OFFCURVE",
"156 200 CURVE SMOOTH",
"180 215.333 OFFCURVE",
"195.667 231 OFFCURVE",
"203 247 CURVE SMOOTH",
"205 252 OFFCURVE",
"205 256 OFFCURVE",
"203 256 CURVE SMOOTH",
"202 256 OFFCURVE",
"201 254 OFFCURVE",
"199 252 CURVE SMOOTH",
"189 238.667 OFFCURVE",
"176.667 227 OFFCURVE",
"162 217 CURVE SMOOTH",
"139.333 200.333 OFFCURVE",
"115.667 192 OFFCURVE",
"91 192 CURVE SMOOTH",
"35 192 OFFCURVE",
"7 221.333 OFFCURVE",
"7 280 CURVE SMOOTH",
"7 306.667 OFFCURVE",
"12.333 332 OFFCURVE",
"23 356 CURVE SMOOTH",
"36.333 387.333 OFFCURVE",
"53.667 414.667 OFFCURVE",
"75 438 CURVE",
"95 384 OFFCURVE",
"134.667 350.333 OFFCURVE",
"194 337 CURVE SMOOTH",
"214 333 OFFCURVE",
"234 331 OFFCURVE",
"254 331 CURVE SMOOTH",
"261 331 OFFCURVE",
"268 331 OFFCURVE",
"275 332 CURVE",
"275.667 323.333 OFFCURVE",
"276 310.5 OFFCURVE",
"276 293.5 CURVE SMOOTH",
"276 230 LINE",
"124 102 OFFCURVE",
"15 -16 OFFCURVE",
"-57 -132 CURVE SMOOTH",
"-64 -143 OFFCURVE",
"-67 -152 OFFCURVE",
"-67 -158 CURVE SMOOTH",
"-67 -159 OFFCURVE",
"-67 -159 OFFCURVE",
"-67 -160 CURVE SMOOTH",
"-67 -166 OFFCURVE",
"-65 -169 OFFCURVE",
"-61 -169 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"285 333 LINE",
"296.333 335 OFFCURVE",
"309 338 OFFCURVE",
"323 342 CURVE",
"323.667 325.333 OFFCURVE",
"324 311 OFFCURVE",
"324 299 CURVE SMOOTH",
"324 270 LINE",
"288 240 LINE"
);
},
{
closed = 1;
nodes = (
"234 339 OFFCURVE",
"215 341 OFFCURVE",
"196 345 CURVE SMOOTH",
"137.333 357.667 OFFCURVE",
"99 391 OFFCURVE",
"81 445 CURVE",
"127.667 493.667 OFFCURVE",
"177 518 OFFCURVE",
"229 518 CURVE",
"257 476.667 OFFCURVE",
"272.333 417.333 OFFCURVE",
"275 340 CURVE",
"267 339 OFFCURVE",
"260 339 OFFCURVE",
"252 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"75 469.667 OFFCURVE",
"74 479 OFFCURVE",
"74 489 CURVE SMOOTH",
"74 538.333 OFFCURVE",
"104.333 575 OFFCURVE",
"143 575 CURVE SMOOTH",
"169 575 OFFCURVE",
"193.667 561 OFFCURVE",
"217 533 CURVE",
"167 523 OFFCURVE",
"120.333 499 OFFCURVE",
"77 461 CURVE"
);
},
{
closed = 1;
nodes = (
"278 419.667 OFFCURVE",
"262.667 478.667 OFFCURVE",
"238 518 CURVE",
"292 512.667 OFFCURVE",
"320.333 456.667 OFFCURVE",
"323 350 CURVE",
"309.667 346 OFFCURVE",
"296.667 343 OFFCURVE",
"284 341 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012120 951 136 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01251 952 109 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 2 values pushed */\01232 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0120 136 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0127 136 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012109 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01217 136 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01226 109 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01298 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012116 136 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 120 181 120 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012154 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012154 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\012145 11 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01255 90 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012122 948 134 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 11 145 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012145 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01288 90 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 577;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2021-05-11 10:39:54 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{641, -16}";
},
{
name = top;
position = "{525, 558}";
},
{
name = topleft;
position = "{20, 609}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"229.333 -386 OFFCURVE",
"296.333 -362.333 OFFCURVE",
"365 -315 CURVE SMOOTH",
"475 -238.333 OFFCURVE",
"546.333 -131.333 OFFCURVE",
"579 6 CURVE",
"613.667 26 OFFCURVE",
"640.333 42 OFFCURVE",
"659 54 CURVE SMOOTH",
"673.667 62.667 OFFCURVE",
"681 69.333 OFFCURVE",
"681 74 CURVE SMOOTH",
"681 74.667 OFFCURVE",
"680.333 75 OFFCURVE",
"679 75 CURVE SMOOTH",
"677 75 OFFCURVE",
"671.667 72.667 OFFCURVE",
"663 68 CURVE SMOOTH",
"631.667 50 OFFCURVE",
"605.333 36.333 OFFCURVE",
"584 27 CURVE",
"593 120 LINE SMOOTH",
"600 189 OFFCURVE",
"611.667 250.667 OFFCURVE",
"627 306 CURVE SMOOTH",
"649.667 387.333 OFFCURVE",
"680.667 457 OFFCURVE",
"722 517 CURVE SMOOTH",
"725.333 522.333 OFFCURVE",
"727 526.667 OFFCURVE",
"727 530 CURVE SMOOTH",
"727 534.667 OFFCURVE",
"724.333 537 OFFCURVE",
"719 537 CURVE SMOOTH",
"714.333 537 OFFCURVE",
"709.667 535.333 OFFCURVE",
"705 532 CURVE SMOOTH",
"658.333 490.667 OFFCURVE",
"607.667 428.333 OFFCURVE",
"557 343 CURVE SMOOTH",
"523.667 285.667 OFFCURVE",
"492 229.333 OFFCURVE",
"460 172 CURVE SMOOTH",
"445.333 145.333 OFFCURVE",
"430.667 120.333 OFFCURVE",
"416 95 CURVE SMOOTH",
"393.333 56.333 OFFCURVE",
"376 34.333 OFFCURVE",
"364 29 CURVE",
"383.333 69 OFFCURVE",
"399.667 117.333 OFFCURVE",
"413 174 CURVE SMOOTH",
"427 234.667 OFFCURVE",
"433 291.667 OFFCURVE",
"431 345 CURVE",
"499.667 367 OFFCURVE",
"535.333 401.333 OFFCURVE",
"538 448 CURVE SMOOTH",
"538 450.667 OFFCURVE",
"536.667 452.333 OFFCURVE",
"534 453 CURVE SMOOTH",
"531.333 453 OFFCURVE",
"530 451.667 OFFCURVE",
"530 449 CURVE SMOOTH",
"527.333 406.333 OFFCURVE",
"494 374.333 OFFCURVE",
"430 353 CURVE",
"428 381.667 OFFCURVE",
"423.333 408 OFFCURVE",
"416 432 CURVE SMOOTH",
"390.667 512 OFFCURVE",
"340 550.333 OFFCURVE",
"264 547 CURVE",
"232 575 OFFCURVE",
"199.333 589 OFFCURVE",
"166 589 CURVE SMOOTH",
"114 589 OFFCURVE",
"76 550.333 OFFCURVE",
"76 501 CURVE SMOOTH",
"76 481.667 OFFCURVE",
"81 462.667 OFFCURVE",
"91 444 CURVE",
"66.333 409.333 OFFCURVE",
"54 373.333 OFFCURVE",
"54 336 CURVE SMOOTH",
"54 280 OFFCURVE",
"77.333 252 OFFCURVE",
"124 252 CURVE SMOOTH",
"144 252 OFFCURVE",
"163.667 259.333 OFFCURVE",
"183 274 CURVE SMOOTH",
"200.333 286.667 OFFCURVE",
"211.667 299.333 OFFCURVE",
"217 312 CURVE",
"217 315.333 OFFCURVE",
"216.333 317 OFFCURVE",
"215 317 CURVE",
"194.333 284.333 OFFCURVE",
"168 268 OFFCURVE",
"136 268 CURVE SMOOTH",
"94.667 268 OFFCURVE",
"74 291.667 OFFCURVE",
"74 339 CURVE SMOOTH",
"74 367.667 OFFCURVE",
"82.667 398.333 OFFCURVE",
"100 431 CURVE",
"118 405.667 OFFCURVE",
"144.667 383 OFFCURVE",
"180 363 CURVE SMOOTH",
"219.333 340.333 OFFCURVE",
"267.667 329 OFFCURVE",
"325 329 CURVE SMOOTH",
"335.667 329 OFFCURVE",
"348.333 329.667 OFFCURVE",
"359 331 CURVE",
"360 319 OFFCURVE",
"361 306 OFFCURVE",
"361 292 CURVE SMOOTH",
"361 270 OFFCURVE",
"359 245 OFFCURVE",
"357 217 CURVE SMOOTH",
"351 145.667 OFFCURVE",
"338.667 81 OFFCURVE",
"320 23 CURVE SMOOTH",
"319 20 OFFCURVE",
"320 18 OFFCURVE",
"323 18 CURVE SMOOTH",
"325 18 OFFCURVE",
"326 19 OFFCURVE",
"327 21 CURVE SMOOTH",
"347.667 83.667 OFFCURVE",
"361 148.667 OFFCURVE",
"367 216 CURVE SMOOTH",
"369 244 OFFCURVE",
"371 269 OFFCURVE",
"371 291 CURVE SMOOTH",
"371 306 OFFCURVE",
"370 320 OFFCURVE",
"369 332 CURVE",
"373 332 LINE",
"384 333.5 LINE SMOOTH",
"388 334 OFFCURVE",
"392 334.667 OFFCURVE",
"396 336 CURVE",
"397.333 320 OFFCURVE",
"398 304.333 OFFCURVE",
"398 287 CURVE SMOOTH",
"398 187.667 OFFCURVE",
"382 99.333 OFFCURVE",
"350 22 CURVE SMOOTH",
"348 17.333 OFFCURVE",
"349.333 15 OFFCURVE",
"354 15 CURVE SMOOTH",
"370 15 OFFCURVE",
"403.667 54.667 OFFCURVE",
"455 134 CURVE SMOOTH",
"469.667 157.333 OFFCURVE",
"484 181 OFFCURVE",
"498 205 CURVE SMOOTH",
"541 277 LINE SMOOTH",
"584 349 OFFCURVE",
"622.667 406.333 OFFCURVE",
"660 449 CURVE",
"619.333 375 OFFCURVE",
"588 281.667 OFFCURVE",
"566 169 CURVE SMOOTH",
"556.667 114.333 OFFCURVE",
"549 61.667 OFFCURVE",
"541 7 CURVE",
"521.5 -1 LINE SMOOTH",
"515 -4 OFFCURVE",
"508.333 -6.333 OFFCURVE",
"501 -9 CURVE",
"530 129 LINE SMOOTH",
"541 182 OFFCURVE",
"552.667 221.333 OFFCURVE",
"564 246 CURVE SMOOTH",
"566.667 252.667 OFFCURVE",
"566 256 OFFCURVE",
"562 256 CURVE SMOOTH",
"559.333 256 OFFCURVE",
"557 253.667 OFFCURVE",
"555 249 CURVE SMOOTH",
"544.333 225 OFFCURVE",
"532 187 OFFCURVE",
"520 131 CURVE SMOOTH",
"510.667 89 OFFCURVE",
"503 56 OFFCURVE",
"497 31.5 CURVE SMOOTH",
"485 -16 LINE",
"238 -110 LINE",
"230 -91.333 OFFCURVE",
"218 -76.667 OFFCURVE",
"202 -66 CURVE SMOOTH",
"180.667 -50 OFFCURVE",
"158 -42 OFFCURVE",
"134 -42 CURVE SMOOTH",
"102 -42 OFFCURVE",
"74 -54.333 OFFCURVE",
"50 -79 CURVE SMOOTH",
"26 -104.333 OFFCURVE",
"14 -135 OFFCURVE",
"14 -171 CURVE SMOOTH",
"14 -199.667 OFFCURVE",
"22.333 -227.333 OFFCURVE",
"39 -254 CURVE",
"33.667 -268 OFFCURVE",
"31 -280.667 OFFCURVE",
"31 -292 CURVE SMOOTH",
"31 -304.667 OFFCURVE",
"34.667 -317.667 OFFCURVE",
"42 -331 CURVE SMOOTH",
"62.667 -367.667 OFFCURVE",
"103.333 -386 OFFCURVE",
"164 -386 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"28.667 -218.667 OFFCURVE",
"21 -193.333 OFFCURVE",
"21 -168 CURVE SMOOTH",
"21 -136 OFFCURVE",
"31.333 -109.333 OFFCURVE",
"52 -88 CURVE SMOOTH",
"73.333 -66.667 OFFCURVE",
"98 -56 OFFCURVE",
"126 -56 CURVE SMOOTH",
"149.333 -56 OFFCURVE",
"171.667 -64 OFFCURVE",
"193 -80 CURVE SMOOTH",
"205.667 -89.333 OFFCURVE",
"216 -101.333 OFFCURVE",
"224 -116 CURVE",
"177.333 -137.333 OFFCURVE",
"138 -158.333 OFFCURVE",
"106 -181 CURVE SMOOTH",
"77.333 -200.333 OFFCURVE",
"56.667 -221.333 OFFCURVE",
"44 -244 CURVE"
);
},
{
closed = 1;
nodes = (
"131 -320 OFFCURVE",
"89.333 -301.333 OFFCURVE",
"58 -264 CURVE",
"82 -226.667 OFFCURVE",
"131.333 -191.333 OFFCURVE",
"234 -142 CURVE",
"236.667 -150.667 OFFCURVE",
"238 -160.667 OFFCURVE",
"238 -172 CURVE SMOOTH",
"238 -192 OFFCURVE",
"233 -211 OFFCURVE",
"223 -229 CURVE SMOOTH",
"221.667 -232.333 OFFCURVE",
"222 -234.333 OFFCURVE",
"224 -235 CURVE SMOOTH",
"227.333 -236.333 OFFCURVE",
"229.333 -235.667 OFFCURVE",
"230 -233 CURVE",
"242.667 -210.333 OFFCURVE",
"249 -186.667 OFFCURVE",
"249 -162 CURVE SMOOTH",
"249 -152.667 OFFCURVE",
"248 -144 OFFCURVE",
"246 -136 CURVE",
"306 -106.667 OFFCURVE",
"382.667 -73.667 OFFCURVE",
"480 -35 CURVE",
"464.667 -87 OFFCURVE",
"446.667 -128.667 OFFCURVE",
"426 -160 CURVE SMOOTH",
"396.667 -205.333 OFFCURVE",
"361.667 -242.667 OFFCURVE",
"319 -272 CURVE SMOOTH",
"271.667 -304 OFFCURVE",
"226.333 -320 OFFCURVE",
"183 -320 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"102 -357 OFFCURVE",
"69.333 -344.333 OFFCURVE",
"54 -319 CURVE SMOOTH",
"49 -312 OFFCURVE",
"47 -305 OFFCURVE",
"47 -297 CURVE SMOOTH",
"47 -289 OFFCURVE",
"49 -281 OFFCURVE",
"53 -273 CURVE",
"85.667 -309.667 OFFCURVE",
"129.333 -328 OFFCURVE",
"184 -328 CURVE SMOOTH",
"230.667 -328 OFFCURVE",
"278.333 -311.667 OFFCURVE",
"327 -279 CURVE SMOOTH",
"373.667 -247.667 OFFCURVE",
"411.667 -209.333 OFFCURVE",
"441 -164 CURVE SMOOTH",
"462.333 -130.667 OFFCURVE",
"480.667 -85.333 OFFCURVE",
"496 -28 CURVE",
"538 -11 LINE",
"520.667 -96.333 OFFCURVE",
"483.667 -169.333 OFFCURVE",
"427 -230 CURVE SMOOTH",
"374.333 -287.333 OFFCURVE",
"312 -325.667 OFFCURVE",
"240 -345 CURVE SMOOTH",
"210 -353 OFFCURVE",
"180.667 -357 OFFCURVE",
"152 -357 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"269.333 337 OFFCURVE",
"222.667 348 OFFCURVE",
"184 370 CURVE SMOOTH",
"147.333 390 OFFCURVE",
"120.667 413 OFFCURVE",
"104 439 CURVE",
"141.333 503 OFFCURVE",
"203.667 538.333 OFFCURVE",
"261 533 CURVE",
"271.667 522.333 OFFCURVE",
"281.333 510.333 OFFCURVE",
"292 497 CURVE SMOOTH",
"328.667 445.667 OFFCURVE",
"350.667 392.667 OFFCURVE",
"358 338 CURVE",
"352.667 337.333 OFFCURVE",
"347 337 OFFCURVE",
"341 337 CURVE SMOOTH",
"324 337 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86.667 468.333 OFFCURVE",
"82 485.667 OFFCURVE",
"82 503 CURVE SMOOTH",
"82 548.333 OFFCURVE",
"115.667 581 OFFCURVE",
"161 581 CURVE SMOOTH",
"189 581 OFFCURVE",
"217.667 569 OFFCURVE",
"247 545 CURVE",
"187 537 OFFCURVE",
"136.667 505.667 OFFCURVE",
"96 451 CURVE"
);
},
{
closed = 1;
nodes = (
"363.667 385.667 OFFCURVE",
"349.667 428.333 OFFCURVE",
"327 467 CURVE SMOOTH",
"313.667 491 OFFCURVE",
"299 511.333 OFFCURVE",
"283 528 CURVE",
"328.333 514.667 OFFCURVE",
"360.667 478 OFFCURVE",
"380 418 CURVE SMOOTH",
"386.667 396 OFFCURVE",
"391.667 371.333 OFFCURVE",
"395 344 CURVE",
"391 342.667 OFFCURVE",
"387 342 OFFCURVE",
"383 341.5 CURVE SMOOTH",
"372 340 LINE",
"369 339 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01253 233 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012183 951 121 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 121 186 121 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 121 121 121 137 121 153 121 169 121 185 121 201 121 217 121 233 121 249 121 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 121 25 121 41 121 57 121 73 121 89 121 105 121 121 121 137 121 153 121 169 121 185 121 201 121 217 121 233 121 249 121 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 121 25 121 41 121 57 121 73 121 89 121 105 121 121 121 137 121 153 121 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0128 233 183 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 53 22 53 38 53 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 53 69 53 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01212 233 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01219 233 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01246 233 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01259 233 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01286 233 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012137 233 183 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 233 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012162 233 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012162 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\012150 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012156 233 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012166 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012166 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012183 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012175 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012175 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012187 233 183 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012169 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01290 949 225 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012171 144 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0128 144 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012171 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01219 144 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01246 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01259 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01275 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01286 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01296 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012101 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012109 144 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012144 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012137 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 144 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012156 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012181 144 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012187 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012210 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012216 227 169 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 707;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
lastChange = "2021-05-11 10:26:24 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{224, -112}";
},
{
name = center;
position = "{273, 305}";
},
{
name = top;
position = "{401, 493}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"298 -112 OFFCURVE",
"308.667 -111 OFFCURVE",
"320 -109 CURVE SMOOTH",
"376.667 -100.333 OFFCURVE",
"423 -81.333 OFFCURVE",
"459 -52 CURVE",
"493.667 -46 OFFCURVE",
"524.667 -31 OFFCURVE",
"552 -7 CURVE SMOOTH",
"582 19 OFFCURVE",
"597 47.333 OFFCURVE",
"597 78 CURVE SMOOTH",
"597 92 OFFCURVE",
"593.333 106.333 OFFCURVE",
"586 121 CURVE SMOOTH",
"585.333 122.333 OFFCURVE",
"583.667 122.667 OFFCURVE",
"581 122 CURVE SMOOTH",
"578.333 120.667 OFFCURVE",
"577.667 118.333 OFFCURVE",
"579 115 CURVE SMOOTH",
"584.333 103 OFFCURVE",
"587 91.333 OFFCURVE",
"587 80 CURVE SMOOTH",
"587 33.253 OFFCURVE",
"542.699 -8.883 OFFCURVE",
"494 -17 CURVE",
"522.667 19.667 OFFCURVE",
"537 62.667 OFFCURVE",
"537 112 CURVE SMOOTH",
"537 200 OFFCURVE",
"491 282.667 OFFCURVE",
"411 324 CURVE",
"464.333 383.333 OFFCURVE",
"511 428 OFFCURVE",
"551 458 CURVE",
"616 457 OFFCURVE",
"648 464 OFFCURVE",
"648 481 CURVE SMOOTH",
"648 488 OFFCURVE",
"640 492 OFFCURVE",
"625 492 CURVE SMOOTH",
"605 492 OFFCURVE",
"582 485 OFFCURVE",
"556 471 CURVE",
"554.667 471 OFFCURVE",
"541 473 OFFCURVE",
"515 476.5 CURVE SMOOTH",
"401 493 LINE SMOOTH",
"334 503 OFFCURVE",
"281 508 OFFCURVE",
"243 508 CURVE SMOOTH",
"226.333 508 OFFCURVE",
"212.333 506.667 OFFCURVE",
"201 504 CURVE SMOOTH",
"181 500 OFFCURVE",
"162.333 490.333 OFFCURVE",
"145 475 CURVE SMOOTH",
"124 454 OFFCURVE",
"113 432 OFFCURVE",
"113 408 CURVE SMOOTH",
"113 393 OFFCURVE",
"116 380 OFFCURVE",
"124 367 CURVE",
"126 366 LINE",
"128 366 OFFCURVE",
"129.667 368 OFFCURVE",
"131 372 CURVE",
"126 385 LINE SMOOTH",
"124 390 OFFCURVE",
"122 398 OFFCURVE",
"122 404 CURVE SMOOTH",
"122 406 OFFCURVE",
"122 408 OFFCURVE",
"122 409 CURVE SMOOTH",
"124 431.667 OFFCURVE",
"139.667 449 OFFCURVE",
"169 461 CURVE SMOOTH",
"191 470.333 OFFCURVE",
"213.333 475 OFFCURVE",
"236 475 CURVE SMOOTH",
"237.333 475 OFFCURVE",
"263 473 OFFCURVE",
"312.5 470.5 CURVE SMOOTH",
"536 458 LINE",
"486.667 427.333 OFFCURVE",
"436 386.667 OFFCURVE",
"384 336 CURVE",
"355 345 LINE",
"405 395 OFFCURVE",
"438 424.333 OFFCURVE",
"454 433 CURVE SMOOTH",
"459.333 436.333 OFFCURVE",
"462.333 438.667 OFFCURVE",
"463 440 CURVE SMOOTH",
"464.333 441.333 OFFCURVE",
"463.667 442 OFFCURVE",
"461 442 CURVE SMOOTH",
"459.667 442 OFFCURVE",
"457 441.333 OFFCURVE",
"453 440 CURVE SMOOTH",
"434.333 431.333 OFFCURVE",
"398.667 400 OFFCURVE",
"346 346 CURVE",
"329.333 349.333 OFFCURVE",
"314 351 OFFCURVE",
"300 351 CURVE SMOOTH",
"213.333 351 OFFCURVE",
"144.667 328 OFFCURVE",
"94 282 CURVE SMOOTH",
"51 244 OFFCURVE",
"30 200 OFFCURVE",
"30 150 CURVE SMOOTH",
"30 108 OFFCURVE",
"47 87 OFFCURVE",
"82 87 CURVE SMOOTH",
"108 87 OFFCURVE",
"137.333 102.333 OFFCURVE",
"170 133 CURVE SMOOTH",
"192.667 154.333 OFFCURVE",
"217.333 180.333 OFFCURVE",
"244 215 CURVE",
"276 218 LINE",
"246 180.667 OFFCURVE",
"220 148 OFFCURVE",
"198 119.5 CURVE SMOOTH",
"142 48 LINE",
"121 52 OFFCURVE",
"102 54 OFFCURVE",
"85 54 CURVE SMOOTH",
"27 54 OFFCURVE",
"-2 39 OFFCURVE",
"-2 12 CURVE SMOOTH",
"-2 -8 OFFCURVE",
"21 -25 OFFCURVE",
"53 -25 CURVE SMOOTH",
"85 -25 OFFCURVE",
"117.667 -10.667 OFFCURVE",
"151 18 CURVE",
"195 3 LINE",
"191.667 -9 OFFCURVE",
"190 -19.667 OFFCURVE",
"190 -29 CURVE SMOOTH",
"190 -75.667 OFFCURVE",
"224 -112 OFFCURVE",
"288 -112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"26.667 -10 OFFCURVE",
"5 3.667 OFFCURVE",
"5 17 CURVE SMOOTH",
"5 30 OFFCURVE",
"21 36 OFFCURVE",
"52 36 CURVE SMOOTH",
"73 36 OFFCURVE",
"97 32 OFFCURVE",
"124 25 CURVE",
"102.667 1.667 OFFCURVE",
"78.667 -10 OFFCURVE",
"52 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 -103 OFFCURVE",
"197 -70 OFFCURVE",
"197 -26 CURVE SMOOTH",
"197 -18 OFFCURVE",
"198.667 -9 OFFCURVE",
"202 1 CURVE",
"232.667 -10.333 OFFCURVE",
"258 -19 OFFCURVE",
"277 -25.5 CURVE SMOOTH",
"320 -39 LINE SMOOTH",
"364 -53 OFFCURVE",
"403.667 -56 OFFCURVE",
"437 -54 CURVE",
"404.333 -78.667 OFFCURVE",
"365 -94.333 OFFCURVE",
"319 -101 CURVE SMOOTH",
"308.333 -102.333 OFFCURVE",
"299.333 -103 OFFCURVE",
"290 -103 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"50.667 95 OFFCURVE",
"38 111.667 OFFCURVE",
"38 145 CURVE SMOOTH",
"38 189 OFFCURVE",
"59 231 OFFCURVE",
"101 271 CURVE SMOOTH",
"151.667 319 OFFCURVE",
"218 343 OFFCURVE",
"300 343 CURVE SMOOTH",
"312.667 343 OFFCURVE",
"325.667 342 OFFCURVE",
"339 340 CURVE",
"297.667 294.667 OFFCURVE",
"266.667 259.667 OFFCURVE",
"248 237 CURVE",
"174 235 OFFCURVE",
"136 219 OFFCURVE",
"136 189 CURVE SMOOTH",
"136 176 OFFCURVE",
"146 161 OFFCURVE",
"154 161 CURVE",
"155 162 LINE SMOOTH",
"156 163 OFFCURVE",
"153.5 162.5 OFFCURVE",
"152.5 165.5 CURVE SMOOTH",
"151.5 168.5 OFFCURVE",
"151.333 171.333 OFFCURVE",
"152 174 CURVE",
"152.667 189.333 OFFCURVE",
"177 201.667 OFFCURVE",
"225 211 CURVE",
"199.667 183 OFFCURVE",
"176.667 159.667 OFFCURVE",
"158 141 CURVE SMOOTH",
"125.333 110.333 OFFCURVE",
"98 95 OFFCURVE",
"76 95 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"406.333 -21 OFFCURVE",
"367 -15.333 OFFCURVE",
"323 -4 CURVE",
"317.667 -3.333 OFFCURVE",
"281.667 7.667 OFFCURVE",
"215 29 CURVE",
"228.333 48.333 OFFCURVE",
"246.333 64 OFFCURVE",
"269 76 CURVE SMOOTH",
"287.667 86.667 OFFCURVE",
"313 92 OFFCURVE",
"345 92 CURVE SMOOTH",
"371 92 OFFCURVE",
"386.667 86.333 OFFCURVE",
"392 75 CURVE",
"392.667 72.333 OFFCURVE",
"394.333 71.667 OFFCURVE",
"397 73 CURVE SMOOTH",
"399.667 73.667 OFFCURVE",
"400.333 75.333 OFFCURVE",
"399 78 CURVE SMOOTH",
"393 92.667 OFFCURVE",
"375 100 OFFCURVE",
"345 100 CURVE SMOOTH",
"313 100 OFFCURVE",
"286.333 94.333 OFFCURVE",
"265 83 CURVE SMOOTH",
"241 69.667 OFFCURVE",
"222 52.333 OFFCURVE",
"208 31 CURVE",
"174 41 LINE",
"206 79.667 OFFCURVE",
"234 114 OFFCURVE",
"258 144 CURVE SMOOTH",
"320 221 LINE",
"330 221.667 OFFCURVE",
"340 222 OFFCURVE",
"350 222 CURVE SMOOTH",
"380 222 LINE SMOOTH",
"390.335 222 OFFCURVE",
"429.741 219 OFFCURVE",
"439 219 CURVE SMOOTH",
"441 219 OFFCURVE",
"442.667 219.667 OFFCURVE",
"444 221 CURVE",
"444 221.667 OFFCURVE",
"442.333 222.667 OFFCURVE",
"439 224 CURVE SMOOTH",
"413.667 230 OFFCURVE",
"378.667 234 OFFCURVE",
"334 236 CURVE",
"406 317 LINE",
"479.333 278.333 OFFCURVE",
"522 199.667 OFFCURVE",
"522 117 CURVE SMOOTH",
"522 64.333 OFFCURVE",
"506 19 OFFCURVE",
"474 -19 CURVE",
"463.333 -20.333 OFFCURVE",
"451.667 -21 OFFCURVE",
"441 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"284 237.667 OFFCURVE",
"277.5 238 OFFCURVE",
"272.5 238 CURVE SMOOTH",
"263 238 LINE",
"301.667 284.667 OFFCURVE",
"330.333 319.333 OFFCURVE",
"349 338 CURVE",
"378 330 LINE",
"351.333 303.333 OFFCURVE",
"322.667 271.667 OFFCURVE",
"292 237 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01239 190 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012171 952 77 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 39 22 39 38 39 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 39 69 39 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0120 190 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012190 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01210 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01247 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01262 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01268 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\01258 77 74 77 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 77 25 77 41 77 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01281 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01298 190 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012108 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012113 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012117 77 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012153 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012158 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012169 77 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012182 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012182 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012197 190 171 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012171 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012220 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01256 179 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012140 949 120 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012147 949 151 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01234 203 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012209 95 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 179 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01210 95 209 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01223 203 34 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01247 179 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01262 179 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012203 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01268 179 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012187 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012187 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01298 179 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012108 95 209 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012113 140 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012151 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012147 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012153 95 209 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012158 179 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012169 203 34 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012179 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012177 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012177 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012197 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012197 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012211 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 546;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"230.667 -17 OFFCURVE",
"268 -12.333 OFFCURVE",
"268 -3 CURVE SMOOTH",
"268 5 OFFCURVE",
"258.333 9 OFFCURVE",
"239 9 CURVE SMOOTH",
"229.735 9 OFFCURVE",
"173.403 4 OFFCURVE",
"164 4 CURVE SMOOTH",
"112.667 4 OFFCURVE",
"87 22.667 OFFCURVE",
"87 60 CURVE SMOOTH",
"87 120.667 OFFCURVE",
"123.333 217.667 OFFCURVE",
"196 351 CURVE SMOOTH",
"260 468.333 OFFCURVE",
"316.667 556 OFFCURVE",
"370 620 CURVE SMOOTH",
"396.667 651.333 OFFCURVE",
"417 671.333 OFFCURVE",
"431 680 CURVE SMOOTH",
"438.333 684.667 OFFCURVE",
"456.667 687 OFFCURVE",
"486 687 CURVE SMOOTH",
"501.436 687 OFFCURVE",
"541.355 683 OFFCURVE",
"558 683 CURVE SMOOTH",
"564.667 683 OFFCURVE",
"569.333 683.333 OFFCURVE",
"572 684 CURVE",
"572 686 OFFCURVE",
"572.167 687.833 OFFCURVE",
"572.5 689.5 CURVE SMOOTH",
"573 694 LINE",
"573 697 LINE SMOOTH",
"573 711 OFFCURVE",
"539.333 718 OFFCURVE",
"472 718 CURVE SMOOTH",
"444.667 718 OFFCURVE",
"422.333 712.333 OFFCURVE",
"405 701 CURVE SMOOTH",
"339.667 655.667 OFFCURVE",
"263.667 550.667 OFFCURVE",
"177 386 CURVE SMOOTH",
"91 220.667 OFFCURVE",
"48 98.333 OFFCURVE",
"48 19 CURVE SMOOTH",
"48 -5 OFFCURVE",
"84 -17 OFFCURVE",
"156 -17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 950 33 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 20 181 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01227 949 31 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 949 11 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 585;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"514.333 -116 OFFCURVE",
"523 -105.333 OFFCURVE",
"523 -84 CURVE SMOOTH",
"523 -3.333 OFFCURVE",
"477.667 113.667 OFFCURVE",
"387 267 CURVE SMOOTH",
"321.667 376.333 OFFCURVE",
"248 483.333 OFFCURVE",
"164 590 CURVE SMOOTH",
"119.333 646 OFFCURVE",
"88.667 681 OFFCURVE",
"72 695 CURVE SMOOTH",
"55.333 708.333 OFFCURVE",
"39.333 715 OFFCURVE",
"24 715 CURVE SMOOTH",
"15.333 715 OFFCURVE",
"10.667 713 OFFCURVE",
"10 709 CURVE",
"126 590.333 OFFCURVE",
"226.333 465.333 OFFCURVE",
"317 332 CURVE SMOOTH",
"437 152.667 OFFCURVE",
"497 10 OFFCURVE",
"497 -96 CURVE SMOOTH",
"497 -116 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 951 3 14 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 551;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"181.667 -17 OFFCURVE",
"240 -2.333 OFFCURVE",
"268 27 CURVE SMOOTH",
"337.333 100.333 OFFCURVE",
"399.333 202.667 OFFCURVE",
"454 334 CURVE SMOOTH",
"510 466.667 OFFCURVE",
"538 581.667 OFFCURVE",
"538 679 CURVE SMOOTH",
"538 698.333 OFFCURVE",
"529.667 710 OFFCURVE",
"513 714 CURVE SMOOTH",
"509 715.333 OFFCURVE",
"493 716 OFFCURVE",
"465 716 CURVE SMOOTH",
"413.667 716 OFFCURVE",
"377.333 705.333 OFFCURVE",
"356 684 CURVE",
"363.333 685.333 OFFCURVE",
"380 686.333 OFFCURVE",
"406 687 CURVE SMOOTH",
"426 688.333 OFFCURVE",
"441.667 689 OFFCURVE",
"455 689 CURVE SMOOTH",
"472.333 689 OFFCURVE",
"485.667 686 OFFCURVE",
"495 680 CURVE",
"497.667 669.333 OFFCURVE",
"499 657 OFFCURVE",
"499 643 CURVE SMOOTH",
"499 570.333 OFFCURVE",
"471.333 469 OFFCURVE",
"416 339 CURVE SMOOTH",
"363.333 217 OFFCURVE",
"311 125 OFFCURVE",
"259 63 CURVE SMOOTH",
"228.333 26.333 OFFCURVE",
"180.667 8 OFFCURVE",
"116 8 CURVE SMOOTH",
"71 8 LINE",
"60.333 6 OFFCURVE",
"47.333 -1.667 OFFCURVE",
"32 -15 CURVE",
"42.667 -16.333 OFFCURVE",
"62.333 -17 OFFCURVE",
"93 -17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 950 18 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 18 186 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01211 947 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 949 25 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 556;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"262 244 OFFCURVE",
"263 244 OFFCURVE",
"265 244 CURVE",
"267 245.333 OFFCURVE",
"267.667 247 OFFCURVE",
"267 249 CURVE SMOOTH",
"237 335 LINE SMOOTH",
"237 336 OFFCURVE",
"234 337 OFFCURVE",
"229 337 CURVE SMOOTH",
"224 337 OFFCURVE",
"216 336 OFFCURVE",
"206 335 CURVE",
"84 249 LINE",
"83 247 LINE",
"83 244.333 OFFCURVE",
"85.667 243.667 OFFCURVE",
"91 245 CURVE",
"97.667 245 OFFCURVE",
"102.333 246.333 OFFCURVE",
"105 249 CURVE",
"213 307 LINE",
"250 249 LINE SMOOTH",
"252 245 OFFCURVE",
"256 244 OFFCURVE",
"260 244 CURVE SMOOTH"
);
}
);
width = 323;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = grave;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"182.333 359 OFFCURVE",
"185 361.333 OFFCURVE",
"185 366 CURVE SMOOTH",
"185 368.667 OFFCURVE",
"183.667 371 OFFCURVE",
"181 373 CURVE SMOOTH",
"142.333 403.667 OFFCURVE",
"114.333 425 OFFCURVE",
"97 437 CURVE SMOOTH",
"90.333 442.333 OFFCURVE",
"85.333 445 OFFCURVE",
"82 445 CURVE SMOOTH",
"76 445 OFFCURVE",
"73 440.667 OFFCURVE",
"73 432 CURVE SMOOTH",
"73 424.667 OFFCURVE",
"75 419 OFFCURVE",
"79 415 CURVE",
"104.333 397.667 OFFCURVE",
"135 378.667 OFFCURVE",
"171 360 CURVE SMOOTH",
"172.333 359.333 OFFCURVE",
"174.333 359 OFFCURVE",
"177 359 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 245;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2021-05-11 10:26:06 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{96, 0}";
},
{
name = ogonek;
position = "{221, 4}";
},
{
name = top;
position = "{199, 254}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"73 -6.667 OFFCURVE",
"96.333 10.667 OFFCURVE",
"125 48 CURVE SMOOTH",
"150.333 81.333 OFFCURVE",
"162.667 99.333 OFFCURVE",
"162 102 CURVE",
"161 101 OFFCURVE",
"160 98 OFFCURVE",
"160 93 CURVE SMOOTH",
"160 85 OFFCURVE",
"162 73 OFFCURVE",
"165 56 CURVE SMOOTH",
"170.333 24.667 OFFCURVE",
"181.667 6 OFFCURVE",
"199 0 CURVE SMOOTH",
"205 -2 OFFCURVE",
"211 -3 OFFCURVE",
"217 -3 CURVE SMOOTH",
"239 -3 OFFCURVE",
"263 8 OFFCURVE",
"289 30 CURVE SMOOTH",
"309.667 47.333 OFFCURVE",
"321.333 59.667 OFFCURVE",
"324 67 CURVE",
"321.333 70.333 OFFCURVE",
"319 71.667 OFFCURVE",
"317 71 CURVE",
"299 52 LINE SMOOTH",
"276 27 OFFCURVE",
"251 16 OFFCURVE",
"235 16 CURVE SMOOTH",
"220.333 16 OFFCURVE",
"210 30.667 OFFCURVE",
"204 60 CURVE",
"204 116 LINE SMOOTH",
"204 144 OFFCURVE",
"201.333 158 OFFCURVE",
"196 158 CURVE SMOOTH",
"190 158 OFFCURVE",
"182 151 OFFCURVE",
"172 137 CURVE SMOOTH",
"134 83 OFFCURVE",
"109.333 50.667 OFFCURVE",
"98 40 CURVE SMOOTH",
"81.333 24.667 OFFCURVE",
"69.667 17 OFFCURVE",
"63 17 CURVE SMOOTH",
"57 17 OFFCURVE",
"54 21.333 OFFCURVE",
"54 30 CURVE SMOOTH",
"54 40.667 OFFCURVE",
"57.333 54 OFFCURVE",
"64 70 CURVE SMOOTH",
"85.333 122 OFFCURVE",
"119 167.667 OFFCURVE",
"165 207 CURVE SMOOTH",
"183.667 223 OFFCURVE",
"201 231 OFFCURVE",
"217 231 CURVE SMOOTH",
"233.667 231 OFFCURVE",
"242 223.667 OFFCURVE",
"242 209 CURVE SMOOTH",
"242 202.333 OFFCURVE",
"240 195.667 OFFCURVE",
"236 189 CURVE",
"248.667 191 OFFCURVE",
"255 199.667 OFFCURVE",
"255 215 CURVE SMOOTH",
"255 241.667 OFFCURVE",
"227 254 OFFCURVE",
"199 254 CURVE SMOOTH",
"157.667 254 OFFCURVE",
"117.667 228 OFFCURVE",
"79 176 CURVE SMOOTH",
"41.667 126.667 OFFCURVE",
"23 81.667 OFFCURVE",
"23 41 CURVE SMOOTH",
"23 14.333 OFFCURVE",
"33.667 -0.667 OFFCURVE",
"55 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01246 16 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01220 947 29 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 269;
}
);
note = a;
unicode = 0061;
},
{
glyphname = b;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"120.663 -7 OFFCURVE",
"179.481 28.221 OFFCURVE",
"210 74 CURVE SMOOTH",
"238.667 117.333 OFFCURVE",
"253 164.667 OFFCURVE",
"253 216 CURVE SMOOTH",
"253 240.667 OFFCURVE",
"243.333 253 OFFCURVE",
"224 253 CURVE SMOOTH",
"214 253 OFFCURVE",
"205.333 250.333 OFFCURVE",
"198 245 CURVE SMOOTH",
"188.667 238.333 OFFCURVE",
"173 221.667 OFFCURVE",
"149 195 CURVE SMOOTH",
"121.667 165 OFFCURVE",
"102.667 141.333 OFFCURVE",
"92 124 CURVE",
"95.333 168 OFFCURVE",
"117.333 237.333 OFFCURVE",
"158 332 CURVE SMOOTH",
"202.667 440 OFFCURVE",
"241 494 OFFCURVE",
"273 494 CURVE SMOOTH",
"295 494.667 OFFCURVE",
"313.333 488.667 OFFCURVE",
"328 476 CURVE SMOOTH",
"329.333 474.667 OFFCURVE",
"331 474 OFFCURVE",
"333 474 CURVE",
"335 472.667 OFFCURVE",
"336.667 472.667 OFFCURVE",
"338 474 CURVE SMOOTH",
"338.667 474.667 OFFCURVE",
"338.667 476.667 OFFCURVE",
"338 480 CURVE",
"330 498.667 OFFCURVE",
"314.667 510.333 OFFCURVE",
"292 515 CURVE",
"288.667 516.333 OFFCURVE",
"279.667 515 OFFCURVE",
"265 511 CURVE SMOOTH",
"251 508.333 OFFCURVE",
"242 505.667 OFFCURVE",
"238 503 CURVE SMOOTH",
"204 482.333 OFFCURVE",
"171.333 442.333 OFFCURVE",
"140 383 CURVE SMOOTH",
"112.667 331.667 OFFCURVE",
"90.667 269.333 OFFCURVE",
"74 196 CURVE SMOOTH",
"59.333 138 OFFCURVE",
"52 92.333 OFFCURVE",
"52 59 CURVE",
"53.333 59 OFFCURVE",
"57.667 55 OFFCURVE",
"65 47 CURVE SMOOTH",
"73 39 OFFCURVE",
"78.333 35 OFFCURVE",
"81 35 CURVE SMOOTH",
"83 35 OFFCURVE",
"84.667 37.667 OFFCURVE",
"86 43 CURVE",
"87.333 77.667 OFFCURVE",
"98.667 111.667 OFFCURVE",
"120 145 CURVE SMOOTH",
"142 180.333 OFFCURVE",
"168.333 205.333 OFFCURVE",
"199 220 CURVE SMOOTH",
"207 224 OFFCURVE",
"211 216 OFFCURVE",
"211 196 CURVE SMOOTH",
"211 165.333 OFFCURVE",
"202.667 133 OFFCURVE",
"186 99 CURVE SMOOTH",
"164.023 55.046 OFFCURVE",
"123.789 10.132 OFFCURVE",
"87 4 CURVE SMOOTH",
"56.333 1.333 OFFCURVE",
"38 23 OFFCURVE",
"32 69 CURVE",
"22 59 OFFCURVE",
"17 48 OFFCURVE",
"17 36 CURVE SMOOTH",
"17 7.333 OFFCURVE",
"35.667 -7 OFFCURVE",
"73 -7 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 952 30 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 950 41 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 12 22 12 38 12 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 12 69 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01232 30 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012170 41 186 41 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 259;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2021-05-11 10:25:51 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{63, -13}";
},
{
name = top;
position = "{142, 254}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"83.667 -17 OFFCURVE",
"109.333 -7.333 OFFCURVE",
"140 12 CURVE SMOOTH",
"166.667 29.333 OFFCURVE",
"187.333 47.333 OFFCURVE",
"202 66 CURVE SMOOTH",
"206 71 OFFCURVE",
"208 75 OFFCURVE",
"208 78 CURVE SMOOTH",
"208 78 OFFCURVE",
"208 79 OFFCURVE",
"208 79 CURVE SMOOTH",
"206.667 81.667 OFFCURVE",
"204.333 81.333 OFFCURVE",
"201 78 CURVE SMOOTH",
"155 26.667 OFFCURVE",
"114.333 1 OFFCURVE",
"79 1 CURVE SMOOTH",
"58.333 1 OFFCURVE",
"48 14.333 OFFCURVE",
"48 41 CURVE SMOOTH",
"48 57 OFFCURVE",
"51.333 73 OFFCURVE",
"58 89 CURVE SMOOTH",
"67.333 117.667 OFFCURVE",
"80.333 144.333 OFFCURVE",
"97 169 CURVE SMOOTH",
"119 204.333 OFFCURVE",
"139.333 222 OFFCURVE",
"158 222 CURVE SMOOTH",
"168.667 222 OFFCURVE",
"176 218 OFFCURVE",
"180 210 CURVE SMOOTH",
"183 205 OFFCURVE",
"185 203 OFFCURVE",
"187 203 CURVE SMOOTH",
"187 203 OFFCURVE",
"188 204 OFFCURVE",
"189 205 CURVE SMOOTH",
"189.667 206.333 OFFCURVE",
"190 208.333 OFFCURVE",
"190 211 CURVE SMOOTH",
"190 222.333 OFFCURVE",
"186 231.667 OFFCURVE",
"178 239 CURVE SMOOTH",
"166.667 249 OFFCURVE",
"154.667 254 OFFCURVE",
"142 254 CURVE SMOOTH",
"116.667 254 OFFCURVE",
"90.333 233.333 OFFCURVE",
"63 192 CURVE SMOOTH",
"41.667 159.333 OFFCURVE",
"27 127.333 OFFCURVE",
"19 96 CURVE SMOOTH",
"15 78.667 OFFCURVE",
"13 63 OFFCURVE",
"13 49 CURVE SMOOTH",
"13 5 OFFCURVE",
"29.667 -17 OFFCURVE",
"63 -17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 951 6 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 28 181 28 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01212 949 22 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 199;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
lastChange = "2021-05-11 10:25:34 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{153, 0}";
},
{
name = center;
position = "{153, 137}";
},
{
name = top;
position = "{153, 953}";
},
{
name = topright;
position = "{391, 441}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"251.333 -5 OFFCURVE",
"278.333 6.333 OFFCURVE",
"309 29 CURVE SMOOTH",
"341 52.333 OFFCURVE",
"354.667 68.333 OFFCURVE",
"350 77 CURVE",
"349.333 77.667 OFFCURVE",
"337.333 69.333 OFFCURVE",
"314 52 CURVE SMOOTH",
"287.333 32.667 OFFCURVE",
"267.333 23 OFFCURVE",
"254 23 CURVE SMOOTH",
"250 23 OFFCURVE",
"246 23.667 OFFCURVE",
"242 25 CURVE",
"232.667 30.333 OFFCURVE",
"228 48.667 OFFCURVE",
"228 80 CURVE SMOOTH",
"228 123.333 OFFCURVE",
"234.667 164 OFFCURVE",
"248 202 CURVE",
"251 200 OFFCURVE",
"254 199 OFFCURVE",
"256 199 CURVE SMOOTH",
"259 199 OFFCURVE",
"261 202 OFFCURVE",
"261 206 CURVE SMOOTH",
"261 208.667 OFFCURVE",
"259.333 214 OFFCURVE",
"256 222 CURVE",
"258 226 LINE SMOOTH",
"306 322 OFFCURVE",
"330.333 389.333 OFFCURVE",
"349 424 CURVE",
"351 440.667 OFFCURVE",
"348 449 OFFCURVE",
"340 449 CURVE SMOOTH",
"320.667 449 OFFCURVE",
"300 416.333 OFFCURVE",
"278 351 CURVE SMOOTH",
"255.333 289 OFFCURVE",
"242 253.667 OFFCURVE",
"238 245 CURVE",
"224.667 251 OFFCURVE",
"211.667 254 OFFCURVE",
"199 254 CURVE SMOOTH",
"158.333 254 OFFCURVE",
"118 228 OFFCURVE",
"78 176 CURVE SMOOTH",
"41.333 127.333 OFFCURVE",
"23 82.667 OFFCURVE",
"23 42 CURVE SMOOTH",
"23 15.333 OFFCURVE",
"33.667 0 OFFCURVE",
"55 -4 CURVE SMOOTH",
"73 -6.667 OFFCURVE",
"103.333 16.333 OFFCURVE",
"146 65 CURVE SMOOTH",
"185.333 109.667 OFFCURVE",
"205 133.333 OFFCURVE",
"205 136 CURVE",
"198.333 103.333 OFFCURVE",
"195 74.667 OFFCURVE",
"195 50 CURVE SMOOTH",
"195 20.667 OFFCURVE",
"200.667 3.333 OFFCURVE",
"212 -2 CURVE SMOOTH",
"216.667 -4 OFFCURVE",
"222 -5 OFFCURVE",
"228 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"57 17 OFFCURVE",
"54 21.333 OFFCURVE",
"54 30 CURVE SMOOTH",
"54 40.667 OFFCURVE",
"57.333 54 OFFCURVE",
"64 70 CURVE SMOOTH",
"78 104 OFFCURVE",
"101 139 OFFCURVE",
"133 175 CURVE SMOOTH",
"168.333 214.333 OFFCURVE",
"196 234 OFFCURVE",
"216 234 CURVE SMOOTH",
"222 234 OFFCURVE",
"227 232 OFFCURVE",
"231 228 CURVE SMOOTH",
"233.667 225.333 OFFCURVE",
"218.667 200 OFFCURVE",
"186 152 CURVE SMOOTH",
"151.333 101.333 OFFCURVE",
"122 62.667 OFFCURVE",
"98 40 CURVE SMOOTH",
"81.333 24.667 OFFCURVE",
"69.667 17 OFFCURVE",
"63 17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01238 16 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 38 22 38 38 38 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 38 69 38 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0128 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01256 947 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 948 48 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 306;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2021-05-11 10:25:19 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{85, -8}";
},
{
name = ogonek;
position = "{81, -4}";
},
{
name = top;
position = "{154, 249}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"113.667 -12 OFFCURVE",
"143.667 -2.333 OFFCURVE",
"177 17 CURVE SMOOTH",
"207 34.333 OFFCURVE",
"229 52 OFFCURVE",
"243 70 CURVE SMOOTH",
"247 74 OFFCURVE",
"249 78 OFFCURVE",
"249 80 CURVE SMOOTH",
"249 81 OFFCURVE",
"249 82 OFFCURVE",
"248 83 CURVE SMOOTH",
"246 86.333 OFFCURVE",
"243.333 85.667 OFFCURVE",
"240 81 CURVE",
"200 39 OFFCURVE",
"158.667 14.333 OFFCURVE",
"116 7 CURVE SMOOTH",
"112 6 OFFCURVE",
"108 6 OFFCURVE",
"104 6 CURVE SMOOTH",
"94 6 OFFCURVE",
"85 9 OFFCURVE",
"77 16 CURVE SMOOTH",
"65 26 OFFCURVE",
"59 42 OFFCURVE",
"59 64 CURVE SMOOTH",
"59 82 OFFCURVE",
"63 101 OFFCURVE",
"70 120 CURVE",
"110 125.333 OFFCURVE",
"138.667 127 OFFCURVE",
"156 127 CURVE",
"146 113 OFFCURVE",
"141 106.333 OFFCURVE",
"141 107 CURVE SMOOTH",
"141 105.667 OFFCURVE",
"141.667 105 OFFCURVE",
"143 105 CURVE SMOOTH",
"150.333 105 OFFCURVE",
"161.333 113.333 OFFCURVE",
"176 130 CURVE",
"200.667 134.667 OFFCURVE",
"213 139 OFFCURVE",
"213 143 CURVE",
"212.333 143.667 OFFCURVE",
"210.333 144 OFFCURVE",
"207 144 CURVE SMOOTH",
"187 144 LINE",
"201.667 163.333 OFFCURVE",
"209 182 OFFCURVE",
"209 200 CURVE SMOOTH",
"209 232 OFFCURVE",
"176.667 249 OFFCURVE",
"146 249 CURVE SMOOTH",
"116.667 249 OFFCURVE",
"88.333 230.333 OFFCURVE",
"61 193 CURVE SMOOTH",
"39 162.333 OFFCURVE",
"25 130 OFFCURVE",
"19 96 CURVE SMOOTH",
"17.667 86.667 OFFCURVE",
"17 79.333 OFFCURVE",
"17 70 CURVE SMOOTH",
"17 10 OFFCURVE",
"47 -12 OFFCURVE",
"87 -12 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"89.333 159.667 OFFCURVE",
"104.333 177.333 OFFCURVE",
"123 196 CURVE SMOOTH",
"139 212 OFFCURVE",
"153.667 220 OFFCURVE",
"167 220 CURVE SMOOTH",
"177.667 220 OFFCURVE",
"183 213 OFFCURVE",
"183 199 CURVE SMOOTH",
"183 193.667 OFFCURVE",
"182 186.667 OFFCURVE",
"180 178 CURVE SMOOTH",
"178 169.333 OFFCURVE",
"173.333 157.667 OFFCURVE",
"166 143 CURVE",
"115.5 142 LINE SMOOTH",
"101 142 OFFCURVE",
"89.333 141.667 OFFCURVE",
"80 141 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01255 4 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01230 4 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 225;
}
);
note = e;
unicode = 0065;
},
{
glyphname = f;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"93.667 -210 OFFCURVE",
"98 -209 OFFCURVE",
"98 -207 CURVE SMOOTH",
"98 -206.333 OFFCURVE",
"95.5 -204.5 OFFCURVE",
"90.5 -201.5 CURVE SMOOTH",
"85.5 -198.5 OFFCURVE",
"81.333 -195.667 OFFCURVE",
"78 -193 CURVE SMOOTH",
"62.667 -177.667 OFFCURVE",
"55 -147 OFFCURVE",
"55 -101 CURVE SMOOTH",
"55 -74.333 OFFCURVE",
"58.333 -36.333 OFFCURVE",
"65 17 CURVE SMOOTH",
"76.333 99.667 OFFCURVE",
"91.333 164.333 OFFCURVE",
"110 211 CURVE",
"134.667 211 OFFCURVE",
"163 215 OFFCURVE",
"195 223 CURVE SMOOTH",
"207 225.667 OFFCURVE",
"213 228.333 OFFCURVE",
"213 231 CURVE SMOOTH",
"213 233 OFFCURVE",
"210.333 234 OFFCURVE",
"205 234 CURVE SMOOTH",
"117 234 LINE",
"133 280.667 OFFCURVE",
"156.333 331.333 OFFCURVE",
"187 382 CURVE SMOOTH",
"228.333 452 OFFCURVE",
"264 487.333 OFFCURVE",
"294 488 CURVE SMOOTH",
"311.333 489.333 OFFCURVE",
"320 481.667 OFFCURVE",
"320 465 CURVE SMOOTH",
"320 461 OFFCURVE",
"319.333 457.333 OFFCURVE",
"318 452 CURVE",
"327.333 456 OFFCURVE",
"332 464 OFFCURVE",
"332 476 CURVE SMOOTH",
"332 492 OFFCURVE",
"324 502.667 OFFCURVE",
"308 508 CURVE SMOOTH",
"300.667 510 OFFCURVE",
"293.333 511 OFFCURVE",
"286 511 CURVE SMOOTH",
"242.667 511 OFFCURVE",
"200 473.333 OFFCURVE",
"158 398 CURVE SMOOTH",
"140 366 OFFCURVE",
"116 311 OFFCURVE",
"86 233 CURVE",
"79.025 233 OFFCURVE",
"59.594 229 OFFCURVE",
"49 229 CURVE SMOOTH",
"45.667 229 OFFCURVE",
"44 227.333 OFFCURVE",
"44 224 CURVE SMOOTH",
"44 216 OFFCURVE",
"54 206 OFFCURVE",
"71 206 CURVE SMOOTH",
"74 206 OFFCURVE",
"77 206 OFFCURVE",
"80 207 CURVE",
"66.667 168.333 OFFCURVE",
"54 121 OFFCURVE",
"42 61 CURVE SMOOTH",
"26 -13 OFFCURVE",
"18 -72.667 OFFCURVE",
"18 -118 CURVE SMOOTH",
"18 -132.5 LINE SMOOTH",
"18 -136.833 OFFCURVE",
"18.333 -141.333 OFFCURVE",
"19 -146 CURVE SMOOTH",
"21 -165.333 OFFCURVE",
"29.667 -181.667 OFFCURVE",
"45 -195 CURVE SMOOTH",
"57.667 -205 OFFCURVE",
"71 -210 OFFCURVE",
"85 -210 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 950 36 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 22 181 22 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01255 947 5 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 151;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2021-05-11 10:24:47 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{129, -500}";
},
{
name = top;
position = "{192, 254}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-15 -400 OFFCURVE",
"49 -369.667 OFFCURVE",
"105 -309 CURVE SMOOTH",
"169.667 -239.667 OFFCURVE",
"202 -148 OFFCURVE",
"202 -34 CURVE SMOOTH",
"202 -12.667 OFFCURVE",
"200.667 7.667 OFFCURVE",
"198 29 CURVE",
"226 51.667 OFFCURVE",
"246.667 69.333 OFFCURVE",
"260 84 CURVE SMOOTH",
"269.333 93.333 OFFCURVE",
"274 100.333 OFFCURVE",
"274 105 CURVE SMOOTH",
"274 106.333 OFFCURVE",
"273.333 107 OFFCURVE",
"272 107 CURVE SMOOTH",
"269.333 107 OFFCURVE",
"264.667 104 OFFCURVE",
"258 98 CURVE SMOOTH",
"235.333 76.667 OFFCURVE",
"214.333 60.667 OFFCURVE",
"197 50 CURVE",
"195.667 63.333 OFFCURVE",
"195 77.167 OFFCURVE",
"195 91.5 CURVE SMOOTH",
"195 107 OFFCURVE",
"196 123 OFFCURVE",
"196 140 CURVE SMOOTH",
"196 152 OFFCURVE",
"193 158 OFFCURVE",
"188 158 CURVE SMOOTH",
"182 158 OFFCURVE",
"174 151 OFFCURVE",
"164 137 CURVE SMOOTH",
"126 83 OFFCURVE",
"101.333 50.667 OFFCURVE",
"90 40 CURVE SMOOTH",
"73.333 24.667 OFFCURVE",
"61.667 17 OFFCURVE",
"55 17 CURVE SMOOTH",
"49 17 OFFCURVE",
"46 21.333 OFFCURVE",
"46 30 CURVE SMOOTH",
"46 38.667 OFFCURVE",
"49.667 52 OFFCURVE",
"57 70 CURVE SMOOTH",
"78.333 122.667 OFFCURVE",
"111.667 168.333 OFFCURVE",
"157 207 CURVE SMOOTH",
"175.667 223 OFFCURVE",
"193 231 OFFCURVE",
"209 231 CURVE SMOOTH",
"225.667 231 OFFCURVE",
"234 223.667 OFFCURVE",
"234 209 CURVE SMOOTH",
"234 202.333 OFFCURVE",
"232 195.667 OFFCURVE",
"228 189 CURVE",
"240.667 191 OFFCURVE",
"247 199.667 OFFCURVE",
"247 215 CURVE SMOOTH",
"247 241.667 OFFCURVE",
"218.667 254 OFFCURVE",
"192 254 CURVE SMOOTH",
"151.333 254 OFFCURVE",
"111 228 OFFCURVE",
"71 176 CURVE SMOOTH",
"33.667 126.667 OFFCURVE",
"15 81.667 OFFCURVE",
"15 41 CURVE SMOOTH",
"15 14.333 OFFCURVE",
"25.667 -0.667 OFFCURVE",
"47 -4 CURVE SMOOTH",
"65 -6.667 OFFCURVE",
"88.667 10.667 OFFCURVE",
"118 48 CURVE SMOOTH",
"142.667 80.667 OFFCURVE",
"154.667 98.667 OFFCURVE",
"154 102 CURVE SMOOTH",
"162 76.667 OFFCURVE",
"168.333 55.333 OFFCURVE",
"171 34 CURVE",
"-27 -78 LINE SMOOTH",
"-106 -123 OFFCURVE",
"-162 -163.667 OFFCURVE",
"-196 -201 CURVE SMOOTH",
"-222 -229 OFFCURVE",
"-235 -257.667 OFFCURVE",
"-235 -287 CURVE SMOOTH",
"-235 -312.333 OFFCURVE",
"-224.667 -335.333 OFFCURVE",
"-204 -356 CURVE SMOOTH",
"-174.667 -385.333 OFFCURVE",
"-135.667 -400 OFFCURVE",
"-87 -400 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-149 -372 OFFCURVE",
"-177.667 -362.333 OFFCURVE",
"-197 -343 CURVE SMOOTH",
"-208.333 -330.333 OFFCURVE",
"-214 -317 OFFCURVE",
"-214 -303 CURVE SMOOTH",
"-214 -279 OFFCURVE",
"-201.333 -253.333 OFFCURVE",
"-176 -226 CURVE SMOOTH",
"-128 -174 OFFCURVE",
"-11.333 -93.333 OFFCURVE",
"174 16 CURVE",
"179.333 -13.333 OFFCURVE",
"181 -40.333 OFFCURVE",
"181 -67 CURVE SMOOTH",
"181 -151.667 OFFCURVE",
"156.333 -220.667 OFFCURVE",
"107 -274 CURVE SMOOTH",
"76.333 -307.333 OFFCURVE",
"39.333 -332.667 OFFCURVE",
"-6 -350 CURVE SMOOTH",
"-40 -364.667 OFFCURVE",
"-75 -372 OFFCURVE",
"-111 -372 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 951 14 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0126 28 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 28 74 28 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 28 25 28 41 28 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01284 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 73 181 73 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01277 949 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 947 41 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 258;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"27.667 -3 OFFCURVE",
"47.333 19.333 OFFCURVE",
"50 50 CURVE",
"86.667 96 OFFCURVE",
"113 128.333 OFFCURVE",
"129 147 CURVE",
"126.333 128.333 OFFCURVE",
"124 107 OFFCURVE",
"124 83 CURVE SMOOTH",
"124 37 OFFCURVE",
"132 10 OFFCURVE",
"148 2 CURVE SMOOTH",
"152.667 -0.667 OFFCURVE",
"158.667 -2 OFFCURVE",
"166 -2 CURVE SMOOTH",
"187.333 -2 OFFCURVE",
"213 13.667 OFFCURVE",
"243 45 CURVE SMOOTH",
"265 67.667 OFFCURVE",
"278.667 85 OFFCURVE",
"284 97 CURVE",
"282.667 103 OFFCURVE",
"281 105 OFFCURVE",
"279 103 CURVE SMOOTH",
"258 77 LINE SMOOTH",
"228.667 42.333 OFFCURVE",
"203 24 OFFCURVE",
"187 24 CURVE SMOOTH",
"171.667 24 OFFCURVE",
"164 45.333 OFFCURVE",
"164 88 CURVE SMOOTH",
"164 106 OFFCURVE",
"168 142 OFFCURVE",
"176 196 CURVE SMOOTH",
"177 200 OFFCURVE",
"177 204 OFFCURVE",
"177 207 CURVE SMOOTH",
"177 214 OFFCURVE",
"175 218 OFFCURVE",
"170 218 CURVE SMOOTH",
"159.808 218 OFFCURVE",
"137.633 192.796 OFFCURVE",
"135 177 CURVE",
"52 67 LINE",
"65.333 148.333 OFFCURVE",
"76.667 201.667 OFFCURVE",
"86 227 CURVE",
"256.667 281 OFFCURVE",
"370.333 330 OFFCURVE",
"427 374 CURVE SMOOTH",
"465 402.667 OFFCURVE",
"484 436.333 OFFCURVE",
"484 475 CURVE SMOOTH",
"484 488.333 OFFCURVE",
"481.667 500.667 OFFCURVE",
"477 512 CURVE SMOOTH",
"459 557.333 OFFCURVE",
"423 580 OFFCURVE",
"369 580 CURVE SMOOTH",
"285 580 OFFCURVE",
"203 516.333 OFFCURVE",
"131 399 CURVE SMOOTH",
"100.333 347 OFFCURVE",
"75.333 292.333 OFFCURVE",
"58 235 CURVE",
"24.667 225 OFFCURVE",
"7.667 210.667 OFFCURVE",
"7 192 CURVE",
"5.667 184 OFFCURVE",
"7 180 OFFCURVE",
"11 180 CURVE SMOOTH",
"14.333 180 OFFCURVE",
"16.667 184 OFFCURVE",
"18 192 CURVE SMOOTH",
"19.333 204 OFFCURVE",
"30.333 212.333 OFFCURVE",
"51 217 CURVE",
"44.333 198.333 OFFCURVE",
"35.333 161.333 OFFCURVE",
"26 108 CURVE SMOOTH",
"16.667 54.667 OFFCURVE",
"12.667 18.667 OFFCURVE",
"14 0 CURVE SMOOTH",
"14 -2 OFFCURVE",
"15 -3 OFFCURVE",
"17 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"108.667 292.667 OFFCURVE",
"124.333 332.167 OFFCURVE",
"137 362.5 CURVE SMOOTH",
"149.667 392.833 OFFCURVE",
"159.667 413.667 OFFCURVE",
"167 425 CURVE SMOOTH",
"208.333 493.667 OFFCURVE",
"264.333 534.333 OFFCURVE",
"335 547 CURVE SMOOTH",
"345.667 549.667 OFFCURVE",
"358 551 OFFCURVE",
"372 551 CURVE SMOOTH",
"422.667 551 OFFCURVE",
"454.667 534.333 OFFCURVE",
"468 501 CURVE SMOOTH",
"470.667 495 OFFCURVE",
"472 488.333 OFFCURVE",
"472 481 CURVE SMOOTH",
"472 453.667 OFFCURVE",
"455.167 427 OFFCURVE",
"421.5 401 CURVE SMOOTH",
"387.833 375 OFFCURVE",
"334.333 345 OFFCURVE",
"261 311 CURVE SMOOTH",
"193.667 279.667 OFFCURVE",
"136.667 257.333 OFFCURVE",
"90 244 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01219 950 35 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 19 118 19 134 19 150 19 166 19 182 19 198 19 214 19 230 19 246 19 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 19 22 19 38 19 54 19 70 19 86 19 102 19 118 19 134 19 150 19 166 19 182 19 198 19 214 19 230 19 246 19 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 19 22 19 38 19 54 19 70 19 86 19 102 19 118 19 134 19 150 19 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 19 181 19 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01264 949 68 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01221 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 21 119 21 135 21 151 21 167 21 183 21 199 21 215 21 231 21 247 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 21 23 21 39 21 55 21 71 21 87 21 103 21 119 21 135 21 151 21 167 21 183 21 199 21 215 21 231 21 247 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0127 21 23 21 39 21 55 21 71 21 87 21 103 21 119 21 135 21 151 21 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012166 21 182 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 242;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"72.667 1 OFFCURVE",
"91.333 9.333 OFFCURVE",
"114 26 CURVE SMOOTH",
"144.667 48.667 OFFCURVE",
"165.667 68.667 OFFCURVE",
"177 86 CURVE",
"178.333 89.333 OFFCURVE",
"178 91.333 OFFCURVE",
"176 92 CURVE",
"174.667 93.333 OFFCURVE",
"172.667 93 OFFCURVE",
"170 91 CURVE SMOOTH",
"109 40 LINE SMOOTH",
"95.667 28.667 OFFCURVE",
"85 23 OFFCURVE",
"77 23 CURVE SMOOTH",
"66.333 23 OFFCURVE",
"61 33.333 OFFCURVE",
"61 54 CURVE SMOOTH",
"61 60.667 OFFCURVE",
"61.667 66.667 OFFCURVE",
"63 76 CURVE SMOOTH",
"69.667 132 OFFCURVE",
"74.667 160.667 OFFCURVE",
"78 162 CURVE",
"84.667 162.667 OFFCURVE",
"90.667 170 OFFCURVE",
"96 184 CURVE SMOOTH",
"100.667 194 OFFCURVE",
"103 203.333 OFFCURVE",
"103 212 CURVE SMOOTH",
"103 219.333 OFFCURVE",
"95.333 223 OFFCURVE",
"80 223 CURVE SMOOTH",
"67.333 223 OFFCURVE",
"60.667 220.667 OFFCURVE",
"60 216 CURVE",
"44 159 LINE SMOOTH",
"34.667 124.333 OFFCURVE",
"29.667 99.333 OFFCURVE",
"27 82 CURVE SMOOTH",
"26.333 77.333 OFFCURVE",
"26 72.833 OFFCURVE",
"26 68.5 CURVE SMOOTH",
"26 57 LINE SMOOTH",
"26 19.667 OFFCURVE",
"36.667 1 OFFCURVE",
"58 1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 265 OFFCURVE",
"109 266 OFFCURVE",
"111 266 CURVE SMOOTH",
"116.333 268 OFFCURVE",
"123.333 273.667 OFFCURVE",
"132 283 CURVE SMOOTH",
"140.667 292.333 OFFCURVE",
"145 299 OFFCURVE",
"145 303 CURVE SMOOTH",
"145 305.667 OFFCURVE",
"143 307 OFFCURVE",
"139 307 CURVE SMOOTH",
"123.667 307 OFFCURVE",
"104.333 297.333 OFFCURVE",
"81 278 CURVE SMOOTH",
"80.333 277.333 OFFCURVE",
"80 276.333 OFFCURVE",
"80 275 CURVE SMOOTH",
"80 271 OFFCURVE",
"94 265 OFFCURVE",
"105 265 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01217 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0129 17 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 28 119 28 135 28 151 28 167 28 183 28 199 28 215 28 231 28 247 28 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 28 23 28 39 28 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 28 70 28 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 142;
}
);
note = i;
unicode = 0069;
},
{
glyphname = j;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-47.667 -191 OFFCURVE",
"-12.333 -169 OFFCURVE",
"15 -125 CURVE SMOOTH",
"33.667 -95 OFFCURVE",
"49.667 -50 OFFCURVE",
"63 10 CURVE SMOOTH",
"68.333 34 OFFCURVE",
"73.333 58 OFFCURVE",
"78 82 CURVE SMOOTH",
"92 154 LINE",
"100.667 156 OFFCURVE",
"107.667 166 OFFCURVE",
"113 184 CURVE SMOOTH",
"114.333 190 OFFCURVE",
"115.5 196 OFFCURVE",
"116.5 202 CURVE SMOOTH",
"120 220 LINE",
"121.333 222 OFFCURVE",
"118.5 224.333 OFFCURVE",
"111.5 227 CURVE SMOOTH",
"104.5 229.667 OFFCURVE",
"97.667 231 OFFCURVE",
"91 231 CURVE SMOOTH",
"85 231 OFFCURVE",
"81.667 229.667 OFFCURVE",
"81 227 CURVE SMOOTH",
"67 156.5 LINE SMOOTH",
"62.333 132.833 OFFCURVE",
"57.333 109.333 OFFCURVE",
"52 86 CURVE SMOOTH",
"34.667 10.667 OFFCURVE",
"16.667 -48.333 OFFCURVE",
"-2 -91 CURVE SMOOTH",
"-30 -150 OFFCURVE",
"-60 -180 OFFCURVE",
"-93 -180 CURVE SMOOTH",
"-117 -180 OFFCURVE",
"-127 -137 OFFCURVE",
"-131 -141 CURVE",
"-133.667 -141 OFFCURVE",
"-135.333 -144.333 OFFCURVE",
"-136 -151 CURVE SMOOTH",
"-138.667 -169.667 OFFCURVE",
"-134.667 -181 OFFCURVE",
"-124 -185 CURVE SMOOTH",
"-113.333 -189 OFFCURVE",
"-102.333 -191 OFFCURVE",
"-91 -191 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125 265 OFFCURVE",
"127 266 OFFCURVE",
"129 266 CURVE SMOOTH",
"135 268 OFFCURVE",
"142.333 273.667 OFFCURVE",
"151 283 CURVE SMOOTH",
"159.667 292.333 OFFCURVE",
"164 299 OFFCURVE",
"164 303 CURVE SMOOTH",
"164 305.667 OFFCURVE",
"161.667 307 OFFCURVE",
"157 307 CURVE SMOOTH",
"141.667 307 OFFCURVE",
"122.333 297.333 OFFCURVE",
"99 278 CURVE SMOOTH",
"98.333 277.333 OFFCURVE",
"98 276.333 OFFCURVE",
"98 275 CURVE SMOOTH",
"98 271 OFFCURVE",
"112 265 OFFCURVE",
"123 265 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0129 25 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 138;
}
);
note = j;
unicode = 006A;
},
{
glyphname = k;
lastChange = "2021-05-14 17:38:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{104, 0}";
},
{
name = top;
position = "{104, 953}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"35.667 -3 OFFCURVE",
"37 0 OFFCURVE",
"37 6 CURVE SMOOTH",
"37 10 LINE",
"43 50 OFFCURVE",
"58 87.333 OFFCURVE",
"82 122 CURVE",
"97.333 90.667 OFFCURVE",
"115 62.333 OFFCURVE",
"135 37 CURVE SMOOTH",
"145 23.667 OFFCURVE",
"154.333 14.667 OFFCURVE",
"163 10 CURVE SMOOTH",
"164.333 9.333 OFFCURVE",
"166.833 8.167 OFFCURVE",
"170.5 6.5 CURVE SMOOTH",
"187 0 LINE SMOOTH",
"191.667 -2 OFFCURVE",
"198.667 -3 OFFCURVE",
"208 -3 CURVE SMOOTH",
"233.333 -3 OFFCURVE",
"246 -0.667 OFFCURVE",
"246 4 CURVE SMOOTH",
"246 4.667 OFFCURVE",
"245.333 5 OFFCURVE",
"244 5 CURVE SMOOTH",
"220 10.333 OFFCURVE",
"192.667 27.333 OFFCURVE",
"162 56 CURVE SMOOTH",
"132.667 82.667 OFFCURVE",
"110 109.667 OFFCURVE",
"94 139 CURVE",
"114.667 167 OFFCURVE",
"139.667 194 OFFCURVE",
"169 220 CURVE SMOOTH",
"207 254 OFFCURVE",
"237 271 OFFCURVE",
"259 271 CURVE SMOOTH",
"265 271 OFFCURVE",
"269 269.333 OFFCURVE",
"271 266 CURVE SMOOTH",
"273 262.667 OFFCURVE",
"275.333 262 OFFCURVE",
"278 264 CURVE",
"280.667 264.667 OFFCURVE",
"281 266.667 OFFCURVE",
"279 270 CURVE SMOOTH",
"273 280.667 OFFCURVE",
"260.667 286 OFFCURVE",
"242 286 CURVE SMOOTH",
"206 286 OFFCURVE",
"172.333 270.667 OFFCURVE",
"141 240 CURVE SMOOTH",
"119.667 220 OFFCURVE",
"100.667 193.667 OFFCURVE",
"82 163 CURVE",
"82 164 LINE",
"78 175.333 OFFCURVE",
"74.333 181 OFFCURVE",
"71 181 CURVE SMOOTH",
"67.667 181 OFFCURVE",
"66 177 OFFCURVE",
"66 169 CURVE SMOOTH",
"66 162.333 OFFCURVE",
"68 154 OFFCURVE",
"72 144 CURVE",
"58.667 120 OFFCURVE",
"47.667 96.333 OFFCURVE",
"41 71 CURVE",
"51.667 164.333 OFFCURVE",
"72.333 252.667 OFFCURVE",
"103 338 CURVE SMOOTH",
"141 441.333 OFFCURVE",
"181.333 493.333 OFFCURVE",
"224 494 CURVE SMOOTH",
"246 494.667 OFFCURVE",
"264.333 488.667 OFFCURVE",
"279 476 CURVE SMOOTH",
"280.333 474.667 OFFCURVE",
"282 474 OFFCURVE",
"284 474 CURVE",
"286 472.667 OFFCURVE",
"287.667 472.667 OFFCURVE",
"289 474 CURVE SMOOTH",
"289.667 474.667 OFFCURVE",
"289.667 476.667 OFFCURVE",
"289 480 CURVE",
"285 486 LINE SMOOTH",
"271.667 505.333 OFFCURVE",
"254.333 515 OFFCURVE",
"233 515 CURVE SMOOTH",
"218.333 515 OFFCURVE",
"203.667 511 OFFCURVE",
"189 503 CURVE SMOOTH",
"133.667 473.667 OFFCURVE",
"91.667 411.667 OFFCURVE",
"63 317 CURVE SMOOTH",
"47 263.667 OFFCURVE",
"33.333 205 OFFCURVE",
"20 141 CURVE SMOOTH",
"8.667 82.333 OFFCURVE",
"3 42.667 OFFCURVE",
"3 22 CURVE",
"17 9 LINE SMOOTH",
"25 1 OFFCURVE",
"30.333 -3 OFFCURVE",
"33 -3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01275 948 9 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 207;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
lastChange = "2021-05-18 10:43:26 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{83, 0}";
},
{
name = center;
position = "{83, 477}";
},
{
name = top;
position = "{249, 521}";
},
{
name = topright;
position = "{321, 502}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"95.333 -5 OFFCURVE",
"118.333 2.667 OFFCURVE",
"147 18 CURVE SMOOTH",
"171.667 31.333 OFFCURVE",
"190 45 OFFCURVE",
"202 59 CURVE SMOOTH",
"206 63.667 OFFCURVE",
"208 69.667 OFFCURVE",
"208 77 CURVE SMOOTH",
"208 79.667 OFFCURVE",
"207.333 81 OFFCURVE",
"206 81 CURVE SMOOTH",
"203.333 81 OFFCURVE",
"199.667 78 OFFCURVE",
"195 72 CURVE SMOOTH",
"183 56.667 OFFCURVE",
"166.333 43 OFFCURVE",
"145 31 CURVE SMOOTH",
"123.667 19 OFFCURVE",
"105.333 13 OFFCURVE",
"90 13 CURVE SMOOTH",
"70 13 OFFCURVE",
"60 27.667 OFFCURVE",
"60 57 CURVE SMOOTH",
"60 87.667 OFFCURVE",
"67.667 129 OFFCURVE",
"83 181 CURVE",
"143 241 OFFCURVE",
"184.333 285.667 OFFCURVE",
"211 319 CURVE SMOOTH",
"258 381 OFFCURVE",
"282 437 OFFCURVE",
"282 487 CURVE SMOOTH",
"282 510 OFFCURVE",
"271 521 OFFCURVE",
"249 521 CURVE SMOOTH",
"233 521 OFFCURVE",
"217.667 515 OFFCURVE",
"203 503 CURVE SMOOTH",
"137 447.667 OFFCURVE",
"84.333 337 OFFCURVE",
"45 171 CURVE",
"33 157.667 OFFCURVE",
"27 148.333 OFFCURVE",
"27 143 CURVE SMOOTH",
"27 140 OFFCURVE",
"29 138 OFFCURVE",
"34 138 CURVE SMOOTH",
"35 138 OFFCURVE",
"36 138 OFFCURVE",
"37 138 CURVE",
"31 108.667 OFFCURVE",
"28 84.333 OFFCURVE",
"28 65 CURVE SMOOTH",
"28 18.333 OFFCURVE",
"44.667 -5 OFFCURVE",
"78 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"96.667 243 OFFCURVE",
"115.333 291.333 OFFCURVE",
"142 350 CURVE SMOOTH",
"171.333 414 OFFCURVE",
"195.333 455.333 OFFCURVE",
"214 478 CURVE SMOOTH",
"228.667 496.667 OFFCURVE",
"241.667 506 OFFCURVE",
"253 506 CURVE SMOOTH",
"262 506 OFFCURVE",
"267 498 OFFCURVE",
"267 482 CURVE SMOOTH",
"267 481 OFFCURVE",
"267 480 OFFCURVE",
"267 479 CURVE SMOOTH",
"265.667 443.667 OFFCURVE",
"241.667 393.667 OFFCURVE",
"195 329 CURVE SMOOTH",
"158.333 278.333 OFFCURVE",
"122 236.333 OFFCURVE",
"86 203 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 951 25 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 7 181 7 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01227 25 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01217 23 35 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01227 23 35 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01247 23 35 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 166;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"36 -16 OFFCURVE",
"48.333 -5.667 OFFCURVE",
"55 15 CURVE SMOOTH",
"59 27.667 OFFCURVE",
"77.333 55.667 OFFCURVE",
"110 99 CURVE SMOOTH",
"178 187 LINE",
"178 168.333 OFFCURVE",
"174.667 135.333 OFFCURVE",
"168 90 CURVE SMOOTH",
"161.333 44.667 OFFCURVE",
"155.667 13.333 OFFCURVE",
"149 -4 CURVE",
"147.667 -5.333 OFFCURVE",
"148.333 -6 OFFCURVE",
"151 -6 CURVE SMOOTH",
"158.333 -6 OFFCURVE",
"168.667 0 OFFCURVE",
"182 12 CURVE SMOOTH",
"196 24.667 OFFCURVE",
"203.333 39 OFFCURVE",
"204 55 CURVE",
"226.667 87 OFFCURVE",
"256 121 OFFCURVE",
"292 157 CURVE",
"285.333 121.667 OFFCURVE",
"282 93.667 OFFCURVE",
"282 73 CURVE SMOOTH",
"282 35 OFFCURVE",
"293.333 11 OFFCURVE",
"316 1 CURVE SMOOTH",
"321.333 -1.667 OFFCURVE",
"328 -3 OFFCURVE",
"336 -3 CURVE SMOOTH",
"361.333 -3 OFFCURVE",
"392.333 13.667 OFFCURVE",
"429 47 CURVE SMOOTH",
"457 73 OFFCURVE",
"473.333 91.667 OFFCURVE",
"478 103 CURVE",
"477 108 OFFCURVE",
"475 110 OFFCURVE",
"473 110 CURVE SMOOTH",
"472 110 OFFCURVE",
"472 110 OFFCURVE",
"471 109 CURVE",
"463 99.667 OFFCURVE",
"455.333 90.333 OFFCURVE",
"446 81 CURVE SMOOTH",
"428.667 63 OFFCURVE",
"413 49.333 OFFCURVE",
"399 40 CURVE SMOOTH",
"383.667 29.333 OFFCURVE",
"369.667 24 OFFCURVE",
"357 24 CURVE SMOOTH",
"333.667 24 OFFCURVE",
"322 40.667 OFFCURVE",
"322 74 CURVE SMOOTH",
"322 80.667 OFFCURVE",
"323.667 95 OFFCURVE",
"327 117 CURVE SMOOTH",
"330.333 139 OFFCURVE",
"335.333 169 OFFCURVE",
"342 207 CURVE SMOOTH",
"342.667 210.333 OFFCURVE",
"343 214.333 OFFCURVE",
"343 219 CURVE SMOOTH",
"343 227 OFFCURVE",
"340.667 231 OFFCURVE",
"336 231 CURVE SMOOTH",
"325.333 231 OFFCURVE",
"304.333 206.667 OFFCURVE",
"299 188 CURVE",
"256.333 133.333 OFFCURVE",
"225 95 OFFCURVE",
"205 73 CURVE",
"210.333 103.667 OFFCURVE",
"213 138 OFFCURVE",
"213 176 CURVE SMOOTH",
"213 206.667 OFFCURVE",
"207.333 222 OFFCURVE",
"196 222 CURVE SMOOTH",
"186 222 OFFCURVE",
"174 210.667 OFFCURVE",
"160 188 CURVE SMOOTH",
"118.667 120.667 OFFCURVE",
"86 76 OFFCURVE",
"62 54 CURVE",
"62.667 55.333 OFFCURVE",
"64.167 62.167 OFFCURVE",
"66.5 74.5 CURVE SMOOTH",
"68.833 86.833 OFFCURVE",
"71.667 104.667 OFFCURVE",
"75 128 CURVE SMOOTH",
"81.667 178 OFFCURVE",
"87.667 209 OFFCURVE",
"93 221 CURVE SMOOTH",
"93.667 223 OFFCURVE",
"94 225.333 OFFCURVE",
"94 228 CURVE SMOOTH",
"94 233.333 OFFCURVE",
"90.333 236 OFFCURVE",
"83 236 CURVE SMOOTH",
"65.151 236 OFFCURVE",
"42 218.883 OFFCURVE",
"42 201 CURVE",
"42.667 197.667 OFFCURVE",
"43 193.833 OFFCURVE",
"43 189.5 CURVE SMOOTH",
"43 176 LINE SMOOTH",
"43 138.667 OFFCURVE",
"32.667 77.667 OFFCURVE",
"12 -7 CURVE SMOOTH",
"10.667 -13 OFFCURVE",
"12.667 -16 OFFCURVE",
"18 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01256 36 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 950 8 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 8 186 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01210 8 70 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 56 22 56 38 56 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 56 69 56 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01224 36 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01250 36 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01258 36 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01272 949 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01210 63 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01224 63 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01250 63 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01258 63 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 402;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2021-05-11 10:24:12 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{96, 0}";
},
{
name = top;
position = "{142, 238}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"226 -26 OFFCURVE",
"244 -18 OFFCURVE",
"262 0 CURVE SMOOTH",
"268 6 OFFCURVE",
"271.333 11.667 OFFCURVE",
"272 17 CURVE SMOOTH",
"273.333 22.333 OFFCURVE",
"273 25 OFFCURVE",
"271 25 CURVE SMOOTH",
"271.667 25 OFFCURVE",
"265 19 OFFCURVE",
"251 7 CURVE SMOOTH",
"236 -6 OFFCURVE",
"222 -13 OFFCURVE",
"210 -13 CURVE SMOOTH",
"199 -13 OFFCURVE",
"194 -1 OFFCURVE",
"194 23 CURVE SMOOTH",
"194 47.667 OFFCURVE",
"199 81 OFFCURVE",
"209 123 CURVE SMOOTH",
"213 139.667 OFFCURVE",
"220 162.667 OFFCURVE",
"230 192 CURVE SMOOTH",
"236.667 210 OFFCURVE",
"239.333 222 OFFCURVE",
"238 228 CURVE SMOOTH",
"237.333 234.667 OFFCURVE",
"229 238 OFFCURVE",
"213 238 CURVE SMOOTH",
"203 238 OFFCURVE",
"196.667 235.667 OFFCURVE",
"194 231 CURVE SMOOTH",
"149.333 161 OFFCURVE",
"107 107.667 OFFCURVE",
"67 71 CURVE",
"82.5 144 LINE SMOOTH",
"87 167 OFFCURVE",
"92 190.333 OFFCURVE",
"96 213 CURVE SMOOTH",
"98 224.333 OFFCURVE",
"94 230 OFFCURVE",
"84 230 CURVE SMOOTH",
"67 230 OFFCURVE",
"45 212 OFFCURVE",
"45 195 CURVE SMOOTH",
"45 187 OFFCURVE",
"47 179 OFFCURVE",
"47 169 CURVE SMOOTH",
"47 143 OFFCURVE",
"43 111 OFFCURVE",
"33 72 CURVE SMOOTH",
"17 10 LINE SMOOTH",
"15 4 OFFCURVE",
"17 1 OFFCURVE",
"23 1 CURVE SMOOTH",
"39.667 1 OFFCURVE",
"52 11.667 OFFCURVE",
"60 33 CURVE SMOOTH",
"64 43 OFFCURVE",
"82 69 OFFCURVE",
"116 108 CURVE SMOOTH",
"186 188 LINE",
"170 131 LINE SMOOTH",
"160 95 OFFCURVE",
"155 65 OFFCURVE",
"155 41 CURVE SMOOTH",
"155 -4 OFFCURVE",
"173 -26 OFFCURVE",
"207 -26 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 950 8 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 8 186 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01211 8 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 253;
}
);
note = n;
unicode = 006E;
},
{
glyphname = o;
lastChange = "2021-05-11 10:54:41 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{81, -5}";
},
{
name = center;
position = "{118, 137}";
},
{
name = ogonek;
position = "{85, -5}";
},
{
name = top;
position = "{146, 253}";
},
{
name = topright;
position = "{129, 233}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"115 -12 OFFCURVE",
"142.333 10.333 OFFCURVE",
"167 55 CURVE SMOOTH",
"194.333 102.333 OFFCURVE",
"206.333 138.667 OFFCURVE",
"203 164 CURVE",
"209 161 OFFCURVE",
"217 160 OFFCURVE",
"228 160 CURVE SMOOTH",
"232 160 OFFCURVE",
"236 160 OFFCURVE",
"240 160 CURVE SMOOTH",
"257.333 161.333 OFFCURVE",
"271.667 164.333 OFFCURVE",
"285 171 CURVE SMOOTH",
"291 174.333 OFFCURVE",
"294.333 177.333 OFFCURVE",
"295 180 CURVE SMOOTH",
"296.333 183.333 OFFCURVE",
"295.667 185 OFFCURVE",
"293 185 CURVE SMOOTH",
"287.667 185 OFFCURVE",
"279.667 184.333 OFFCURVE",
"269 183 CURVE SMOOTH",
"258.333 181.667 OFFCURVE",
"250.333 181 OFFCURVE",
"245 181 CURVE SMOOTH",
"228.333 181 OFFCURVE",
"215.667 186.333 OFFCURVE",
"207 197 CURVE",
"204.323 223.774 OFFCURVE",
"172.058 253 OFFCURVE",
"146 253 CURVE SMOOTH",
"138.667 253 OFFCURVE",
"133 250.667 OFFCURVE",
"129 246 CURVE",
"93 242.667 OFFCURVE",
"62.667 203.667 OFFCURVE",
"38 129 CURVE SMOOTH",
"31.333 109 OFFCURVE",
"28 89.333 OFFCURVE",
"28 70 CURVE SMOOTH",
"28 22 OFFCURVE",
"51.667 -12 OFFCURVE",
"85 -12 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"73.667 8 OFFCURVE",
"65 22.333 OFFCURVE",
"65 51 CURVE SMOOTH",
"65 74.333 OFFCURVE",
"72.667 105 OFFCURVE",
"88 143 CURVE SMOOTH",
"104.667 183.667 OFFCURVE",
"122 206.667 OFFCURVE",
"140 212 CURVE",
"144 187.333 OFFCURVE",
"158.333 173 OFFCURVE",
"183 169 CURVE",
"184.333 159.667 OFFCURVE",
"181.667 142.667 OFFCURVE",
"175 120 CURVE SMOOTH",
"168.333 93.333 OFFCURVE",
"157.667 72.333 OFFCURVE",
"147 55 CURVE SMOOTH",
"127 23.667 OFFCURVE",
"108.333 8 OFFCURVE",
"91 8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 950 16 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 38 181 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01240 948 13 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 235;
}
);
note = o;
unicode = 006F;
},
{
glyphname = p;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"27 -247 OFFCURVE",
"29 -246 OFFCURVE",
"29 -244 CURVE SMOOTH",
"29 -240.667 OFFCURVE",
"25.667 -238.667 OFFCURVE",
"19 -238 CURVE SMOOTH",
"1.667 -234.667 OFFCURVE",
"-7 -221 OFFCURVE",
"-7 -197 CURVE SMOOTH",
"-7 -194.333 OFFCURVE",
"-5 -178.333 OFFCURVE",
"-1 -149 CURVE SMOOTH",
"3.667 -112.333 OFFCURVE",
"23.667 -40 OFFCURVE",
"59 68 CURVE SMOOTH",
"92.333 170.667 OFFCURVE",
"110 221.333 OFFCURVE",
"112 220 CURVE",
"123.333 215.333 OFFCURVE",
"134.667 201.333 OFFCURVE",
"146 178 CURVE SMOOTH",
"156.667 156 OFFCURVE",
"162 137.667 OFFCURVE",
"162 123 CURVE",
"142.667 107 OFFCURVE",
"128.167 94.833 OFFCURVE",
"118.5 86.5 CURVE SMOOTH",
"103 73 LINE",
"87 53.667 OFFCURVE",
"79 35.667 OFFCURVE",
"79 19 CURVE SMOOTH",
"79 4 OFFCURVE",
"86 -4 OFFCURVE",
"101 -4 CURVE SMOOTH",
"106 -4 OFFCURVE",
"111 -3 OFFCURVE",
"117 -2 CURVE SMOOTH",
"167 10.667 OFFCURVE",
"193.667 52.333 OFFCURVE",
"197 123 CURVE",
"239 149 LINE SMOOTH",
"243.667 151.667 OFFCURVE",
"247 155 OFFCURVE",
"249 159 CURVE SMOOTH",
"251.667 163.667 OFFCURVE",
"251.333 166 OFFCURVE",
"248 166 CURVE SMOOTH",
"250 166 OFFCURVE",
"241.667 159.667 OFFCURVE",
"223 147 CURVE SMOOTH",
"212 140 OFFCURVE",
"205 136 OFFCURVE",
"200 136 CURVE SMOOTH",
"197 136 OFFCURVE",
"196 138 OFFCURVE",
"196 141 CURVE",
"188.667 189 OFFCURVE",
"165 225.667 OFFCURVE",
"125 251 CURVE",
"128.333 261.667 OFFCURVE",
"131.5 272.333 OFFCURVE",
"134.5 283 CURVE SMOOTH",
"144 315 LINE SMOOTH",
"146.667 325.667 OFFCURVE",
"132.667 342 OFFCURVE",
"106 350 CURVE SMOOTH",
"97.333 352.667 OFFCURVE",
"93 351.667 OFFCURVE",
"93 347 CURVE",
"96 344 LINE SMOOTH",
"104 333 OFFCURVE",
"108 325 OFFCURVE",
"108 318 CURVE SMOOTH",
"108 318 OFFCURVE",
"108 317 OFFCURVE",
"108 317 CURVE SMOOTH",
"104.667 296.333 OFFCURVE",
"99.333 277.667 OFFCURVE",
"92 261 CURVE",
"80 257.667 OFFCURVE",
"72.333 250 OFFCURVE",
"69 238 CURVE SMOOTH",
"68.333 236 OFFCURVE",
"72.333 232.667 OFFCURVE",
"81 228 CURVE",
"18.333 52.667 OFFCURVE",
"-20.667 -70 OFFCURVE",
"-36 -140 CURVE SMOOTH",
"-37.333 -148 OFFCURVE",
"-38 -155.667 OFFCURVE",
"-38 -165 CURVE SMOOTH",
"-38 -205 OFFCURVE",
"-20 -241 OFFCURVE",
"8 -245 CURVE SMOOTH",
"14 -247 OFFCURVE",
"19 -247 OFFCURVE",
"23 -247 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 17 OFFCURVE",
"101 21 OFFCURVE",
"101 29 CURVE SMOOTH",
"101 35 OFFCURVE",
"103.667 42.667 OFFCURVE",
"109 52 CURVE SMOOTH",
"118.333 66.667 OFFCURVE",
"135.333 85 OFFCURVE",
"162 109 CURVE",
"163 105 OFFCURVE",
"163 101 OFFCURVE",
"163 97 CURVE SMOOTH",
"163 87 OFFCURVE",
"161 74 OFFCURVE",
"156 60 CURVE SMOOTH",
"146 31.333 OFFCURVE",
"131.667 17 OFFCURVE",
"113 17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 951 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0121 952 5 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 20 181 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01261 5 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
note = p;
unicode = 0070;
},
{
glyphname = q;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"197.667 -224.333 OFFCURVE",
"207.333 -216 OFFCURVE",
"214 -198 CURVE SMOOTH",
"215 -194 OFFCURVE",
"216 -191 OFFCURVE",
"216 -189 CURVE SMOOTH",
"216 -189 OFFCURVE",
"216 -188 OFFCURVE",
"216 -188 CURVE",
"216 -186.667 OFFCURVE",
"215 -186.333 OFFCURVE",
"213 -187 CURVE SMOOTH",
"211 -188.333 OFFCURVE",
"209 -190.333 OFFCURVE",
"207 -193 CURVE SMOOTH",
"201 -203.667 OFFCURVE",
"191 -209 OFFCURVE",
"177 -209 CURVE SMOOTH",
"171 -209 OFFCURVE",
"165.333 -207.333 OFFCURVE",
"160 -204 CURVE SMOOTH",
"140.667 -192.667 OFFCURVE",
"131 -167.333 OFFCURVE",
"131 -128 CURVE SMOOTH",
"131 -69.333 OFFCURVE",
"152.667 18 OFFCURVE",
"196 134 CURVE",
"197.333 149.333 OFFCURVE",
"194 157 OFFCURVE",
"186 157 CURVE SMOOTH",
"178.667 157 OFFCURVE",
"170.333 150.333 OFFCURVE",
"161 137 CURVE SMOOTH",
"123 83 OFFCURVE",
"98.333 50.667 OFFCURVE",
"87 40 CURVE SMOOTH",
"70.333 24.667 OFFCURVE",
"58.667 17 OFFCURVE",
"52 17 CURVE SMOOTH",
"46 17 OFFCURVE",
"43 21.333 OFFCURVE",
"43 30 CURVE SMOOTH",
"43 40.667 OFFCURVE",
"46.333 54 OFFCURVE",
"53 70 CURVE SMOOTH",
"74.333 122 OFFCURVE",
"108 167.667 OFFCURVE",
"154 207 CURVE SMOOTH",
"172.667 223 OFFCURVE",
"190 231 OFFCURVE",
"206 231 CURVE SMOOTH",
"222.667 231 OFFCURVE",
"231 223.667 OFFCURVE",
"231 209 CURVE SMOOTH",
"231 202.333 OFFCURVE",
"229 195.667 OFFCURVE",
"225 189 CURVE",
"237.667 191 OFFCURVE",
"244 199.667 OFFCURVE",
"244 215 CURVE SMOOTH",
"244 241.667 OFFCURVE",
"214.667 254 OFFCURVE",
"188 254 CURVE SMOOTH",
"146.667 254 OFFCURVE",
"106.667 228 OFFCURVE",
"68 176 CURVE SMOOTH",
"30.667 126.667 OFFCURVE",
"12 81.667 OFFCURVE",
"12 41 CURVE SMOOTH",
"12 14.333 OFFCURVE",
"22.667 -0.667 OFFCURVE",
"44 -4 CURVE SMOOTH",
"62 -6.667 OFFCURVE",
"85.333 10.667 OFFCURVE",
"114 48 CURVE SMOOTH",
"139.333 81.333 OFFCURVE",
"151.667 99.333 OFFCURVE",
"151 102 CURVE",
"117 16 OFFCURVE",
"101 -56 OFFCURVE",
"101 -114 CURVE SMOOTH",
"101 -139 OFFCURVE",
"107 -161 OFFCURVE",
"119 -180 CURVE SMOOTH",
"134.333 -206 OFFCURVE",
"156.333 -220.333 OFFCURVE",
"185 -223 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 952 50 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 24 22 24 38 24 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 24 69 24 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01242 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01254 947 6 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 232;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2021-05-11 10:20:01 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{17, -2}";
},
{
name = top;
position = "{83, 249}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"28.667 -2 OFFCURVE",
"31.667 0.667 OFFCURVE",
"33 6 CURVE SMOOTH",
"44.333 49.333 OFFCURVE",
"61 87.667 OFFCURVE",
"83 121 CURVE SMOOTH",
"122.333 180.333 OFFCURVE",
"155.333 210 OFFCURVE",
"182 210 CURVE SMOOTH",
"192.667 210 OFFCURVE",
"201 204 OFFCURVE",
"207 192 CURVE SMOOTH",
"210.333 186.667 OFFCURVE",
"212.667 184 OFFCURVE",
"214 184 CURVE SMOOTH",
"220.667 184 OFFCURVE",
"220.333 192.667 OFFCURVE",
"213 210 CURVE SMOOTH",
"206 228 OFFCURVE",
"194 237 OFFCURVE",
"179 237 CURVE SMOOTH",
"166 237 OFFCURVE",
"147 224 OFFCURVE",
"121 197 CURVE SMOOTH",
"97.667 171.667 OFFCURVE",
"77.667 144.667 OFFCURVE",
"61 116 CURVE",
"67.667 137.333 OFFCURVE",
"73 157 OFFCURVE",
"78.5 176 CURVE SMOOTH",
"93 228 LINE SMOOTH",
"96 238 OFFCURVE",
"91.333 243 OFFCURVE",
"80 243 CURVE SMOOTH",
"62.667 243 OFFCURVE",
"42 231 OFFCURVE",
"41 216 CURVE SMOOTH",
"38 179 LINE SMOOTH",
"37 162 OFFCURVE",
"34.333 141.333 OFFCURVE",
"31 116 CURVE SMOOTH",
"24.333 60 OFFCURVE",
"19 25.333 OFFCURVE",
"15 8 CURVE SMOOTH",
"14.333 1.333 OFFCURVE",
"17.333 -2 OFFCURVE",
"24 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01224 8 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 165;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2021-05-11 10:20:20 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{54, -13}";
},
{
name = top;
position = "{136, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"40.333 -27 OFFCURVE",
"62.333 -23.667 OFFCURVE",
"83 -17 CURVE SMOOTH",
"105.667 -10.333 OFFCURVE",
"119.667 -2.333 OFFCURVE",
"125 7 CURVE",
"189 45 LINE",
"206.333 60.333 OFFCURVE",
"214 68.667 OFFCURVE",
"212 70 CURVE",
"176 48.667 OFFCURVE",
"150.333 34 OFFCURVE",
"133 26 CURVE",
"136.333 34 OFFCURVE",
"138 40.667 OFFCURVE",
"138 46 CURVE SMOOTH",
"138 57.333 OFFCURVE",
"128.333 74.333 OFFCURVE",
"109 97 CURVE SMOOTH",
"89.667 120.333 OFFCURVE",
"80 139.333 OFFCURVE",
"80 154 CURVE SMOOTH",
"80 170.667 OFFCURVE",
"88.667 188.333 OFFCURVE",
"106 207 CURVE SMOOTH",
"124 225 OFFCURVE",
"141.333 234 OFFCURVE",
"158 234 CURVE SMOOTH",
"169.333 234 OFFCURVE",
"175.667 228.333 OFFCURVE",
"177 217 CURVE",
"179 213 OFFCURVE",
"180 211 OFFCURVE",
"182 211 CURVE SMOOTH",
"185 211 OFFCURVE",
"187 217 OFFCURVE",
"187 222 CURVE SMOOTH",
"187 239.333 OFFCURVE",
"164 257 OFFCURVE",
"136 257 CURVE SMOOTH",
"102.667 257 OFFCURVE",
"74.667 237.667 OFFCURVE",
"52 199 CURVE SMOOTH",
"47.333 190.333 OFFCURVE",
"45 181 OFFCURVE",
"45 171 CURVE SMOOTH",
"45 141.667 OFFCURVE",
"63.333 111 OFFCURVE",
"100 79 CURVE SMOOTH",
"115.333 65.667 OFFCURVE",
"123 53.667 OFFCURVE",
"123 43 CURVE SMOOTH",
"123 36.333 OFFCURVE",
"120.333 28.667 OFFCURVE",
"115 20 CURVE",
"73.667 14.667 OFFCURVE",
"39 11.333 OFFCURVE",
"11 10 CURVE SMOOTH",
"-10.333 8.667 OFFCURVE",
"-21 1.667 OFFCURVE",
"-21 -11 CURVE SMOOTH",
"-21 -21.667 OFFCURVE",
"-8.333 -27 OFFCURVE",
"17 -27 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 951 20 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 38 181 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01211 949 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 947 34 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 198;
}
);
note = s;
unicode = 0073;
},
{
glyphname = t;
lastChange = "2021-05-11 10:22:52 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{84, 0}";
},
{
name = center;
position = "{84, 137}";
},
{
name = top;
position = "{149, 384}";
},
{
name = topright;
position = "{227, 369}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"98 -5 OFFCURVE",
"127 8 OFFCURVE",
"163 34 CURVE SMOOTH",
"197.667 58 OFFCURVE",
"215 74.667 OFFCURVE",
"215 84 CURVE",
"214.333 86.667 OFFCURVE",
"213.333 88 OFFCURVE",
"212 88 CURVE SMOOTH",
"208.667 88 OFFCURVE",
"200.333 82.333 OFFCURVE",
"187 71 CURVE SMOOTH",
"169.667 57.667 OFFCURVE",
"158 49.333 OFFCURVE",
"150 44 CURVE SMOOTH",
"116.667 26 OFFCURVE",
"94.333 17 OFFCURVE",
"83 17 CURVE SMOOTH",
"68.333 17 OFFCURVE",
"61 27 OFFCURVE",
"61 47 CURVE SMOOTH",
"61 56.333 OFFCURVE",
"67 85.667 OFFCURVE",
"79 135 CURVE SMOOTH",
"92.333 190.333 OFFCURVE",
"102.667 218 OFFCURVE",
"110 218 CURVE",
"129 221 LINE SMOOTH",
"139 223 OFFCURVE",
"152.667 223.667 OFFCURVE",
"170 225 CURVE SMOOTH",
"202 227.667 OFFCURVE",
"218 230.333 OFFCURVE",
"218 233 CURVE SMOOTH",
"217 239 OFFCURVE",
"198 242 OFFCURVE",
"160 242 CURVE SMOOTH",
"147 242 OFFCURVE",
"133 242 OFFCURVE",
"116 241 CURVE",
"165 339 LINE SMOOTH",
"165.667 340.333 OFFCURVE",
"166 342.333 OFFCURVE",
"166 345 CURVE SMOOTH",
"166 361 OFFCURVE",
"148.667 384 OFFCURVE",
"138 384 CURVE SMOOTH",
"133.333 384 OFFCURVE",
"130.667 382 OFFCURVE",
"130 378 CURVE",
"110 322 OFFCURVE",
"94.667 275.667 OFFCURVE",
"84 241 CURVE",
"37.333 237.667 OFFCURVE",
"11.667 235 OFFCURVE",
"7 233 CURVE SMOOTH",
"1 231 OFFCURVE",
"-2 226 OFFCURVE",
"-2 218 CURVE SMOOTH",
"-2 211 OFFCURVE",
"-1 208 OFFCURVE",
"2 208 CURVE SMOOTH",
"2 208 OFFCURVE",
"3 208 OFFCURVE",
"3 208 CURVE",
"37.667 214 OFFCURVE",
"62.333 217 OFFCURVE",
"77 217 CURVE",
"72 204 LINE SMOOTH",
"69 195 OFFCURVE",
"64.667 181.333 OFFCURVE",
"58 164 CURVE SMOOTH",
"43.333 122.667 OFFCURVE",
"34.667 94 OFFCURVE",
"32 78 CURVE SMOOTH",
"29.333 60.667 OFFCURVE",
"27 47.667 OFFCURVE",
"27 37 CURVE SMOOTH",
"27 20.333 OFFCURVE",
"31 9 OFFCURVE",
"39 3 CURVE SMOOTH",
"45 -1 OFFCURVE",
"57 -5 OFFCURVE",
"75 -5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 951 28 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 9 22 9 38 9 54 9 70 9 86 9 102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 9 22 9 38 9 54 9 70 9 86 9 102 9 118 9 134 9 150 9 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 9 181 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 167;
}
);
note = t;
unicode = 0074;
},
{
glyphname = u;
lastChange = "2021-05-11 11:18:30 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{101, 0}";
},
{
name = ogonek;
position = "{244, 5}";
},
{
name = top;
position = "{194, 240}";
},
{
name = topright;
position = "{184, 159}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"78.333 -6.667 OFFCURVE",
"102.667 13 OFFCURVE",
"134 55 CURVE SMOOTH",
"161.333 93 OFFCURVE",
"174.667 113.333 OFFCURVE",
"174 116 CURVE",
"171.333 113.333 OFFCURVE",
"173 95.667 OFFCURVE",
"179 63 CURVE SMOOTH",
"185.667 27 OFFCURVE",
"198 6 OFFCURVE",
"216 0 CURVE SMOOTH",
"222 -2 OFFCURVE",
"228 -3 OFFCURVE",
"234 -3 CURVE SMOOTH",
"255.333 -3 OFFCURVE",
"279 8 OFFCURVE",
"305 30 CURVE SMOOTH",
"325.667 47.333 OFFCURVE",
"337.333 59.667 OFFCURVE",
"340 67 CURVE",
"338 71 OFFCURVE",
"336 72.333 OFFCURVE",
"334 71 CURVE",
"316 52 LINE SMOOTH",
"293 28 OFFCURVE",
"272.333 17 OFFCURVE",
"255 17 CURVE SMOOTH",
"228 17 OFFCURVE",
"214 51 OFFCURVE",
"214 120 CURVE SMOOTH",
"214 130 OFFCURVE",
"215 142 OFFCURVE",
"215 154 CURVE SMOOTH",
"215 165 OFFCURVE",
"213 171 OFFCURVE",
"208 171 CURVE SMOOTH",
"202 171 OFFCURVE",
"194 164.333 OFFCURVE",
"184 151 CURVE SMOOTH",
"136 82.333 OFFCURVE",
"109.333 45.333 OFFCURVE",
"104 40 CURVE SMOOTH",
"89.333 25.333 OFFCURVE",
"77 18 OFFCURVE",
"67 18 CURVE SMOOTH",
"58.333 18 OFFCURVE",
"54 24.667 OFFCURVE",
"54 38 CURVE SMOOTH",
"54 48 OFFCURVE",
"56.333 59 OFFCURVE",
"61 71 CURVE SMOOTH",
"69.667 96.333 OFFCURVE",
"82 123.333 OFFCURVE",
"98 152 CURVE SMOOTH",
"116.667 186.667 OFFCURVE",
"135 212 OFFCURVE",
"151 228 CURVE",
"152 230 LINE",
"152 236.667 OFFCURVE",
"141.667 240 OFFCURVE",
"121 240 CURVE SMOOTH",
"107.667 240 OFFCURVE",
"99.333 237.333 OFFCURVE",
"96 232 CURVE SMOOTH",
"47.333 159.333 OFFCURVE",
"23 98.333 OFFCURVE",
"23 49 CURVE SMOOTH",
"23 17 OFFCURVE",
"35.667 -0.667 OFFCURVE",
"61 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01241 16 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 41 22 41 38 41 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 41 69 41 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01243 948 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 281;
}
);
note = u;
unicode = 0075;
},
{
glyphname = v;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"84.333 -2 OFFCURVE",
"121.667 21.667 OFFCURVE",
"165 69 CURVE SMOOTH",
"182.333 87.667 OFFCURVE",
"197.667 108.667 OFFCURVE",
"211 134 CURVE SMOOTH",
"222.333 156.667 OFFCURVE",
"228 172.667 OFFCURVE",
"228 182 CURVE",
"236 176 OFFCURVE",
"245 173 OFFCURVE",
"255 173 CURVE SMOOTH",
"261 173 OFFCURVE",
"267 174 OFFCURVE",
"273 176 CURVE SMOOTH",
"281.667 178.667 OFFCURVE",
"286 183.667 OFFCURVE",
"286 191 CURVE SMOOTH",
"286 193.667 OFFCURVE",
"284 195.667 OFFCURVE",
"280 197 CURVE",
"274 191 OFFCURVE",
"266.333 188 OFFCURVE",
"257 188 CURVE SMOOTH",
"249 188 OFFCURVE",
"240.333 190.667 OFFCURVE",
"231 196 CURVE",
"232.333 202.667 OFFCURVE",
"233 212.667 OFFCURVE",
"233 226 CURVE SMOOTH",
"233 256 OFFCURVE",
"225 270 OFFCURVE",
"210 270 CURVE SMOOTH",
"199 270 OFFCURVE",
"193 263 OFFCURVE",
"193 243 CURVE SMOOTH",
"193 223.667 OFFCURVE",
"200.333 206.333 OFFCURVE",
"215 191 CURVE",
"212.333 164.333 OFFCURVE",
"192 128 OFFCURVE",
"154 82 CURVE SMOOTH",
"120 41.333 OFFCURVE",
"93.667 21 OFFCURVE",
"75 21 CURVE SMOOTH",
"67 21 OFFCURVE",
"63 27 OFFCURVE",
"63 39 CURVE SMOOTH",
"63 55 OFFCURVE",
"69.333 87.333 OFFCURVE",
"82 136 CURVE SMOOTH",
"94.667 186 OFFCURVE",
"101 216.667 OFFCURVE",
"101 228 CURVE SMOOTH",
"101 235.333 OFFCURVE",
"90 239 OFFCURVE",
"68 239 CURVE SMOOTH",
"58.667 239 OFFCURVE",
"53 237.333 OFFCURVE",
"51 234 CURVE SMOOTH",
"37 214 OFFCURVE",
"33 203 OFFCURVE",
"39 201 CURVE SMOOTH",
"45 199 OFFCURVE",
"49.667 191.333 OFFCURVE",
"53 178 CURVE",
"53.667 171.333 OFFCURVE",
"48.667 150 OFFCURVE",
"38 114 CURVE SMOOTH",
"25.333 76 OFFCURVE",
"19 48.333 OFFCURVE",
"19 31 CURVE SMOOTH",
"19 9 OFFCURVE",
"30.333 -2 OFFCURVE",
"53 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 39 186 39 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 39 121 39 137 39 153 39 169 39 185 39 201 39 217 39 233 39 249 39 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 39 25 39 41 39 57 39 73 39 89 39 105 39 121 39 137 39 153 39 169 39 185 39 201 39 217 39 233 39 249 39 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 39 25 39 41 39 57 39 73 39 89 39 105 39 121 39 137 39 153 39 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01243 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01231 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 31 22 31 38 31 54 31 70 31 86 31 102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 31 22 31 38 31 54 31 70 31 86 31 102 31 118 31 134 31 150 31 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 31 181 31 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01213 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 25 23 25 39 25 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 25 70 25 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0126 13 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01233 947 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 237;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2021-05-11 10:22:32 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{204, 0}";
},
{
name = top;
position = "{219, 231}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"99.333 -16 OFFCURVE",
"143.667 33 OFFCURVE",
"189 131 CURVE",
"187.667 118.333 OFFCURVE",
"188 101.333 OFFCURVE",
"190 80 CURVE SMOOTH",
"194.667 17.333 OFFCURVE",
"216.333 -14 OFFCURVE",
"255 -14 CURVE SMOOTH",
"292.333 -14 OFFCURVE",
"336 22 OFFCURVE",
"352 70 CURVE SMOOTH",
"362 96.667 OFFCURVE",
"367 119.333 OFFCURVE",
"367 138 CURVE SMOOTH",
"367 150.667 OFFCURVE",
"365.667 163.333 OFFCURVE",
"363 176 CURVE",
"390 172.5 LINE SMOOTH",
"397 172 OFFCURVE",
"403.667 171.333 OFFCURVE",
"409 172 CURVE SMOOTH",
"425 173.333 OFFCURVE",
"451.667 181.333 OFFCURVE",
"461 188 CURVE",
"459 192 LINE",
"445 190 OFFCURVE",
"432 189 OFFCURVE",
"421 189 CURVE SMOOTH",
"388 189 OFFCURVE",
"369 197 OFFCURVE",
"363 212 CURVE SMOOTH",
"359.667 220 OFFCURVE",
"352.333 224 OFFCURVE",
"341 224 CURVE SMOOTH",
"314.333 224 OFFCURVE",
"314 210 OFFCURVE",
"314 202 CURVE SMOOTH",
"314 194 OFFCURVE",
"321.333 179.667 OFFCURVE",
"336 159 CURVE",
"338 152 OFFCURVE",
"339 144 OFFCURVE",
"339 136 CURVE SMOOTH",
"339 76 OFFCURVE",
"294 -4 OFFCURVE",
"258 1 CURVE",
"249.333 1 OFFCURVE",
"242.667 4.333 OFFCURVE",
"238 11 CURVE SMOOTH",
"230 21.667 OFFCURVE",
"226 42.667 OFFCURVE",
"226 74 CURVE SMOOTH",
"226 89.333 OFFCURVE",
"229 126.667 OFFCURVE",
"235 186 CURVE SMOOTH",
"235.667 194.667 OFFCURVE",
"229.333 199 OFFCURVE",
"216 199 CURVE SMOOTH",
"196 199 OFFCURVE",
"185.333 192.333 OFFCURVE",
"184 179 CURVE",
"185 174 OFFCURVE",
"185 169 OFFCURVE",
"185 164 CURVE SMOOTH",
"185 159 OFFCURVE",
"185 154 OFFCURVE",
"183 150 CURVE SMOOTH",
"163.667 106 OFFCURVE",
"143.333 71 OFFCURVE",
"122 45 CURVE SMOOTH",
"100 18.333 OFFCURVE",
"83 5 OFFCURVE",
"71 5 CURVE SMOOTH",
"63.667 5 OFFCURVE",
"60 11 OFFCURVE",
"60 23 CURVE SMOOTH",
"60 43.667 OFFCURVE",
"67.667 75 OFFCURVE",
"83 117 CURVE SMOOTH",
"99 158.333 OFFCURVE",
"116 189 OFFCURVE",
"134 209 CURVE SMOOTH",
"136 211.667 OFFCURVE",
"137 214 OFFCURVE",
"137 216 CURVE SMOOTH",
"137 221.333 OFFCURVE",
"132 224 OFFCURVE",
"122 224 CURVE SMOOTH",
"104.667 224 OFFCURVE",
"91.667 217 OFFCURVE",
"83 203 CURVE SMOOTH",
"70.333 185.667 OFFCURVE",
"57.667 160 OFFCURVE",
"45 126 CURVE SMOOTH",
"27.667 82 OFFCURVE",
"19 48.333 OFFCURVE",
"19 25 CURVE SMOOTH",
"19 3.667 OFFCURVE",
"26 -9.333 OFFCURVE",
"40 -14 CURVE SMOOTH",
"45.333 -15.333 OFFCURVE",
"49.333 -16 OFFCURVE",
"56 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 950 25 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01253 950 16 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0127 16 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 39 181 39 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 53 181 53 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01249 20 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0121 20 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0127 20 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01218 20 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 407;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"10 -20.333 OFFCURVE",
"11 -19.333 OFFCURVE",
"11 -18 CURVE",
"17 4.667 OFFCURVE",
"35.667 30.667 OFFCURVE",
"67 60 CURVE SMOOTH",
"109 96 LINE",
"113 33.333 OFFCURVE",
"129 -2.333 OFFCURVE",
"157 -11 CURVE SMOOTH",
"163 -13 OFFCURVE",
"169 -14 OFFCURVE",
"175 -14 CURVE SMOOTH",
"197 -14 OFFCURVE",
"219.667 -3 OFFCURVE",
"243 19 CURVE SMOOTH",
"261 35.667 OFFCURVE",
"271.333 48 OFFCURVE",
"274 56 CURVE",
"271.333 59.333 OFFCURVE",
"269 60.667 OFFCURVE",
"267 60 CURVE",
"264.333 56.667 OFFCURVE",
"261.667 53.5 OFFCURVE",
"259 50.5 CURVE SMOOTH",
"251 41 LINE SMOOTH",
"239 28.333 OFFCURVE",
"228.333 19.333 OFFCURVE",
"219 14 CURVE SMOOTH",
"211.667 9.333 OFFCURVE",
"204 7 OFFCURVE",
"196 7 CURVE SMOOTH",
"170.667 7 OFFCURVE",
"152 45.333 OFFCURVE",
"140 122 CURVE",
"140.667 122 OFFCURVE",
"154.667 134 OFFCURVE",
"182 158 CURVE SMOOTH",
"235 205 LINE SMOOTH",
"255.667 225.667 OFFCURVE",
"266 242 OFFCURVE",
"266 254 CURVE SMOOTH",
"266 260 OFFCURVE",
"265 262 OFFCURVE",
"263 262 CURVE SMOOTH",
"262 262 OFFCURVE",
"262 262 OFFCURVE",
"261 262 CURVE",
"251 248.5 LINE SMOOTH",
"247.667 244.167 OFFCURVE",
"244.667 239.667 OFFCURVE",
"242 235 CURVE SMOOTH",
"232.667 219.667 OFFCURVE",
"213.667 199.667 OFFCURVE",
"185 175 CURVE SMOOTH",
"159.667 153 OFFCURVE",
"143.667 140 OFFCURVE",
"137 136 CURVE",
"133.667 161.333 OFFCURVE",
"130.333 181.667 OFFCURVE",
"127 197 CURVE SMOOTH",
"123.667 212.333 OFFCURVE",
"120.333 223.333 OFFCURVE",
"117 230 CURVE SMOOTH",
"115.667 233.333 OFFCURVE",
"112.333 235 OFFCURVE",
"107 235 CURVE SMOOTH",
"99.667 235 OFFCURVE",
"88.667 230.667 OFFCURVE",
"74 222 CURVE SMOOTH",
"57.333 213.333 OFFCURVE",
"49 205.333 OFFCURVE",
"49 198 CURVE SMOOTH",
"49 194.667 OFFCURVE",
"50.667 193 OFFCURVE",
"54 193 CURVE SMOOTH",
"56 193 OFFCURVE",
"59.667 195.5 OFFCURVE",
"65 200.5 CURVE SMOOTH",
"70 205 OFFCURVE",
"74 207 OFFCURVE",
"78 207 CURVE SMOOTH",
"79 207 OFFCURVE",
"79 207 OFFCURVE",
"80 207 CURVE",
"86 203.667 OFFCURVE",
"92 186.667 OFFCURVE",
"98 156 CURVE SMOOTH",
"100.667 142.667 OFFCURVE",
"103.333 127.667 OFFCURVE",
"106 109 CURVE",
"40 59 LINE",
"12.667 33.667 OFFCURVE",
"-1.333 12 OFFCURVE",
"-2 -6 CURVE SMOOTH",
"-2 -15.333 OFFCURVE",
"1.333 -20.333 OFFCURVE",
"8 -21 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01253 948 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 212;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2021-05-11 10:19:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{215, -15}";
},
{
name = top;
position = "{121, 216}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-73 -353 OFFCURVE",
"9.667 -297.333 OFFCURVE",
"87 -184 CURVE SMOOTH",
"121 -134 OFFCURVE",
"148 -81 OFFCURVE",
"168 -25 CURVE",
"204 -15 OFFCURVE",
"222 0 OFFCURVE",
"222 20 CURVE SMOOTH",
"222 25 OFFCURVE",
"221 28 OFFCURVE",
"218 28 CURVE SMOOTH",
"214 28 OFFCURVE",
"211.333 24.333 OFFCURVE",
"210 17 CURVE SMOOTH",
"208 5.667 OFFCURVE",
"196.667 -2.333 OFFCURVE",
"176 -7 CURVE",
"184.667 10.333 OFFCURVE",
"195 46.333 OFFCURVE",
"207 101 CURVE SMOOTH",
"219 153.667 OFFCURVE",
"225 189.333 OFFCURVE",
"225 208 CURVE SMOOTH",
"225 213.333 OFFCURVE",
"220.333 216 OFFCURVE",
"211 216 CURVE SMOOTH",
"195.667 216 OFFCURVE",
"186.667 205 OFFCURVE",
"184 183 CURVE",
"145.333 131 OFFCURVE",
"116.333 91.667 OFFCURVE",
"95 65 CURVE",
"99.667 83 OFFCURVE",
"102 103.667 OFFCURVE",
"102 127 CURVE SMOOTH",
"102 159.667 OFFCURVE",
"95.667 179.333 OFFCURVE",
"83 186 CURVE SMOOTH",
"78.333 188.667 OFFCURVE",
"73 190 OFFCURVE",
"67 190 CURVE SMOOTH",
"53 190 OFFCURVE",
"37.667 183.667 OFFCURVE",
"21 171 CURVE SMOOTH",
"16 168 OFFCURVE",
"12 164 OFFCURVE",
"12 159 CURVE SMOOTH",
"12 157 OFFCURVE",
"14 156 OFFCURVE",
"16 156 CURVE SMOOTH",
"17.333 156 OFFCURVE",
"19.667 157 OFFCURVE",
"23 159 CURVE SMOOTH",
"32.333 164.333 OFFCURVE",
"39.667 167 OFFCURVE",
"45 167 CURVE SMOOTH",
"59 167 OFFCURVE",
"66 152 OFFCURVE",
"66 122 CURVE SMOOTH",
"66 101.333 OFFCURVE",
"61.333 67.667 OFFCURVE",
"52 21 CURVE SMOOTH",
"51.333 17.667 OFFCURVE",
"51 13.667 OFFCURVE",
"51 9 CURVE SMOOTH",
"51 1.667 OFFCURVE",
"53.333 -2 OFFCURVE",
"58 -2 CURVE SMOOTH",
"70.226 -2 OFFCURVE",
"89.087 23.261 OFFCURVE",
"94 38 CURVE",
"124.667 73.333 OFFCURVE",
"153.667 116 OFFCURVE",
"181 166 CURVE",
"163 73 LINE SMOOTH",
"155 30 OFFCURVE",
"147.667 -0.333 OFFCURVE",
"141 -15 CURVE",
"-33 -60.333 OFFCURVE",
"-149.333 -103 OFFCURVE",
"-208 -143 CURVE SMOOTH",
"-249.333 -172.333 OFFCURVE",
"-270 -207 OFFCURVE",
"-270 -247 CURVE SMOOTH",
"-270 -257.667 OFFCURVE",
"-268 -268.333 OFFCURVE",
"-264 -279 CURVE SMOOTH",
"-248 -328.333 OFFCURVE",
"-211 -353 OFFCURVE",
"-153 -353 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-208.333 -324 OFFCURVE",
"-243 -305.667 OFFCURVE",
"-255 -269 CURVE SMOOTH",
"-257 -263 OFFCURVE",
"-258 -257 OFFCURVE",
"-258 -251 CURVE SMOOTH",
"-258 -223 OFFCURVE",
"-239.333 -196.333 OFFCURVE",
"-202 -171 CURVE SMOOTH",
"-167.333 -147 OFFCURVE",
"-113 -120 OFFCURVE",
"-39 -90 CURVE SMOOTH",
"33 -60.667 OFFCURVE",
"89.333 -41.667 OFFCURVE",
"136 -31 CURVE",
"91.333 -132.333 OFFCURVE",
"58 -197.333 OFFCURVE",
"36 -226 CURVE SMOOTH",
"-13.333 -291.333 OFFCURVE",
"-75.667 -324 OFFCURVE",
"-151 -324 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01258 950 42 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 42 186 42 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 42 25 42 41 42 57 42 73 42 89 42 105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 42 25 42 41 42 57 42 73 42 89 42 105 42 121 42 137 42 153 42 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01260 42 58 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01278 949 17 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 242;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
lastChange = "2021-05-11 10:13:03 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{108, 0}";
},
{
name = center;
position = "{108, 137}";
},
{
name = top;
position = "{166, 240}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"197.667 -37 OFFCURVE",
"205 -31 OFFCURVE",
"215 -19 CURVE SMOOTH",
"225.667 -7.667 OFFCURVE",
"231 3 OFFCURVE",
"231 13 CURVE SMOOTH",
"231 27 OFFCURVE",
"217.333 34 OFFCURVE",
"190 34 CURVE SMOOTH",
"163.333 34 OFFCURVE",
"117 30.333 OFFCURVE",
"49 21 CURVE",
"67 55 OFFCURVE",
"119.333 108.333 OFFCURVE",
"206 181 CURVE",
"224.667 183.667 OFFCURVE",
"248.333 205.667 OFFCURVE",
"255 227 CURVE SMOOTH",
"257 234.333 OFFCURVE",
"251.667 238 OFFCURVE",
"239 238 CURVE SMOOTH",
"234.333 238 OFFCURVE",
"228 238 OFFCURVE",
"219.5 238 CURVE SMOOTH",
"187 239 LINE SMOOTH",
"176 239 OFFCURVE",
"165.5 240 OFFCURVE",
"156.5 240 CURVE SMOOTH",
"133 240 LINE SMOOTH",
"114 240 OFFCURVE",
"96.667 236.667 OFFCURVE",
"82 234 CURVE",
"68 222 OFFCURVE",
"56.667 205 OFFCURVE",
"48 183 CURVE",
"48 179.667 OFFCURVE",
"49 178 OFFCURVE",
"51 178 CURVE",
"79 201 LINE SMOOTH",
"95 214 OFFCURVE",
"118 223 OFFCURVE",
"150 223 CURVE SMOOTH",
"156.667 223 OFFCURVE",
"172.667 222 OFFCURVE",
"198 220 CURVE",
"196.667 218.667 OFFCURVE",
"187.667 209.667 OFFCURVE",
"171 193 CURVE SMOOTH",
"97 119 LINE SMOOTH",
"46.333 68.333 OFFCURVE",
"17.333 35.667 OFFCURVE",
"10 21 CURVE SMOOTH",
"9 19 OFFCURVE",
"8 16 OFFCURVE",
"8 13 CURVE SMOOTH",
"8 12 OFFCURVE",
"8 11 OFFCURVE",
"8 10 CURVE SMOOTH",
"9.333 4.667 OFFCURVE",
"11.667 0.667 OFFCURVE",
"15 -2 CURVE",
"22 -2 LINE SMOOTH",
"29 -2 OFFCURVE",
"34 0 OFFCURVE",
"80 4 CURVE SMOOTH",
"101.333 5.333 OFFCURVE",
"128.333 6 OFFCURVE",
"163 6 CURVE SMOOTH",
"191.667 6 OFFCURVE",
"206.667 2.333 OFFCURVE",
"208 -5 CURVE SMOOTH",
"208 -11.84 OFFCURVE",
"189 -28.984 OFFCURVE",
"189 -34 CURVE SMOOTH",
"189 -36 OFFCURVE",
"190.333 -37 OFFCURVE",
"193 -37 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0128 949 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0125 23 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01228 14 50 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 14 50 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01246 14 50 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 216;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"238.667 -134 OFFCURVE",
"242.667 -133 OFFCURVE",
"244 -131 CURVE",
"242 -127.667 OFFCURVE",
"230.667 -125.667 OFFCURVE",
"210 -125 CURVE SMOOTH",
"187.333 -124.333 OFFCURVE",
"170 -119.333 OFFCURVE",
"158 -110 CURVE SMOOTH",
"140 -97.333 OFFCURVE",
"131 -75.333 OFFCURVE",
"131 -44 CURVE SMOOTH",
"131 -17.333 OFFCURVE",
"136.667 23.667 OFFCURVE",
"150 77 CURVE SMOOTH",
"163.333 130.333 OFFCURVE",
"169 171 OFFCURVE",
"169 199 CURVE SMOOTH",
"169 259 OFFCURVE",
"123.333 299.667 OFFCURVE",
"62 305 CURVE SMOOTH",
"66 305 LINE SMOOTH",
"102.667 303.667 OFFCURVE",
"136.667 318.667 OFFCURVE",
"168 350 CURVE SMOOTH",
"196 378 OFFCURVE",
"215.667 410.667 OFFCURVE",
"227 448 CURVE",
"252 574 LINE SMOOTH",
"262 622.667 OFFCURVE",
"276.333 657.333 OFFCURVE",
"295 678 CURVE SMOOTH",
"319.667 706.667 OFFCURVE",
"359.667 721 OFFCURVE",
"415 721 CURVE",
"423 724 LINE",
"421.667 725.333 OFFCURVE",
"419.667 726 OFFCURVE",
"417 726 CURVE SMOOTH",
"331.667 726 OFFCURVE",
"273.667 700.667 OFFCURVE",
"243 650 CURVE SMOOTH",
"227.667 624 OFFCURVE",
"214 570.667 OFFCURVE",
"202 490 CURVE SMOOTH",
"190.667 418.667 OFFCURVE",
"171 370.667 OFFCURVE",
"143 346 CURVE SMOOTH",
"121.667 327.333 OFFCURVE",
"82.667 315 OFFCURVE",
"26 309 CURVE",
"21 301 LINE",
"99 299.667 OFFCURVE",
"138 267.667 OFFCURVE",
"138 205 CURVE SMOOTH",
"138 178.333 OFFCURVE",
"131.333 137.667 OFFCURVE",
"118 83 CURVE SMOOTH",
"104.667 28.333 OFFCURVE",
"98 -12.333 OFFCURVE",
"98 -39 CURVE SMOOTH",
"98 -77.667 OFFCURVE",
"112 -104.333 OFFCURVE",
"140 -119 CURVE SMOOTH",
"158.667 -129 OFFCURVE",
"189.333 -134 OFFCURVE",
"232 -134 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 36 186 36 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 36 25 36 41 36 57 36 73 36 89 36 105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 36 25 36 41 36 57 36 73 36 89 36 105 36 121 36 137 36 153 36 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01214 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01220 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 20 181 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01211 28 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 28 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 369;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
lastChange = "2021-05-11 10:01:29 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"68.333 -117 OFFCURVE",
"77.667 -110.333 OFFCURVE",
"87 -97 CURVE SMOOTH",
"103.667 -73.667 OFFCURVE",
"124 35.333 OFFCURVE",
"148 230 CURVE SMOOTH",
"169.333 408.667 OFFCURVE",
"180 526 OFFCURVE",
"180 586 CURVE SMOOTH",
"180 587.333 OFFCURVE",
"180 589.333 OFFCURVE",
"180 592 CURVE SMOOTH",
"181 601 LINE",
"181 617 LINE SMOOTH",
"181 682.333 OFFCURVE",
"165.667 715 OFFCURVE",
"135 715 CURVE SMOOTH",
"122.333 715 OFFCURVE",
"116 711.333 OFFCURVE",
"116 704 CURVE SMOOTH",
"116 696.667 OFFCURVE",
"117.667 685.667 OFFCURVE",
"121 671 CURVE SMOOTH",
"123.667 662.333 OFFCURVE",
"125.5 655.333 OFFCURVE",
"126.5 650 CURVE SMOOTH",
"129 638 LINE SMOOTH",
"133 606.667 OFFCURVE",
"135 561.667 OFFCURVE",
"135 503 CURVE SMOOTH",
"135 357.667 OFFCURVE",
"123.333 214.667 OFFCURVE",
"98 68 CURVE SMOOTH",
"86 8 OFFCURVE",
"76.333 -36.833 OFFCURVE",
"69 -66.5 CURVE SMOOTH",
"61.667 -96.167 OFFCURVE",
"58 -112.667 OFFCURVE",
"58 -116 CURVE SMOOTH",
"58 -116.667 OFFCURVE",
"58.333 -117 OFFCURVE",
"59 -117 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01223 950 8 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 8 186 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 250;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"128.333 -131 OFFCURVE",
"194.667 -95.333 OFFCURVE",
"230 -24 CURVE",
"293 177 LINE",
"323 249.667 OFFCURVE",
"380 286.333 OFFCURVE",
"464 287 CURVE",
"471 296 LINE",
"397.667 303.333 OFFCURVE",
"361 330 OFFCURVE",
"361 376 CURVE SMOOTH",
"361 408 OFFCURVE",
"371.333 453 OFFCURVE",
"392 511 CURVE SMOOTH",
"413.333 571 OFFCURVE",
"424 616.667 OFFCURVE",
"424 648 CURVE SMOOTH",
"424 680.667 OFFCURVE",
"408.667 702.333 OFFCURVE",
"378 713 CURVE SMOOTH",
"360 719 OFFCURVE",
"331 722 OFFCURVE",
"291 722 CURVE",
"289.667 721.333 OFFCURVE",
"288.5 720.667 OFFCURVE",
"287.5 720 CURVE SMOOTH",
"284 718 LINE",
"286 716 LINE",
"308.667 712 OFFCURVE",
"333.333 707.667 OFFCURVE",
"356 705 CURVE",
"377.333 697.667 OFFCURVE",
"388 678.667 OFFCURVE",
"388 648 CURVE SMOOTH",
"388 618 OFFCURVE",
"378.333 574 OFFCURVE",
"359 516 CURVE SMOOTH",
"339.667 458 OFFCURVE",
"330 414 OFFCURVE",
"330 384 CURVE SMOOTH",
"330 356 OFFCURVE",
"342 334 OFFCURVE",
"366 318 CURVE SMOOTH",
"386 304 OFFCURVE",
"411 296 OFFCURVE",
"441 294 CURVE",
"390.333 289.333 OFFCURVE",
"343.333 266.667 OFFCURVE",
"300 226 CURVE SMOOTH",
"271.333 198.667 OFFCURVE",
"244.667 141.667 OFFCURVE",
"220 55 CURVE SMOOTH",
"196 -28.333 OFFCURVE",
"171.333 -79.667 OFFCURVE",
"146 -99 CURVE SMOOTH",
"129.333 -111.667 OFFCURVE",
"106 -119.667 OFFCURVE",
"76 -123 CURVE SMOOTH",
"44.667 -126.333 OFFCURVE",
"27.667 -128.333 OFFCURVE",
"25 -129 CURVE",
"26.333 -130.333 OFFCURVE",
"28.333 -131 OFFCURVE",
"31 -131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01243 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 43 181 43 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 26 186 26 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01239 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0120 6 35 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 6 35 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 485;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"196 -23 OFFCURVE",
"213 -15 OFFCURVE",
"228 0 CURVE SMOOTH",
"233 5 OFFCURVE",
"236 11 OFFCURVE",
"236 19 CURVE SMOOTH",
"236 21 OFFCURVE",
"236 22 OFFCURVE",
"235 22 CURVE",
"236.333 22 OFFCURVE",
"230.667 16.667 OFFCURVE",
"218 6 CURVE SMOOTH",
"205 -5 OFFCURVE",
"193 -11 OFFCURVE",
"183 -11 CURVE SMOOTH",
"173 -11 OFFCURVE",
"168 -1 OFFCURVE",
"168 19 CURVE SMOOTH",
"168 41.667 OFFCURVE",
"173.667 69 OFFCURVE",
"185 101 CURVE SMOOTH",
"191.667 120.333 OFFCURVE",
"202 141.333 OFFCURVE",
"216 164 CURVE SMOOTH",
"228.667 183.333 OFFCURVE",
"234.333 194.667 OFFCURVE",
"233 198 CURVE",
"232.333 204.667 OFFCURVE",
"225.667 208 OFFCURVE",
"213 208 CURVE SMOOTH",
"206.333 208 OFFCURVE",
"201.667 206 OFFCURVE",
"199 202 CURVE",
"173.667 175.333 OFFCURVE",
"153 154.667 OFFCURVE",
"137 140 CURVE",
"125 125.333 OFFCURVE",
"97.667 100.667 OFFCURVE",
"55 62 CURVE",
"57.667 66.667 OFFCURVE",
"64.667 81.667 OFFCURVE",
"76 107 CURVE SMOOTH",
"89.333 136.333 OFFCURVE",
"96.333 155.667 OFFCURVE",
"99 169 CURVE SMOOTH",
"99.667 175 OFFCURVE",
"98 178 OFFCURVE",
"94 178 CURVE SMOOTH",
"83.655 178 OFFCURVE",
"60 160.127 OFFCURVE",
"60 151 CURVE SMOOTH",
"60 136.333 OFFCURVE",
"52.667 112 OFFCURVE",
"38 78 CURVE SMOOTH",
"21.333 38.667 OFFCURVE",
"13 18.333 OFFCURVE",
"13 17 CURVE SMOOTH",
"11.667 11 OFFCURVE",
"13.667 8 OFFCURVE",
"19 8 CURVE SMOOTH",
"35 8 OFFCURVE",
"45.333 17.333 OFFCURVE",
"50 36 CURVE SMOOTH",
"52 44 OFFCURVE",
"63 57 OFFCURVE",
"83 75 CURVE SMOOTH",
"129 115 LINE",
"149 136 LINE SMOOTH",
"161 148 OFFCURVE",
"170.333 156.667 OFFCURVE",
"177 162 CURVE",
"187 164 LINE",
"163 110 LINE SMOOTH",
"148.333 74 OFFCURVE",
"139.333 48.333 OFFCURVE",
"138 31 CURVE SMOOTH",
"134 -4 OFFCURVE",
"148 -23 OFFCURVE",
"179 -23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"220.696 235 OFFCURVE",
"253.769 254.692 OFFCURVE",
"259 273 CURVE",
"259 277 OFFCURVE",
"257.667 279 OFFCURVE",
"255 279 CURVE SMOOTH",
"251.667 279 OFFCURVE",
"245.667 275.667 OFFCURVE",
"237 269 CURVE SMOOTH",
"228.333 262.333 OFFCURVE",
"222.333 259 OFFCURVE",
"219 259 CURVE SMOOTH",
"218 259 LINE SMOOTH",
"208 257 OFFCURVE",
"194.333 262.667 OFFCURVE",
"177 276 CURVE SMOOTH",
"159.667 289.333 OFFCURVE",
"146.333 296 OFFCURVE",
"137 296 CURVE SMOOTH",
"132.333 296 OFFCURVE",
"129 295.667 OFFCURVE",
"127 295 CURVE SMOOTH",
"117 291.667 OFFCURVE",
"105 285 OFFCURVE",
"91 275 CURVE SMOOTH",
"75.667 265 OFFCURVE",
"68 257.667 OFFCURVE",
"68 253 CURVE SMOOTH",
"68 250.333 OFFCURVE",
"71.333 249 OFFCURVE",
"78 249 CURVE",
"81.333 251 OFFCURVE",
"87 255.333 OFFCURVE",
"95 262 CURVE SMOOTH",
"101.667 268 OFFCURVE",
"109.667 271 OFFCURVE",
"119 271 CURVE SMOOTH",
"129.667 271 OFFCURVE",
"143 265 OFFCURVE",
"159 253 CURVE SMOOTH",
"175 241 OFFCURVE",
"188.333 235 OFFCURVE",
"199 235 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0120 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0129 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01217 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 220;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = dagger;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"42 -88 LINE",
"268 379 LINE",
"419 379 LINE",
"435.667 387.667 OFFCURVE",
"443.667 396.667 OFFCURVE",
"443 406 CURVE",
"281 406 LINE",
"381 615 LINE",
"352 615 LINE",
"251 406 LINE",
"125 406 LINE",
"107.667 396.667 OFFCURVE",
"99.667 387.667 OFFCURVE",
"101 379 CURVE",
"238 379 LINE",
"13 -88 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0120 949 2 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 458;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = degree;
lastChange = "2021-05-18 16:43:42 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"165 328 OFFCURVE",
"200 361 OFFCURVE",
"200 394 CURVE SMOOTH",
"200 426 OFFCURVE",
"175 453 OFFCURVE",
"144 453 CURVE SMOOTH",
"115 453 OFFCURVE",
"80 418 OFFCURVE",
"80 387 CURVE SMOOTH",
"80 355 OFFCURVE",
"105 328 OFFCURVE",
"134 328 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"113 349 OFFCURVE",
"100 363 OFFCURVE",
"100 392 CURVE SMOOTH",
"100 420 OFFCURVE",
"113 434 OFFCURVE",
"139 434 CURVE SMOOTH",
"166 434 OFFCURVE",
"180 420 OFFCURVE",
"180 392 CURVE SMOOTH",
"180 363 OFFCURVE",
"166 349 OFFCURVE",
"139 349 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 16 186 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01220 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 20 181 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01222 948 5 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = cent;
lastChange = "2021-05-18 16:36:17 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"80 -236 OFFCURVE",
"82 -233 OFFCURVE",
"82 -228 CURVE SMOOTH",
"82 -223 OFFCURVE",
"79 -221 OFFCURVE",
"72 -220 CURVE SMOOTH",
"60 -217 OFFCURVE",
"54 -206 OFFCURVE",
"54 -186 CURVE SMOOTH",
"54 -158 OFFCURVE",
"66 -115 OFFCURVE",
"89 -57 CURVE SMOOTH",
"130 40 LINE",
"196 43 OFFCURVE",
"253 101 OFFCURVE",
"300 212 CURVE",
"301 217 OFFCURVE",
"302 221 OFFCURVE",
"302 223 CURVE SMOOTH",
"302 226 OFFCURVE",
"301 228 OFFCURVE",
"298 228 CURVE SMOOTH",
"293 228 OFFCURVE",
"290 225 OFFCURVE",
"287 218 CURVE SMOOTH",
"233 110 OFFCURVE",
"182 56 OFFCURVE",
"135 56 CURVE SMOOTH",
"101 56 OFFCURVE",
"84 79 OFFCURVE",
"84 124 CURVE SMOOTH",
"84 171 OFFCURVE",
"102 219 OFFCURVE",
"138 268 CURVE SMOOTH",
"176 321 OFFCURVE",
"211 347 OFFCURVE",
"243 347 CURVE SMOOTH",
"268 347 OFFCURVE",
"279 334 OFFCURVE",
"276 307 CURVE",
"272 318 OFFCURVE",
"261 323 OFFCURVE",
"242 323 CURVE SMOOTH",
"215 323 OFFCURVE",
"201 308 OFFCURVE",
"201 278 CURVE SMOOTH",
"201 251 OFFCURVE",
"216 238 OFFCURVE",
"245 238 CURVE SMOOTH",
"278 238 OFFCURVE",
"295 258 OFFCURVE",
"295 297 CURVE SMOOTH",
"295 331 OFFCURVE",
"279 353 OFFCURVE",
"247 364 CURVE",
"284 465 LINE SMOOTH",
"297 498 OFFCURVE",
"305 517 OFFCURVE",
"308 524 CURVE SMOOTH",
"311 529 OFFCURVE",
"313 535 OFFCURVE",
"313 540 CURVE SMOOTH",
"313 547 OFFCURVE",
"312 550 OFFCURVE",
"310 550 CURVE SMOOTH",
"307 550 OFFCURVE",
"303 545 OFFCURVE",
"296 535 CURVE SMOOTH",
"283 513 OFFCURVE",
"270 486 OFFCURVE",
"257 454 CURVE SMOOTH",
"223 369 LINE",
"218 369 LINE SMOOTH",
"168 369 OFFCURVE",
"124 341 OFFCURVE",
"85 285 CURVE SMOOTH",
"49 234 OFFCURVE",
"31 182 OFFCURVE",
"31 131 CURVE SMOOTH",
"31 75 OFFCURVE",
"57 45 OFFCURVE",
"110 40 CURVE",
"67 -57 LINE SMOOTH",
"45 -110 OFFCURVE",
"34 -151 OFFCURVE",
"34 -180 CURVE SMOOTH",
"34 -209 OFFCURVE",
"45 -227 OFFCURVE",
"67 -234 CURVE SMOOTH",
"70 -235 OFFCURVE",
"73 -236 OFFCURVE",
"75 -236 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01234 951 47 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0125 952 9 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 9 74 9 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 9 25 9 41 9 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01213 9 5 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01219 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 34 118 34 134 34 150 34 166 34 182 34 198 34 214 34 230 34 246 34 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 34 22 34 38 34 54 34 70 34 86 34 102 34 118 34 134 34 150 34 166 34 182 34 198 34 214 34 230 34 246 34 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 34 22 34 38 34 54 34 70 34 86 34 102 34 118 34 134 34 150 34 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 34 181 34 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 47 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 959 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01251 959 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\01257 7 73 7 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012104 7 120 7 136 7 152 7 168 7 184 7 200 7 216 7 232 7 248 7 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0128 7 24 7 40 7 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01213 3 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 292;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = sterling;
lastChange = "2021-05-18 16:35:57 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"467 502 OFFCURVE",
"459 516 OFFCURVE",
"447 525 CURVE SMOOTH",
"436 533 OFFCURVE",
"424 537 OFFCURVE",
"411 537 CURVE SMOOTH",
"346 537 OFFCURVE",
"290 440 OFFCURVE",
"244 245 CURVE",
"232 247 OFFCURVE",
"222 248 OFFCURVE",
"213 248 CURVE SMOOTH",
"189 248 OFFCURVE",
"171 244 OFFCURVE",
"160 235 CURVE SMOOTH",
"159 234 OFFCURVE",
"158 232 OFFCURVE",
"159 228 CURVE SMOOTH",
"161 220 OFFCURVE",
"163 216 OFFCURVE",
"165 216 CURVE",
"165 216 OFFCURVE",
"166 217 OFFCURVE",
"169 219 CURVE SMOOTH",
"181 226 OFFCURVE",
"197 229 OFFCURVE",
"216 229 CURVE SMOOTH",
"224 229 OFFCURVE",
"231 228 OFFCURVE",
"240 227 CURVE",
"225 165 OFFCURVE",
"217 129 OFFCURVE",
"214 120 CURVE SMOOTH",
"202 78 OFFCURVE",
"188 46 OFFCURVE",
"174 25 CURVE",
"148 48 OFFCURVE",
"128 63 OFFCURVE",
"116 72 CURVE SMOOTH",
"93 87 OFFCURVE",
"73 94 OFFCURVE",
"55 94 CURVE SMOOTH",
"42 94 OFFCURVE",
"30 90 OFFCURVE",
"22 81 CURVE SMOOTH",
"12 71 OFFCURVE",
"9 57 OFFCURVE",
"13 40 CURVE SMOOTH",
"17 19 OFFCURVE",
"30 2 OFFCURVE",
"52 -11 CURVE SMOOTH",
"71 -21 OFFCURVE",
"89 -26 OFFCURVE",
"106 -26 CURVE SMOOTH",
"125 -26 OFFCURVE",
"142 -20 OFFCURVE",
"159 -8 CURVE",
"172 -16 OFFCURVE",
"196 -28 OFFCURVE",
"232 -44 CURVE SMOOTH",
"267 -59 OFFCURVE",
"292 -68 OFFCURVE",
"308 -73 CURVE SMOOTH",
"333 -81 OFFCURVE",
"355 -84 OFFCURVE",
"375 -84 CURVE SMOOTH",
"433 -84 OFFCURVE",
"459 -57 OFFCURVE",
"453 -3 CURVE",
"452 -1 LINE",
"451 4 OFFCURVE",
"450 6 OFFCURVE",
"448 6 CURVE SMOOTH",
"446 6 OFFCURVE",
"446 4 OFFCURVE",
"446 1 CURVE",
"451 -25 OFFCURVE",
"446 -46 OFFCURVE",
"429 -59 CURVE SMOOTH",
"416 -71 OFFCURVE",
"399 -76 OFFCURVE",
"378 -76 CURVE SMOOTH",
"366 -76 OFFCURVE",
"354 -74 OFFCURVE",
"343 -70 CURVE SMOOTH",
"325 -65 OFFCURVE",
"300 -55 OFFCURVE",
"267 -37 CURVE SMOOTH",
"234 -20 OFFCURVE",
"209 -5 OFFCURVE",
"193 8 CURVE",
"240 51 OFFCURVE",
"274 121 OFFCURVE",
"293 218 CURVE",
"309 215 OFFCURVE",
"322 214 OFFCURVE",
"334 214 CURVE SMOOTH",
"347 214 OFFCURVE",
"358 217 OFFCURVE",
"366 221 CURVE",
"367 222 OFFCURVE",
"367 225 OFFCURVE",
"366 229 CURVE SMOOTH",
"365 237 OFFCURVE",
"363 241 OFFCURVE",
"361 241 CURVE",
"349 236 LINE SMOOTH",
"343 234 OFFCURVE",
"336 233 OFFCURVE",
"330 233 CURVE SMOOTH",
"321 233 OFFCURVE",
"310 234 OFFCURVE",
"297 236 CURVE",
"310 318 LINE SMOOTH",
"315 351 OFFCURVE",
"321 378 OFFCURVE",
"327 398 CURVE SMOOTH",
"337 428 OFFCURVE",
"349 454 OFFCURVE",
"365 476 CURVE SMOOTH",
"386 503 OFFCURVE",
"407 517 OFFCURVE",
"429 517 CURVE SMOOTH",
"446 517 OFFCURVE",
"456 507 OFFCURVE",
"460 487 CURVE SMOOTH",
"468 446 OFFCURVE",
"451 395 OFFCURVE",
"409 335 CURVE SMOOTH",
"407 332 OFFCURVE",
"406 330 OFFCURVE",
"406 328 CURVE",
"407 325 OFFCURVE",
"408 324 OFFCURVE",
"410 324 CURVE SMOOTH",
"413 324 OFFCURVE",
"415 326 OFFCURVE",
"418 329 CURVE SMOOTH",
"433 347 OFFCURVE",
"447 370 OFFCURVE",
"457 398 CURVE SMOOTH",
"470 431 OFFCURVE",
"475 461 OFFCURVE",
"470 486 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 -12 OFFCURVE",
"119 -18 OFFCURVE",
"100 -18 CURVE SMOOTH",
"96 -18 OFFCURVE",
"92 -18 OFFCURVE",
"88 -17 CURVE SMOOTH",
"74 -15 OFFCURVE",
"60 -9 OFFCURVE",
"46 2 CURVE SMOOTH",
"30 15 OFFCURVE",
"20 30 OFFCURVE",
"17 46 CURVE SMOOTH",
"14 63 OFFCURVE",
"19 72 OFFCURVE",
"33 72 CURVE SMOOTH",
"44 72 OFFCURVE",
"63 63 OFFCURVE",
"90 43 CURVE SMOOTH",
"110 30 OFFCURVE",
"129 15 OFFCURVE",
"148 0 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012100 949 14 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01276 69 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01296 949 86 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01298 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01298 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012106 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = section;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"264 -109 OFFCURVE",
"271 -105.667 OFFCURVE",
"271 -99 CURVE SMOOTH",
"271 -95 OFFCURVE",
"269.333 -93 OFFCURVE",
"266 -93 CURVE SMOOTH",
"263.333 -93 OFFCURVE",
"259.667 -94 OFFCURVE",
"255 -96 CURVE SMOOTH",
"250.333 -98 OFFCURVE",
"247 -99 OFFCURVE",
"245 -99 CURVE SMOOTH",
"242.333 -99 OFFCURVE",
"238.667 -98 OFFCURVE",
"234 -96 CURVE SMOOTH",
"207.333 -86.667 OFFCURVE",
"188 -72 OFFCURVE",
"176 -52 CURVE",
"184 -53.333 OFFCURVE",
"192.333 -54 OFFCURVE",
"199 -54 CURVE SMOOTH",
"266.333 -54 OFFCURVE",
"329.667 -30.333 OFFCURVE",
"389 17 CURVE",
"399.667 14.333 OFFCURVE",
"411.333 13 OFFCURVE",
"424 13 CURVE SMOOTH",
"480 13 OFFCURVE",
"525.333 38.333 OFFCURVE",
"560 89 CURVE SMOOTH",
"590.667 133.667 OFFCURVE",
"606 185.333 OFFCURVE",
"606 244 CURVE SMOOTH",
"606 301.333 OFFCURVE",
"586.667 357.667 OFFCURVE",
"548 413 CURVE SMOOTH",
"528.667 441.667 OFFCURVE",
"513.833 464.167 OFFCURVE",
"503.5 480.5 CURVE SMOOTH",
"484 512 LINE",
"502 554.667 OFFCURVE",
"511 587.333 OFFCURVE",
"511 610 CURVE SMOOTH",
"511 638.667 OFFCURVE",
"500.667 653 OFFCURVE",
"480 653 CURVE SMOOTH",
"458 653 OFFCURVE",
"447 638 OFFCURVE",
"447 608 CURVE SMOOTH",
"447 594.667 OFFCURVE",
"449.667 577.667 OFFCURVE",
"455 555 CURVE",
"445 533.667 OFFCURVE",
"440 499.333 OFFCURVE",
"440 452 CURVE SMOOTH",
"440 440 LINE",
"419.333 408 OFFCURVE",
"392 374 OFFCURVE",
"358 338 CURVE",
"329.333 362.667 OFFCURVE",
"291 375 OFFCURVE",
"243 375 CURVE SMOOTH",
"209 375 OFFCURVE",
"177.333 368.667 OFFCURVE",
"148 356 CURVE SMOOTH",
"103.333 338 OFFCURVE",
"66.333 307.333 OFFCURVE",
"37 264 CURVE SMOOTH",
"8.333 221.333 OFFCURVE",
"-6 175.333 OFFCURVE",
"-6 126 CURVE SMOOTH",
"-6 25.333 OFFCURVE",
"50.667 -33.667 OFFCURVE",
"164 -51 CURVE",
"178 -75 OFFCURVE",
"201.667 -92.667 OFFCURVE",
"235 -104 CURVE SMOOTH",
"241.667 -106.667 OFFCURVE",
"246.667 -108.333 OFFCURVE",
"250 -109 CURVE"
);
},
{
closed = 1;
nodes = (
"163 -23 OFFCURVE",
"160 -6.667 OFFCURVE",
"160 12 CURVE SMOOTH",
"160 43.333 OFFCURVE",
"169 78.667 OFFCURVE",
"187 118 CURVE",
"201.667 107.333 OFFCURVE",
"221 102 OFFCURVE",
"245 102 CURVE SMOOTH",
"261 102 OFFCURVE",
"277.667 105 OFFCURVE",
"295 111 CURVE",
"302.333 79.667 OFFCURVE",
"321.667 54.667 OFFCURVE",
"353 36 CURVE",
"302.333 -12.667 OFFCURVE",
"241 -37 OFFCURVE",
"169 -37 CURVE"
);
},
{
closed = 1;
nodes = (
"116 -33.667 OFFCURVE",
"81.333 -17 OFFCURVE",
"54 13 CURVE SMOOTH",
"26 43.667 OFFCURVE",
"12 79.667 OFFCURVE",
"12 121 CURVE SMOOTH",
"12 181 OFFCURVE",
"35 236 OFFCURVE",
"81 286 CURVE SMOOTH",
"127 336.667 OFFCURVE",
"179.667 362 OFFCURVE",
"239 362 CURVE SMOOTH",
"280.333 362 OFFCURVE",
"314.667 349.333 OFFCURVE",
"342 324 CURVE",
"262.667 258.667 OFFCURVE",
"209 195 OFFCURVE",
"181 133 CURVE",
"169 145 OFFCURVE",
"163 159 OFFCURVE",
"163 175 CURVE SMOOTH",
"163 184.333 OFFCURVE",
"167 195.667 OFFCURVE",
"171 205 CURVE SMOOTH",
"179 221 LINE",
"176 223 LINE",
"164.162 223 OFFCURVE",
"155 191.895 OFFCURVE",
"155 177 CURVE SMOOTH",
"155 157 OFFCURVE",
"162.333 140 OFFCURVE",
"177 126 CURVE",
"159.667 80 OFFCURVE",
"151 40.667 OFFCURVE",
"151 8 CURVE SMOOTH",
"151 -10 OFFCURVE",
"153.333 -25 OFFCURVE",
"158 -37 CURVE"
);
},
{
closed = 1;
nodes = (
"221.333 109 OFFCURVE",
"204.333 114.667 OFFCURVE",
"189 126 CURVE",
"220.333 189.333 OFFCURVE",
"273.667 253 OFFCURVE",
"349 317 CURVE",
"367 295.667 OFFCURVE",
"376 272.667 OFFCURVE",
"376 248 CURVE SMOOTH",
"376 198 OFFCURVE",
"351 157.667 OFFCURVE",
"301 127 CURVE",
"300.333 129.667 OFFCURVE",
"300 133.667 OFFCURVE",
"300 139 CURVE SMOOTH",
"300 154.333 OFFCURVE",
"302.667 166.667 OFFCURVE",
"308 176 CURVE SMOOTH",
"318 191 LINE",
"318 193.667 OFFCURVE",
"316.667 195 OFFCURVE",
"314 195 CURVE SMOOTH",
"312.667 195 OFFCURVE",
"311.667 194.667 OFFCURVE",
"311 194 CURVE SMOOTH",
"297.667 178.667 OFFCURVE",
"291 160.333 OFFCURVE",
"291 139 CURVE SMOOTH",
"291 132.333 OFFCURVE",
"291.667 128.333 OFFCURVE",
"293 123 CURVE",
"275.667 113.667 OFFCURVE",
"258 109 OFFCURVE",
"240 109 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"327.333 58.667 OFFCURVE",
"309 82.667 OFFCURVE",
"303 114 CURVE",
"364.333 139.333 OFFCURVE",
"395 185 OFFCURVE",
"395 251 CURVE SMOOTH",
"395 284.333 OFFCURVE",
"384.667 311.333 OFFCURVE",
"364 332 CURVE",
"394.667 363.333 OFFCURVE",
"420 394 OFFCURVE",
"440 424 CURVE",
"443 351 LINE SMOOTH",
"444.333 324.333 OFFCURVE",
"445 300.333 OFFCURVE",
"445 279 CURVE SMOOTH",
"445 179.667 OFFCURVE",
"416 100.667 OFFCURVE",
"358 42 CURVE"
);
},
{
closed = 1;
nodes = (
"468.667 84.667 OFFCURVE",
"503 152 OFFCURVE",
"503 228 CURVE SMOOTH",
"503 262 OFFCURVE",
"498 300.667 OFFCURVE",
"488 344 CURVE SMOOTH",
"461 459 LINE",
"467 469.667 OFFCURVE",
"472 481.333 OFFCURVE",
"476 494 CURVE",
"492.667 456 OFFCURVE",
"505 427.333 OFFCURVE",
"513 408 CURVE SMOOTH",
"526 377 LINE SMOOTH",
"539.333 338.333 OFFCURVE",
"546 295.333 OFFCURVE",
"546 248 CURVE SMOOTH",
"546 233 LINE SMOOTH",
"546 228.333 OFFCURVE",
"545.667 223.333 OFFCURVE",
"545 218 CURVE SMOOTH",
"541.667 176.667 OFFCURVE",
"527 136 OFFCURVE",
"501 96 CURVE SMOOTH",
"471 50.667 OFFCURVE",
"437.333 27.333 OFFCURVE",
"400 26 CURVE"
);
},
{
closed = 1;
nodes = (
"455.333 486.667 OFFCURVE",
"454 499 OFFCURVE",
"454 511 CURVE SMOOTH",
"454 522.333 OFFCURVE",
"456 532 OFFCURVE",
"460 540 CURVE",
"462.667 528.667 OFFCURVE",
"466.667 516.667 OFFCURVE",
"472 504 CURVE",
"468 493.333 OFFCURVE",
"463.333 484.667 OFFCURVE",
"458 474 CURVE"
);
},
{
closed = 1;
nodes = (
"463.667 555 OFFCURVE",
"456 583 OFFCURVE",
"456 605 CURVE SMOOTH",
"456 628.333 OFFCURVE",
"465.333 640 OFFCURVE",
"484 640 CURVE SMOOTH",
"495.333 640 OFFCURVE",
"501 631 OFFCURVE",
"501 613 CURVE SMOOTH",
"501 587.667 OFFCURVE",
"493.667 557 OFFCURVE",
"479 521 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012170 28 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 952 105 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 952 88 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 170 118 170 134 170 150 170 166 170 182 170 198 170 214 170 230 170 246 170 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 170 22 170 38 170 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 170 69 170 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012170 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01211 170 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01291 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\01258 105 74 105 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 105 121 105 137 105 153 105 169 105 185 105 201 105 217 105 233 105 249 105 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 105 25 105 41 105 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01261 105 82 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 105 82 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01269 105 82 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\01258 88 74 88 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 88 25 88 41 88 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01277 105 82 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01284 105 82 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01291 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01295 105 82 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012116 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012122 170 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012127 170 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012141 28 170 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012170 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012147 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012147 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012153 170 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012170 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012158 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012158 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012160 170 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012162 170 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012111 8 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01211 8 111 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01261 22 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 22 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01269 22 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01277 22 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01284 8 111 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01295 22 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012122 22 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012127 22 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012141 8 111 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012153 22 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012160 22 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012162 8 111 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012166 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012166 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 609;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = bullet;
lastChange = "2021-05-18 16:42:22 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"289 164 OFFCURVE",
"336 211 OFFCURVE",
"336 271 CURVE SMOOTH",
"336 331 OFFCURVE",
"289 378 OFFCURVE",
"229 378 CURVE SMOOTH",
"169 378 OFFCURVE",
"122 331 OFFCURVE",
"122 271 CURVE SMOOTH",
"122 211 OFFCURVE",
"169 164 OFFCURVE",
"229 164 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 460;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = paragraph;
lastChange = "2021-05-18 16:42:35 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"211 0 LINE",
"415 558 LINE",
"461 558 LINE",
"257 0 LINE",
"319 0 LINE",
"523 558 LINE",
"541 558 LINE",
"558 604 LINE",
"399 604 LINE SMOOTH",
"358 604 OFFCURVE",
"326 600 OFFCURVE",
"305 591 CURVE SMOOTH",
"245 568 OFFCURVE",
"204 527 OFFCURVE",
"182 466 CURVE SMOOTH",
"175 445 OFFCURVE",
"171 428 OFFCURVE",
"171 413 CURVE SMOOTH",
"171 361 OFFCURVE",
"205 335 OFFCURVE",
"272 335 CURVE",
"150 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0127 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0120 949 1 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 372;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = germandbls;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-66 -251 OFFCURVE",
"-17 -141 OFFCURVE",
"18 -57 CURVE SMOOTH",
"37 -11 OFFCURVE",
"174 342 OFFCURVE",
"249 422 CURVE SMOOTH",
"279 454 OFFCURVE",
"306 467 OFFCURVE",
"327 467 CURVE SMOOTH",
"356 467 OFFCURVE",
"374 443 OFFCURVE",
"374 407 CURVE SMOOTH",
"374 380 OFFCURVE",
"364 347 OFFCURVE",
"341 311 CURVE SMOOTH",
"323 283 OFFCURVE",
"312 286 OFFCURVE",
"280 286 CURVE SMOOTH",
"237 286 OFFCURVE",
"177 240 OFFCURVE",
"177 196 CURVE SMOOTH",
"177 157 OFFCURVE",
"207 138 OFFCURVE",
"249 101 CURVE SMOOTH",
"266 86 OFFCURVE",
"276 51 OFFCURVE",
"276 43 CURVE SMOOTH",
"276 38 OFFCURVE",
"274 33 OFFCURVE",
"270 27 CURVE",
"250 18 OFFCURVE",
"231 13 OFFCURVE",
"210 13 CURVE SMOOTH",
"197 13 OFFCURVE",
"184 15 OFFCURVE",
"170 19 CURVE SMOOTH",
"165 20 OFFCURVE",
"160 21 OFFCURVE",
"156 21 CURVE SMOOTH",
"139 21 OFFCURVE",
"130 12 OFFCURVE",
"130 5 CURVE SMOOTH",
"130 -3 OFFCURVE",
"147 -7 OFFCURVE",
"177 -7 CURVE SMOOTH",
"206 -7 OFFCURVE",
"233 -5 OFFCURVE",
"248 0 CURVE SMOOTH",
"264 5 OFFCURVE",
"274 11 OFFCURVE",
"278 17 CURVE",
"345 50 LINE",
"356 57 OFFCURVE",
"364 65 OFFCURVE",
"361 65 CURVE SMOOTH",
"359 65 OFFCURVE",
"356 63 OFFCURVE",
"349 60 CURVE SMOOTH",
"341 56 OFFCURVE",
"295 36 OFFCURVE",
"283 31 CURVE",
"285 37 OFFCURVE",
"287 42 OFFCURVE",
"287 45 CURVE SMOOTH",
"287 61 OFFCURVE",
"290 90 OFFCURVE",
"260 123 CURVE SMOOTH",
"236 149 OFFCURVE",
"220 172 OFFCURVE",
"220 196 CURVE SMOOTH",
"220 211 OFFCURVE",
"226 227 OFFCURVE",
"241 244 CURVE SMOOTH",
"258 264 OFFCURVE",
"284 262 OFFCURVE",
"298 265 CURVE",
"310 262 OFFCURVE",
"347 281 OFFCURVE",
"360 297 CURVE SMOOTH",
"387 331 OFFCURVE",
"399 365 OFFCURVE",
"399 395 CURVE SMOOTH",
"399 443 OFFCURVE",
"367 479 OFFCURVE",
"309 479 CURVE SMOOTH",
"278 479 OFFCURVE",
"244 469 OFFCURVE",
"214 432 CURVE SMOOTH",
"160 358 OFFCURVE",
"125 282 OFFCURVE",
"91 201 CURVE",
"68 197 OFFCURVE",
"50 193 OFFCURVE",
"37 189 CURVE SMOOTH",
"25 185 OFFCURVE",
"17 180 OFFCURVE",
"17 176 CURVE SMOOTH",
"17 173 OFFCURVE",
"22 171 OFFCURVE",
"31 171 CURVE SMOOTH",
"41 171 OFFCURVE",
"56 172 OFFCURVE",
"76 174 CURVE",
"71 160 OFFCURVE",
"58 122 OFFCURVE",
"47 93 CURVE SMOOTH",
"33 56 OFFCURVE",
"17 15 OFFCURVE",
"0 -22 CURVE SMOOTH",
"-41 -112 OFFCURVE",
"-84 -177 OFFCURVE",
"-112 -202 CURVE SMOOTH",
"-135 -222 OFFCURVE",
"-155 -235 OFFCURVE",
"-172 -235 CURVE SMOOTH",
"-187 -235 OFFCURVE",
"-197 -221 OFFCURVE",
"-202 -200 CURVE",
"-204 -176 LINE SMOOTH",
"-205 -161 OFFCURVE",
"-206 -154 OFFCURVE",
"-209 -154 CURVE SMOOTH",
"-219 -154 OFFCURVE",
"-226 -167 OFFCURVE",
"-226 -194 CURVE SMOOTH",
"-226 -211 OFFCURVE",
"-221 -223 OFFCURVE",
"-211 -233 CURVE SMOOTH",
"-199 -246 OFFCURVE",
"-185 -251 OFFCURVE",
"-166 -251 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01211 30 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0120 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01226 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\01258 30 74 30 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 30 25 30 41 30 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01257 947 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01249 53 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01255 53 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = registered;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"305.333 -9 OFFCURVE",
"373.333 19.667 OFFCURVE",
"432 77 CURVE SMOOTH",
"490 133.667 OFFCURVE",
"519 201.667 OFFCURVE",
"519 281 CURVE SMOOTH",
"519 347.667 OFFCURVE",
"496.333 403 OFFCURVE",
"451 447 CURVE SMOOTH",
"406.333 491.667 OFFCURVE",
"350.333 514 OFFCURVE",
"283 514 CURVE SMOOTH",
"205.667 514 OFFCURVE",
"137.667 485.333 OFFCURVE",
"79 428 CURVE SMOOTH",
"21 370.667 OFFCURVE",
"-8 302.667 OFFCURVE",
"-8 224 CURVE SMOOTH",
"-8 157.333 OFFCURVE",
"14.333 101.667 OFFCURVE",
"59 57 CURVE SMOOTH",
"103.667 13 OFFCURVE",
"160 -9 OFFCURVE",
"228 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165.667 6 OFFCURVE",
"112.667 27 OFFCURVE",
"70 69 CURVE SMOOTH",
"28 111 OFFCURVE",
"7 163.667 OFFCURVE",
"7 227 CURVE SMOOTH",
"7 301 OFFCURVE",
"34.333 365 OFFCURVE",
"89 419 CURVE SMOOTH",
"143.667 473 OFFCURVE",
"208 500 OFFCURVE",
"282 500 CURVE SMOOTH",
"344.667 500 OFFCURVE",
"397 479 OFFCURVE",
"439 437 CURVE SMOOTH",
"481.667 395 OFFCURVE",
"503 342.667 OFFCURVE",
"503 280 CURVE SMOOTH",
"503 206 OFFCURVE",
"475.667 141.667 OFFCURVE",
"421 87 CURVE SMOOTH",
"367 33 OFFCURVE",
"303 6 OFFCURVE",
"229 6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"96 92 OFFCURVE",
"106.333 93.333 OFFCURVE",
"115 96 CURVE SMOOTH",
"155.667 106 OFFCURVE",
"189 127 OFFCURVE",
"215 159 CURVE SMOOTH",
"233.667 181.667 OFFCURVE",
"252.333 216.333 OFFCURVE",
"271 263 CURVE",
"276.333 261.667 OFFCURVE",
"281 261 OFFCURVE",
"285 261 CURVE SMOOTH",
"296 261 LINE",
"301 180 LINE SMOOTH",
"303.667 128 OFFCURVE",
"320.667 102 OFFCURVE",
"352 102 CURVE SMOOTH",
"370.667 102 OFFCURVE",
"390 113.333 OFFCURVE",
"410 136 CURVE SMOOTH",
"428 156 OFFCURVE",
"440.333 176.333 OFFCURVE",
"447 197 CURVE",
"446 198 LINE",
"443 199 LINE",
"442 199 LINE",
"438 181.667 OFFCURVE",
"428 163.333 OFFCURVE",
"412 144 CURVE SMOOTH",
"394 122.667 OFFCURVE",
"377 112 OFFCURVE",
"361 112 CURVE SMOOTH",
"343 112 OFFCURVE",
"331.667 128 OFFCURVE",
"327 160 CURVE SMOOTH",
"321 214 LINE SMOOTH",
"319 236 OFFCURVE",
"316 252.333 OFFCURVE",
"312 263 CURVE",
"341.333 265.667 OFFCURVE",
"367 274 OFFCURVE",
"389 288 CURVE SMOOTH",
"415.667 304.667 OFFCURVE",
"429 326.667 OFFCURVE",
"429 354 CURVE SMOOTH",
"429 382 OFFCURVE",
"409.667 403 OFFCURVE",
"371 417 CURVE",
"386.333 429.667 OFFCURVE",
"407 437 OFFCURVE",
"433 439 CURVE",
"435 440 LINE",
"435 440.667 OFFCURVE",
"433.667 441 OFFCURVE",
"431 441 CURVE SMOOTH",
"409.667 441 OFFCURVE",
"387.667 434 OFFCURVE",
"365 420 CURVE",
"339.667 428 OFFCURVE",
"310.667 432 OFFCURVE",
"278 432 CURVE SMOOTH",
"232.667 432 OFFCURVE",
"194 425.667 OFFCURVE",
"162 413 CURVE SMOOTH",
"96.667 387.667 OFFCURVE",
"64 348.333 OFFCURVE",
"64 295 CURVE SMOOTH",
"64 252.333 OFFCURVE",
"97 223 OFFCURVE",
"141 223 CURVE SMOOTH",
"190.333 223 OFFCURVE",
"232 257 OFFCURVE",
"232 305 CURVE SMOOTH",
"232 339.667 OFFCURVE",
"214.333 357 OFFCURVE",
"179 357 CURVE SMOOTH",
"155 357 OFFCURVE",
"131 337.667 OFFCURVE",
"131 315 CURVE SMOOTH",
"131 303.667 OFFCURVE",
"137.333 298 OFFCURVE",
"150 298 CURVE SMOOTH",
"154 298 OFFCURVE",
"156 299.667 OFFCURVE",
"156 303 CURVE",
"154 305 LINE",
"151 302 LINE",
"141 302 OFFCURVE",
"136 306.333 OFFCURVE",
"136 315 CURVE SMOOTH",
"136 339.667 OFFCURVE",
"149.333 352 OFFCURVE",
"176 352 CURVE SMOOTH",
"206 352 OFFCURVE",
"221 335.667 OFFCURVE",
"221 303 CURVE SMOOTH",
"221 261.667 OFFCURVE",
"184.333 228 OFFCURVE",
"143 228 CURVE SMOOTH",
"101.667 228 OFFCURVE",
"81 249.667 OFFCURVE",
"81 293 CURVE SMOOTH",
"81 311 OFFCURVE",
"86.333 328.333 OFFCURVE",
"97 345 CURVE SMOOTH",
"129 399 OFFCURVE",
"187.667 426 OFFCURVE",
"273 426 CURVE SMOOTH",
"305.667 426 OFFCURVE",
"333 422 OFFCURVE",
"355 414 CURVE",
"321 388.667 OFFCURVE",
"290 349.667 OFFCURVE",
"262 297 CURVE SMOOTH",
"221.333 217 OFFCURVE",
"198 173 OFFCURVE",
"192 165 CURVE SMOOTH",
"160.667 121 OFFCURVE",
"126 99 OFFCURVE",
"88 99 CURVE SMOOTH",
"65.333 99 OFFCURVE",
"54 106.333 OFFCURVE",
"54 121 CURVE SMOOTH",
"54 132.333 OFFCURVE",
"58.667 138 OFFCURVE",
"68 138 CURVE SMOOTH",
"72 138 LINE",
"72.667 137.333 OFFCURVE",
"74 137 OFFCURVE",
"76 137 CURVE SMOOTH",
"77.333 137 OFFCURVE",
"78 138 OFFCURVE",
"78 140 CURVE SMOOTH",
"78 142.667 OFFCURVE",
"75.333 144 OFFCURVE",
"70 144 CURVE SMOOTH",
"54 144 OFFCURVE",
"46 135 OFFCURVE",
"46 117 CURVE SMOOTH",
"46 100.333 OFFCURVE",
"58.667 92 OFFCURVE",
"84 92 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"282 286 LINE",
"286 283.333 OFFCURVE",
"290.333 277.667 OFFCURVE",
"295 269 CURVE",
"274 269 LINE"
);
},
{
closed = 1;
nodes = (
"304.333 280 OFFCURVE",
"296 287.667 OFFCURVE",
"284 293 CURVE",
"309.333 349 OFFCURVE",
"336.333 387 OFFCURVE",
"363 411 CURVE",
"391.667 398.333 OFFCURVE",
"406 379.333 OFFCURVE",
"406 354 CURVE SMOOTH",
"406 308.667 OFFCURVE",
"373.667 280.667 OFFCURVE",
"309 270 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01276 952 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012120 81 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 81 74 81 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 81 121 81 137 81 153 81 169 81 185 81 201 81 217 81 233 81 249 81 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 81 25 81 41 81 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01239 81 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 76 118 76 134 76 150 76 166 76 182 76 198 76 214 76 230 76 246 76 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 76 22 76 38 76 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 76 69 76 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01251 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01270 81 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012105 8 76 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01285 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 2 values pushed */\01299 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01292 85 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01285 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012116 39 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012118 81 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012124 81 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012136 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012145 81 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 81 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01264 4 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01212 72 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01270 109 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012118 109 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012129 948 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 511;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = copyright;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"305.333 -9 OFFCURVE",
"373.333 19.667 OFFCURVE",
"432 77 CURVE SMOOTH",
"490 133.667 OFFCURVE",
"519 201.667 OFFCURVE",
"519 281 CURVE SMOOTH",
"519 347.667 OFFCURVE",
"496.333 403 OFFCURVE",
"451 447 CURVE SMOOTH",
"406.333 491.667 OFFCURVE",
"350.333 514 OFFCURVE",
"283 514 CURVE SMOOTH",
"205.667 514 OFFCURVE",
"137.667 485.333 OFFCURVE",
"79 428 CURVE SMOOTH",
"21 370.667 OFFCURVE",
"-8 302.667 OFFCURVE",
"-8 224 CURVE SMOOTH",
"-8 157.333 OFFCURVE",
"14.333 101.667 OFFCURVE",
"59 57 CURVE SMOOTH",
"103.667 13 OFFCURVE",
"160 -9 OFFCURVE",
"228 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165.667 6 OFFCURVE",
"112.667 27 OFFCURVE",
"70 69 CURVE SMOOTH",
"28 111 OFFCURVE",
"7 163.667 OFFCURVE",
"7 227 CURVE SMOOTH",
"7 301 OFFCURVE",
"34.333 365 OFFCURVE",
"89 419 CURVE SMOOTH",
"143.667 473 OFFCURVE",
"208 500 OFFCURVE",
"282 500 CURVE SMOOTH",
"344.667 500 OFFCURVE",
"397 479 OFFCURVE",
"439 437 CURVE SMOOTH",
"481.667 395 OFFCURVE",
"503 342.667 OFFCURVE",
"503 280 CURVE SMOOTH",
"503 206 OFFCURVE",
"475.667 141.667 OFFCURVE",
"421 87 CURVE SMOOTH",
"367 33 OFFCURVE",
"303 6 OFFCURVE",
"229 6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"237.667 65 OFFCURVE",
"273 77 OFFCURVE",
"307 101 CURVE SMOOTH",
"344.333 127 OFFCURVE",
"363 157.667 OFFCURVE",
"363 193 CURVE SMOOTH",
"363 227.667 OFFCURVE",
"345 245 OFFCURVE",
"309 245 CURVE SMOOTH",
"272.333 245 OFFCURVE",
"250.667 230.667 OFFCURVE",
"244 202 CURVE SMOOTH",
"243 199 LINE",
"243 197 OFFCURVE",
"244 196 OFFCURVE",
"246 196 CURVE SMOOTH",
"247.333 196 OFFCURVE",
"248.333 197.333 OFFCURVE",
"249 200 CURVE SMOOTH",
"259.667 226 OFFCURVE",
"279 239 OFFCURVE",
"307 239 CURVE SMOOTH",
"336.333 239 OFFCURVE",
"351 224.667 OFFCURVE",
"351 196 CURVE SMOOTH",
"351 180.667 OFFCURVE",
"345 164.667 OFFCURVE",
"333 148 CURVE SMOOTH",
"299 96 OFFCURVE",
"255 70 OFFCURVE",
"201 70 CURVE SMOOTH",
"173 70 OFFCURVE",
"151.333 81.667 OFFCURVE",
"136 105 CURVE SMOOTH",
"122 125 OFFCURVE",
"115 149.667 OFFCURVE",
"115 179 CURVE SMOOTH",
"115 233 OFFCURVE",
"135.667 282.667 OFFCURVE",
"177 328 CURVE",
"211.667 307.333 OFFCURVE",
"254.333 297 OFFCURVE",
"305 297 CURVE SMOOTH",
"331.667 297 OFFCURVE",
"357.667 301.333 OFFCURVE",
"383 310 CURVE SMOOTH",
"419 322 OFFCURVE",
"437 338.667 OFFCURVE",
"437 360 CURVE SMOOTH",
"437 396 OFFCURVE",
"403.667 414 OFFCURVE",
"337 414 CURVE SMOOTH",
"265.667 414 OFFCURVE",
"206.667 392 OFFCURVE",
"160 348 CURVE",
"144.667 362 OFFCURVE",
"137 376.667 OFFCURVE",
"137 392 CURVE SMOOTH",
"137 424 OFFCURVE",
"156.333 440 OFFCURVE",
"195 440 CURVE SMOOTH",
"208.333 440 OFFCURVE",
"225.667 434.333 OFFCURVE",
"247 423 CURVE",
"247.667 423 OFFCURVE",
"248 423.667 OFFCURVE",
"248 425 CURVE SMOOTH",
"248 426.333 OFFCURVE",
"247.667 427.333 OFFCURVE",
"247 428 CURVE SMOOTH",
"235 440.667 OFFCURVE",
"215 447 OFFCURVE",
"187 447 CURVE SMOOTH",
"146.333 447 OFFCURVE",
"126 430 OFFCURVE",
"126 396 CURVE SMOOTH",
"126 376.667 OFFCURVE",
"135.667 359 OFFCURVE",
"155 343 CURVE",
"105.667 295.667 OFFCURVE",
"81 243 OFFCURVE",
"81 185 CURVE SMOOTH",
"81 109 OFFCURVE",
"125 65 OFFCURVE",
"201 65 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"250.667 305 OFFCURVE",
"214 314 OFFCURVE",
"182 332 CURVE",
"228.667 382 OFFCURVE",
"282 407 OFFCURVE",
"342 407 CURVE SMOOTH",
"397.333 407 OFFCURVE",
"425 392.667 OFFCURVE",
"425 364 CURVE SMOOTH",
"425 342.667 OFFCURVE",
"406.667 326.667 OFFCURVE",
"370 316 CURVE SMOOTH",
"344 308.667 OFFCURVE",
"318 305 OFFCURVE",
"292 305 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01240 952 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 48 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 40 22 40 38 40 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 40 69 40 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01258 48 74 48 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 48 25 48 41 48 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01257 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01268 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01280 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01290 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01244 4 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01212 82 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 949 92 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01257 65 59 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01280 92 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 511;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = trademark;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"329 251 OFFCURVE",
"397 298.333 OFFCURVE",
"465 393 CURVE SMOOTH",
"501.667 445 OFFCURVE",
"538 481.667 OFFCURVE",
"574 503 CURVE",
"587 498 LINE",
"573.667 483.333 OFFCURVE",
"561.667 464.333 OFFCURVE",
"551 443 CURVE SMOOTH",
"496.5 334.5 LINE SMOOTH",
"484.167 310.167 OFFCURVE",
"475.333 295.667 OFFCURVE",
"470 291 CURVE",
"440 275 LINE",
"441.333 273.667 OFFCURVE",
"445.667 273 OFFCURVE",
"453 273 CURVE SMOOTH",
"478.333 273 OFFCURVE",
"507.667 287.667 OFFCURVE",
"541 317 CURVE SMOOTH",
"553 327 OFFCURVE",
"576.333 351.667 OFFCURVE",
"611 391 CURVE SMOOTH",
"708.333 498.333 OFFCURVE",
"786.667 552 OFFCURVE",
"846 552 CURVE SMOOTH",
"861.333 552 OFFCURVE",
"869 546.667 OFFCURVE",
"869 536 CURVE SMOOTH",
"869 532 OFFCURVE",
"867 526.667 OFFCURVE",
"863 520 CURVE SMOOTH",
"860 515 OFFCURVE",
"858 512 OFFCURVE",
"858 512 CURVE SMOOTH",
"857 512 OFFCURVE",
"857 513 OFFCURVE",
"857 514 CURVE",
"859 512 LINE",
"870.333 512 OFFCURVE",
"876 521.333 OFFCURVE",
"876 540 CURVE SMOOTH",
"876 556.667 OFFCURVE",
"861.333 565 OFFCURVE",
"832 565 CURVE SMOOTH",
"775.333 565 OFFCURVE",
"701.667 511 OFFCURVE",
"611 403 CURVE SMOOTH",
"561.667 345 OFFCURVE",
"520.667 306.667 OFFCURVE",
"488 288 CURVE",
"509.333 305.333 OFFCURVE",
"528.333 338 OFFCURVE",
"545 386 CURVE SMOOTH",
"563.667 441.333 OFFCURVE",
"579.667 477.667 OFFCURVE",
"593 495 CURVE",
"615.667 485.667 OFFCURVE",
"630.667 481 OFFCURVE",
"638 481 CURVE SMOOTH",
"650 481 OFFCURVE",
"656 486.667 OFFCURVE",
"656 498 CURVE SMOOTH",
"656 514.667 OFFCURVE",
"643.667 523 OFFCURVE",
"619 523 CURVE SMOOTH",
"603.667 523 OFFCURVE",
"588 518 OFFCURVE",
"572 508 CURVE",
"498 540.667 OFFCURVE",
"446 557 OFFCURVE",
"416 557 CURVE SMOOTH",
"386.667 557 OFFCURVE",
"372 550.333 OFFCURVE",
"372 537 CURVE SMOOTH",
"372 531 OFFCURVE",
"373.667 528 OFFCURVE",
"377 528 CURVE SMOOTH",
"377.667 528 OFFCURVE",
"378.667 529 OFFCURVE",
"380 531 CURVE SMOOTH",
"386 542.333 OFFCURVE",
"398.667 548 OFFCURVE",
"418 548 CURVE SMOOTH",
"455.333 548 OFFCURVE",
"505.667 534 OFFCURVE",
"569 506 CURVE",
"543.667 489.333 OFFCURVE",
"511.667 458 OFFCURVE",
"473 412 CURVE SMOOTH",
"426.333 356 OFFCURVE",
"393.667 322 OFFCURVE",
"375 306 CURVE SMOOTH",
"335.667 272.667 OFFCURVE",
"298 256 OFFCURVE",
"262 256 CURVE SMOOTH",
"256 256 OFFCURVE",
"251 255.333 OFFCURVE",
"247 254 CURVE",
"247.667 252 OFFCURVE",
"252.333 251 OFFCURVE",
"261 251 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"140.333 382 OFFCURVE",
"126 395.667 OFFCURVE",
"120 423 CURVE",
"122 423.667 OFFCURVE",
"125 424 OFFCURVE",
"129 424 CURVE SMOOTH",
"158.333 424 OFFCURVE",
"176 411.333 OFFCURVE",
"182 386 CURVE",
"176.667 383.333 OFFCURVE",
"170.333 382 OFFCURVE",
"163 382 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"62 249 OFFCURVE",
"34 272.333 OFFCURVE",
"34 319 CURVE SMOOTH",
"34 368.333 OFFCURVE",
"58 402 OFFCURVE",
"106 420 CURVE",
"114.667 392 OFFCURVE",
"133.333 378 OFFCURVE",
"162 378 CURVE SMOOTH",
"168.667 378 OFFCURVE",
"175.667 379 OFFCURVE",
"183 381 CURVE",
"183.667 379.667 OFFCURVE",
"184 377 OFFCURVE",
"184 373 CURVE SMOOTH",
"184 335.667 OFFCURVE",
"161.667 313.667 OFFCURVE",
"117 307 CURVE SMOOTH",
"114.333 307 OFFCURVE",
"113 306.333 OFFCURVE",
"113 305 CURVE SMOOTH",
"113 303 OFFCURVE",
"113.667 302 OFFCURVE",
"115 302 CURVE SMOOTH",
"155 302 OFFCURVE",
"189 331.333 OFFCURVE",
"189 370 CURVE SMOOTH",
"189 376 OFFCURVE",
"188.667 380.333 OFFCURVE",
"188 383 CURVE",
"200.667 387.667 OFFCURVE",
"213.667 397.667 OFFCURVE",
"227 413 CURVE SMOOTH",
"240.333 428.333 OFFCURVE",
"247 442 OFFCURVE",
"247 454 CURVE",
"245 456 LINE",
"243 456 OFFCURVE",
"242 454.667 OFFCURVE",
"242 452 CURVE SMOOTH",
"242 428 OFFCURVE",
"213.667 397.333 OFFCURVE",
"187 388 CURVE",
"179 415.333 OFFCURVE",
"158.667 428.667 OFFCURVE",
"126 428 CURVE SMOOTH",
"119 428 LINE",
"118.333 430 OFFCURVE",
"118 434 OFFCURVE",
"118 440 CURVE SMOOTH",
"118 471.333 OFFCURVE",
"131 496.667 OFFCURVE",
"157 516 CURVE SMOOTH",
"179.667 534 OFFCURVE",
"207.667 543 OFFCURVE",
"241 543 CURVE SMOOTH",
"273.667 543 OFFCURVE",
"320 532.667 OFFCURVE",
"380 512 CURVE",
"363.333 500 OFFCURVE",
"342 475.333 OFFCURVE",
"316 438 CURVE SMOOTH",
"262 352 LINE SMOOTH",
"219.333 283.333 OFFCURVE",
"171.333 249 OFFCURVE",
"118 249 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"161.333 243 OFFCURVE",
"206.333 259.667 OFFCURVE",
"247 293 CURVE SMOOTH",
"279 319 OFFCURVE",
"306 356 OFFCURVE",
"328 404 CURVE SMOOTH",
"353.333 457.333 OFFCURVE",
"372.667 492.667 OFFCURVE",
"390 510 CURVE",
"406.667 504 OFFCURVE",
"420.333 501 OFFCURVE",
"431 501 CURVE SMOOTH",
"451.667 501 OFFCURVE",
"462 506.667 OFFCURVE",
"462 518 CURVE SMOOTH",
"462 529.333 OFFCURVE",
"454.333 535 OFFCURVE",
"439 535 CURVE SMOOTH",
"422.333 535 OFFCURVE",
"404.667 528.667 OFFCURVE",
"386 516 CURVE",
"310 543.333 OFFCURVE",
"257.667 557 OFFCURVE",
"229 557 CURVE SMOOTH",
"192.333 557 OFFCURVE",
"162.667 547.667 OFFCURVE",
"140 529 CURVE SMOOTH",
"114.667 509 OFFCURVE",
"102 481.333 OFFCURVE",
"102 446 CURVE SMOOTH",
"102 439.333 OFFCURVE",
"102.667 432.667 OFFCURVE",
"104 426 CURVE",
"56 416.667 OFFCURVE",
"17 374.333 OFFCURVE",
"17 325 CURVE SMOOTH",
"17 301 OFFCURVE",
"27 281 OFFCURVE",
"47 265 CURVE SMOOTH",
"64.333 250.333 OFFCURVE",
"86 243 OFFCURVE",
"112 243 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"423.667 505 OFFCURVE",
"411.333 507.667 OFFCURVE",
"394 513 CURVE",
"408.667 526.333 OFFCURVE",
"423 533 OFFCURVE",
"437 533 CURVE SMOOTH",
"450.333 533 OFFCURVE",
"457 528 OFFCURVE",
"457 518 CURVE SMOOTH",
"457 509.333 OFFCURVE",
"448.333 505 OFFCURVE",
"431 505 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"645 255 OFFCURVE",
"653.667 258.667 OFFCURVE",
"667 266 CURVE SMOOTH",
"680.333 273.333 OFFCURVE",
"687 279 OFFCURVE",
"687 283 CURVE",
"686 283 LINE SMOOTH",
"684.667 283 OFFCURVE",
"683.667 282.667 OFFCURVE",
"683 282 CURVE",
"682 282 LINE",
"668.667 268 OFFCURVE",
"658 261 OFFCURVE",
"650 261 CURVE SMOOTH",
"645.333 261 OFFCURVE",
"643 265.667 OFFCURVE",
"643 275 CURVE SMOOTH",
"643 294.333 OFFCURVE",
"652.667 325.333 OFFCURVE",
"672 368 CURVE SMOOTH",
"698.667 426 OFFCURVE",
"727.667 472 OFFCURVE",
"759 506 CURVE SMOOTH",
"761.667 509.333 OFFCURVE",
"763.833 511.833 OFFCURVE",
"765.5 513.5 CURVE SMOOTH",
"769 518 LINE",
"762.333 515.333 OFFCURVE",
"745 499 OFFCURVE",
"717 469 CURVE SMOOTH",
"687.5 436.5 LINE SMOOTH",
"679.167 427.5 OFFCURVE",
"672.667 419.667 OFFCURVE",
"668 413 CURVE SMOOTH",
"657.333 398.333 OFFCURVE",
"648.667 385 OFFCURVE",
"642 373 CURVE SMOOTH",
"627.333 344.333 OFFCURVE",
"620 316.333 OFFCURVE",
"620 289 CURVE SMOOTH",
"620 266.333 OFFCURVE",
"627 255 OFFCURVE",
"641 255 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"630.667 488 OFFCURVE",
"618 491.667 OFFCURVE",
"596 499 CURVE",
"607 512 LINE",
"602.333 512 OFFCURVE",
"596.667 508 OFFCURVE",
"590 500 CURVE",
"579 505 LINE",
"593.667 513.667 OFFCURVE",
"606.667 518 OFFCURVE",
"618 518 CURVE SMOOTH",
"636 518 OFFCURVE",
"645 511.667 OFFCURVE",
"645 499 CURVE SMOOTH",
"645 491.667 OFFCURVE",
"641.333 488 OFFCURVE",
"634 488 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012177 117 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 951 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 21 186 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01249 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01256 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01272 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01296 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 177 118 177 134 177 150 177 166 177 182 177 198 177 214 177 230 177 246 177 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 177 22 177 38 177 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 177 69 177 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012177 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012123 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012137 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012140 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012141 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012149 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012153 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012171 117 133 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012184 117 177 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012177 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012186 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012186 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012207 113 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 949 145 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012131 949 104 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012145 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01249 113 207 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 113 207 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01272 104 131 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012131 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012145 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01296 113 207 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012145 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012135 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012137 104 131 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012145 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012131 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012147 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012147 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012149 145 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012153 104 131 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012207 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012180 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012184 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012184 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012207 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012190 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012190 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012196 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012196 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 881;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = acute;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"37 242.667 OFFCURVE",
"55.667 250 OFFCURVE",
"91 266 CURVE SMOOTH",
"125 281.333 OFFCURVE",
"143.333 291.667 OFFCURVE",
"146 297 CURVE SMOOTH",
"152.667 307.667 OFFCURVE",
"142 315 OFFCURVE",
"130 315 CURVE SMOOTH",
"122 315 OFFCURVE",
"114 312 OFFCURVE",
"106 306 CURVE SMOOTH",
"34 251 LINE",
"33 250 LINE",
"33 248 LINE SMOOTH",
"33 246.667 OFFCURVE",
"33.667 245.333 OFFCURVE",
"35 244 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 158;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = dieresis;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"164.333 318 OFFCURVE",
"172 326 OFFCURVE",
"172 342 CURVE SMOOTH",
"172 358.667 OFFCURVE",
"163.667 367 OFFCURVE",
"147 367 CURVE SMOOTH",
"131 367 OFFCURVE",
"123 358.667 OFFCURVE",
"123 342 CURVE SMOOTH",
"123 326 OFFCURVE",
"131.667 318 OFFCURVE",
"149 318 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"69 318 OFFCURVE",
"77 326 OFFCURVE",
"77 342 CURVE SMOOTH",
"77 358.667 OFFCURVE",
"68.667 367 OFFCURVE",
"52 367 CURVE SMOOTH",
"36 367 OFFCURVE",
"28 358.667 OFFCURVE",
"28 342 CURVE SMOOTH",
"28 326 OFFCURVE",
"36.333 318 OFFCURVE",
"53 318 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 949 2 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 206;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = AE;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-41 -83 OFFCURVE",
"4 -67 OFFCURVE",
"61 -34 CURVE",
"80 -43 OFFCURVE",
"103 -50 OFFCURVE",
"132 -50 CURVE SMOOTH",
"136 -50 OFFCURVE",
"138 -49 OFFCURVE",
"138 -47 CURVE SMOOTH",
"138 -45.667 OFFCURVE",
"136 -45 OFFCURVE",
"132 -45 CURVE SMOOTH",
"105.333 -41.667 OFFCURVE",
"84.667 -36 OFFCURVE",
"70 -28 CURVE",
"99.333 -12 OFFCURVE",
"135 17 OFFCURVE",
"179 57 CURVE SMOOTH",
"288 159 LINE",
"349.333 163 OFFCURVE",
"394.333 164.667 OFFCURVE",
"425 166 CURVE",
"425 158 OFFCURVE",
"433.333 150 OFFCURVE",
"440 150 CURVE SMOOTH",
"448 150 OFFCURVE",
"453 156 OFFCURVE",
"455 168 CURVE",
"465 168.667 OFFCURVE",
"470 172.667 OFFCURVE",
"470 180 CURVE SMOOTH",
"470 182 OFFCURVE",
"468 183 OFFCURVE",
"464 183 CURVE SMOOTH",
"457 183 LINE",
"475.667 275 OFFCURVE",
"492 345.333 OFFCURVE",
"504 396 CURVE SMOOTH",
"505.333 401.333 OFFCURVE",
"505 405 OFFCURVE",
"503 407 CURVE",
"515 431 OFFCURVE",
"521 450 OFFCURVE",
"521 464 CURVE SMOOTH",
"521 487 OFFCURVE",
"507 499 OFFCURVE",
"478 499 CURVE SMOOTH",
"473 499 OFFCURVE",
"471 497 OFFCURVE",
"471 494 CURVE SMOOTH",
"471 493.333 OFFCURVE",
"472.667 492.333 OFFCURVE",
"476 491 CURVE",
"490.667 491 OFFCURVE",
"498 484 OFFCURVE",
"498 470 CURVE SMOOTH",
"498 442.667 OFFCURVE",
"467 390.667 OFFCURVE",
"405 314 CURVE SMOOTH",
"361 258 OFFCURVE",
"319 212 OFFCURVE",
"279 172 CURVE",
"213 164.667 OFFCURVE",
"168 157.667 OFFCURVE",
"144 151 CURVE SMOOTH",
"93.333 137 OFFCURVE",
"55 113.333 OFFCURVE",
"29 80 CURVE SMOOTH",
"14.333 63.333 OFFCURVE",
"7 46.333 OFFCURVE",
"7 29 CURVE SMOOTH",
"7 3.667 OFFCURVE",
"21.667 -15.333 OFFCURVE",
"51 -28 CURVE",
"2 -59 OFFCURVE",
"-39 -74 OFFCURVE",
"-72 -74 CURVE SMOOTH",
"-87 -74 OFFCURVE",
"-95 -70 OFFCURVE",
"-95 -61 CURVE SMOOTH",
"-95 -57 OFFCURVE",
"-93.333 -50.667 OFFCURVE",
"-90 -42 CURVE",
"-94.667 -44 OFFCURVE",
"-97.333 -47.667 OFFCURVE",
"-98 -53 CURVE",
"-102 -59 OFFCURVE",
"-104 -64 OFFCURVE",
"-104 -68 CURVE SMOOTH",
"-104 -79 OFFCURVE",
"-94 -83 OFFCURVE",
"-75 -83 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"42 -10.333 OFFCURVE",
"33 4 OFFCURVE",
"33 20 CURVE SMOOTH",
"33 52.667 OFFCURVE",
"63.667 84.667 OFFCURVE",
"125 116 CURVE SMOOTH",
"159 132.667 OFFCURVE",
"205 146 OFFCURVE",
"263 156 CURVE",
"233 126.667 OFFCURVE",
"209.5 104 OFFCURVE",
"192.5 88 CURVE SMOOTH",
"161 59 LINE SMOOTH",
"119.667 20.333 OFFCURVE",
"86.667 -7 OFFCURVE",
"60 -23 CURVE"
);
},
{
closed = 1;
nodes = (
"127.667 50 OFFCURVE",
"177.667 92 OFFCURVE",
"251 176 CURVE SMOOTH",
"319 253.333 OFFCURVE",
"359.667 310.333 OFFCURVE",
"377 345 CURVE SMOOTH",
"388.333 367.667 OFFCURVE",
"394 390.667 OFFCURVE",
"394 414 CURVE SMOOTH",
"394 456.667 OFFCURVE",
"369 489 OFFCURVE",
"325 489 CURVE SMOOTH",
"289.667 489 OFFCURVE",
"256.667 471 OFFCURVE",
"226 435 CURVE SMOOTH",
"202.667 407 OFFCURVE",
"183.667 373 OFFCURVE",
"169 333 CURVE SMOOTH",
"157.667 303.667 OFFCURVE",
"152 269.667 OFFCURVE",
"152 231 CURVE SMOOTH",
"152 180.333 OFFCURVE",
"163.333 139.667 OFFCURVE",
"186 109 CURVE SMOOTH",
"212 74.333 OFFCURVE",
"249.667 57 OFFCURVE",
"299 57 CURVE SMOOTH",
"324.333 57 OFFCURVE",
"343 63.333 OFFCURVE",
"355 76 CURVE SMOOTH",
"356 77 LINE",
"356 78 LINE SMOOTH",
"356 79.333 OFFCURVE",
"355 80.667 OFFCURVE",
"353 82 CURVE",
"351 80 LINE SMOOTH",
"339.667 68.667 OFFCURVE",
"322.333 63 OFFCURVE",
"299 63 CURVE SMOOTH",
"252.333 63 OFFCURVE",
"217.667 79.333 OFFCURVE",
"195 112 CURVE SMOOTH",
"174.333 139.333 OFFCURVE",
"164 177 OFFCURVE",
"164 225 CURVE SMOOTH",
"164 263 OFFCURVE",
"170 298.667 OFFCURVE",
"182 332 CURVE SMOOTH",
"194.667 368.667 OFFCURVE",
"212.333 401 OFFCURVE",
"235 429 CURVE SMOOTH",
"263 464.333 OFFCURVE",
"293.333 482 OFFCURVE",
"326 482 CURVE SMOOTH",
"362 482 OFFCURVE",
"383 455.667 OFFCURVE",
"383 417 CURVE SMOOTH",
"383 396.333 OFFCURVE",
"377 373 OFFCURVE",
"365 347 CURVE SMOOTH",
"327.667 267 OFFCURVE",
"266.333 192.667 OFFCURVE",
"181 118 CURVE SMOOTH",
"150.333 91.333 OFFCURVE",
"123 70.667 OFFCURVE",
"99 56 CURVE",
"98.333 56 OFFCURVE",
"98 54.667 OFFCURVE",
"98 52 CURVE",
"99.333 50.667 OFFCURVE",
"100.333 50 OFFCURVE",
"101 50 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"354.667 220.667 OFFCURVE",
"387 252.333 OFFCURVE",
"403 271 CURVE SMOOTH",
"435.667 305.667 OFFCURVE",
"463.667 342 OFFCURVE",
"487 380 CURVE",
"458 284 LINE SMOOTH",
"444.667 240 OFFCURVE",
"435.667 205.333 OFFCURVE",
"429 180 CURVE",
"418.333 178.667 OFFCURVE",
"399 178 OFFCURVE",
"367 178 CURVE SMOOTH",
"331.5 176.5 LINE SMOOTH",
"321.167 176.167 OFFCURVE",
"312 175.333 OFFCURVE",
"304 174 CURVE"
);
},
{
closed = 1;
nodes = (
"558 -21 OFFCURVE",
"566.167 -20.667 OFFCURVE",
"574.5 -20 CURVE SMOOTH",
"601 -18 LINE SMOOTH",
"650.333 -12 OFFCURVE",
"694 1.333 OFFCURVE",
"732 22 CURVE SMOOTH",
"782.667 49.333 OFFCURVE",
"809.667 83.333 OFFCURVE",
"813 124 CURVE SMOOTH",
"813 129.333 OFFCURVE",
"812 132 OFFCURVE",
"810 132 CURVE SMOOTH",
"808 132 OFFCURVE",
"806.667 129.333 OFFCURVE",
"806 124 CURVE SMOOTH",
"802.667 89.333 OFFCURVE",
"776.667 59.667 OFFCURVE",
"728 35 CURVE SMOOTH",
"692 16.333 OFFCURVE",
"652 4 OFFCURVE",
"608 -2 CURVE SMOOTH",
"592 -4.667 OFFCURVE",
"577.333 -6 OFFCURVE",
"564 -6 CURVE SMOOTH",
"528 -6 OFFCURVE",
"497.667 1 OFFCURVE",
"473 15 CURVE SMOOTH",
"440.333 31.667 OFFCURVE",
"424 56 OFFCURVE",
"424 88 CURVE SMOOTH",
"424 113.333 OFFCURVE",
"435.667 137 OFFCURVE",
"459 159 CURVE SMOOTH",
"485.667 184.333 OFFCURVE",
"525 203.667 OFFCURVE",
"577 217 CURVE SMOOTH",
"623 228.333 OFFCURVE",
"667.333 233 OFFCURVE",
"710 231 CURVE SMOOTH",
"724.667 231 OFFCURVE",
"732 235 OFFCURVE",
"732 243 CURVE SMOOTH",
"732 249.667 OFFCURVE",
"725.667 253 OFFCURVE",
"713 253 CURVE SMOOTH",
"676.333 251 OFFCURVE",
"642.667 255.667 OFFCURVE",
"612 267 CURVE SMOOTH",
"579 278 OFFCURVE",
"562 294 OFFCURVE",
"562 313 CURVE SMOOTH",
"562 335 OFFCURVE",
"575 356 OFFCURVE",
"597 376 CURVE SMOOTH",
"616.333 393.333 OFFCURVE",
"641.333 407 OFFCURVE",
"672 417 CURVE SMOOTH",
"701.333 427.667 OFFCURVE",
"729.333 432 OFFCURVE",
"756 432 CURVE SMOOTH",
"802 432 OFFCURVE",
"825 416.333 OFFCURVE",
"825 385 CURVE SMOOTH",
"825 365 OFFCURVE",
"814 349.333 OFFCURVE",
"798 348 CURVE SMOOTH",
"791.333 348 OFFCURVE",
"788 346.333 OFFCURVE",
"788 343 CURVE SMOOTH",
"788 339.667 OFFCURVE",
"791.667 338.667 OFFCURVE",
"799 340 CURVE SMOOTH",
"813.667 342.667 OFFCURVE",
"823.333 348.333 OFFCURVE",
"834 355 CURVE",
"844.667 365 OFFCURVE",
"850 376.333 OFFCURVE",
"850 389 CURVE SMOOTH",
"850 408.333 OFFCURVE",
"839 423 OFFCURVE",
"817 433 CURVE SMOOTH",
"799.667 441 OFFCURVE",
"780 445 OFFCURVE",
"758 445 CURVE SMOOTH",
"732 445 OFFCURVE",
"703.667 440.667 OFFCURVE",
"673 432 CURVE SMOOTH",
"637.667 423.333 OFFCURVE",
"606 409 OFFCURVE",
"578 389 CURVE SMOOTH",
"546 366 OFFCURVE",
"528 341 OFFCURVE",
"528 314 CURVE SMOOTH",
"528 295 OFFCURVE",
"540 279 OFFCURVE",
"564 266 CURVE SMOOTH",
"586 254.667 OFFCURVE",
"608.333 249.333 OFFCURVE",
"631 250 CURVE",
"583 240 OFFCURVE",
"556.667 234.333 OFFCURVE",
"552 233 CURVE SMOOTH",
"510.667 219.667 OFFCURVE",
"475.333 202.333 OFFCURVE",
"446 181 CURVE SMOOTH",
"408 151.667 OFFCURVE",
"389 119.333 OFFCURVE",
"389 84 CURVE SMOOTH",
"389 49.333 OFFCURVE",
"407 22 OFFCURVE",
"443 2 CURVE SMOOTH",
"472.333 -13.333 OFFCURVE",
"508 -21 OFFCURVE",
"550 -21 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012141 951 86 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012215 951 160 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012105 951 97 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012180 951 192 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 86 180 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012170 160 186 160 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 160 121 160 137 160 153 160 169 160 185 160 201 160 217 160 233 160 249 160 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 160 25 160 41 160 57 160 73 160 89 160 105 160 121 160 137 160 153 160 169 160 185 160 201 160 217 160 233 160 249 160 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 160 25 160 41 160 57 160 73 160 89 160 105 160 121 160 137 160 153 160 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012160 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01238 86 180 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012160 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01262 86 180 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01284 86 180 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012170 97 186 97 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012122 86 180 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012127 86 180 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012137 86 180 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 141 118 141 134 141 150 141 166 141 182 141 198 141 214 141 230 141 246 141 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 141 22 141 38 141 54 141 70 141 86 141 102 141 118 141 134 141 150 141 166 141 182 141 198 141 214 141 230 141 246 141 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 141 22 141 38 141 54 141 70 141 86 141 102 141 118 141 134 141 150 141 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 141 181 141 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012166 86 180 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012105 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012170 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012170 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 192 186 192 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 192 121 192 137 192 153 192 169 192 185 192 201 192 217 192 233 192 249 192 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 192 25 192 41 192 57 192 73 192 89 192 105 192 121 192 137 192 153 192 169 192 185 192 201 192 217 192 233 192 249 192 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 192 25 192 41 192 57 192 73 192 89 192 105 192 121 192 137 192 153 192 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012180 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012231 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\012130 40 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012176 209 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0129 40 5 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01238 40 130 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012122 209 176 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012127 40 130 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012137 40 130 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012209 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012205 947 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012166 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012166 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 866;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = Oslash;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"236.333 -115 OFFCURVE",
"237.5 -114.5 OFFCURVE",
"238.5 -113.5 CURVE SMOOTH",
"242 -110 LINE",
"258 -88.667 OFFCURVE",
"277 -57 OFFCURVE",
"297 -13 CURVE",
"345 -6.333 OFFCURVE",
"388.667 7.667 OFFCURVE",
"434 29 CURVE SMOOTH",
"504 63 OFFCURVE",
"555.333 107.667 OFFCURVE",
"588 163 CURVE SMOOTH",
"609 200 OFFCURVE",
"620 236 OFFCURVE",
"620 270 CURVE SMOOTH",
"620 281 OFFCURVE",
"619 291 OFFCURVE",
"617 301 CURVE SMOOTH",
"607 356.333 OFFCURVE",
"571 398.333 OFFCURVE",
"509 427 CURVE SMOOTH",
"489 435 LINE",
"507.667 466.333 OFFCURVE",
"523.333 482.667 OFFCURVE",
"536 484 CURVE SMOOTH",
"539.333 484 OFFCURVE",
"543.333 482.333 OFFCURVE",
"548 479 CURVE SMOOTH",
"552.667 475.667 OFFCURVE",
"555.667 474 OFFCURVE",
"557 474 CURVE SMOOTH",
"558.333 474 OFFCURVE",
"559 474.667 OFFCURVE",
"559 476 CURVE SMOOTH",
"559 477.333 OFFCURVE",
"559.333 478.667 OFFCURVE",
"560 480 CURVE",
"558.667 487.333 OFFCURVE",
"556 492.667 OFFCURVE",
"552 496 CURVE SMOOTH",
"542.667 502.667 OFFCURVE",
"533.333 506 OFFCURVE",
"524 506 CURVE SMOOTH",
"505.333 505.333 OFFCURVE",
"484.333 485 OFFCURVE",
"461 445 CURVE",
"455 446.333 OFFCURVE",
"448.667 447.667 OFFCURVE",
"442 449 CURVE SMOOTH",
"422 453 LINE",
"407.333 502.333 OFFCURVE",
"368.333 530 OFFCURVE",
"315 530 CURVE SMOOTH",
"251.667 530 OFFCURVE",
"203 503.333 OFFCURVE",
"169 450 CURVE SMOOTH",
"162.333 440.667 OFFCURVE",
"158 432.333 OFFCURVE",
"154 423 CURVE",
"115.333 407 OFFCURVE",
"82 387.667 OFFCURVE",
"58 365 CURVE SMOOTH",
"22 333 OFFCURVE",
"5 296 OFFCURVE",
"5 254 CURVE SMOOTH",
"5 245 OFFCURVE",
"5 236 OFFCURVE",
"7 227 CURVE SMOOTH",
"13.667 192.333 OFFCURVE",
"43.333 158.667 OFFCURVE",
"78 144 CURVE",
"74 129 OFFCURVE",
"73 115 OFFCURVE",
"73 102 CURVE SMOOTH",
"73 53 OFFCURVE",
"94 20 OFFCURVE",
"132 1 CURVE SMOOTH",
"154.667 -12.333 OFFCURVE",
"185.333 -19 OFFCURVE",
"224 -19 CURVE SMOOTH",
"240.667 -19 OFFCURVE",
"257 -18 OFFCURVE",
"273 -16 CURVE",
"262.333 -46.667 OFFCURVE",
"248.667 -73.667 OFFCURVE",
"234 -99 CURVE SMOOTH",
"231.333 -103 OFFCURVE",
"230 -107 OFFCURVE",
"230 -111 CURVE SMOOTH",
"230.667 -113.667 OFFCURVE",
"232.333 -115 OFFCURVE",
"235 -115 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193 -2 OFFCURVE",
"170.667 4.667 OFFCURVE",
"152 18 CURVE SMOOTH",
"132 34 OFFCURVE",
"119.667 54.333 OFFCURVE",
"115 79 CURVE SMOOTH",
"114 87 OFFCURVE",
"113 96 OFFCURVE",
"113 105 CURVE SMOOTH",
"113 114 OFFCURVE",
"114 124 OFFCURVE",
"115 134 CURVE",
"143 127.333 OFFCURVE",
"168.333 123 OFFCURVE",
"195 123 CURVE SMOOTH",
"258.333 123 OFFCURVE",
"311.667 144.667 OFFCURVE",
"355 188 CURVE",
"330 121 LINE",
"320.667 101.667 OFFCURVE",
"312.333 81.833 OFFCURVE",
"305 61.5 CURVE SMOOTH",
"297.667 41.167 OFFCURVE",
"290 21.333 OFFCURVE",
"282 2 CURVE",
"260.667 -0.667 OFFCURVE",
"241.667 -2 OFFCURVE",
"219 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"45 177 OFFCURVE",
"24 206 OFFCURVE",
"24 249 CURVE SMOOTH",
"24 283 OFFCURVE",
"42 315 OFFCURVE",
"77 344 CURVE SMOOTH",
"95.667 360 OFFCURVE",
"116.667 373.667 OFFCURVE",
"140 385 CURVE",
"135 366 OFFCURVE",
"133 346 OFFCURVE",
"133 325 CURVE SMOOTH",
"133 310 OFFCURVE",
"134 294 OFFCURVE",
"137 278 CURVE SMOOTH",
"138.333 268 OFFCURVE",
"141 261.667 OFFCURVE",
"145 259 CURVE",
"116.333 228.333 OFFCURVE",
"96 195.667 OFFCURVE",
"84 161 CURVE"
);
},
{
closed = 1;
nodes = (
"171.333 139 OFFCURVE",
"146 142.333 OFFCURVE",
"120 149 CURVE",
"133.333 200.333 OFFCURVE",
"161 246 OFFCURVE",
"203 286 CURVE SMOOTH",
"243 322.667 OFFCURVE",
"282 345 OFFCURVE",
"320 353 CURVE SMOOTH",
"324 354.333 OFFCURVE",
"325.667 356.333 OFFCURVE",
"325 359 CURVE SMOOTH",
"324.333 361 OFFCURVE",
"322 361.667 OFFCURVE",
"318 361 CURVE SMOOTH",
"275.333 353.667 OFFCURVE",
"231.333 332 OFFCURVE",
"186 296 CURVE SMOOTH",
"172.667 286.667 OFFCURVE",
"160.333 275.667 OFFCURVE",
"149 263 CURVE",
"149.667 266.333 OFFCURVE",
"149.667 271.333 OFFCURVE",
"149 278 CURVE SMOOTH",
"146 295 OFFCURVE",
"144 311 OFFCURVE",
"144 327 CURVE SMOOTH",
"144 349 OFFCURVE",
"147 370 OFFCURVE",
"153 390 CURVE",
"173 400.667 OFFCURVE",
"194.667 409.333 OFFCURVE",
"220 416 CURVE SMOOTH",
"272 432.667 OFFCURVE",
"319.333 441 OFFCURVE",
"362 441 CURVE SMOOTH",
"378.667 441 OFFCURVE",
"395.667 440 OFFCURVE",
"413 438 CURVE",
"414 433 LINE SMOOTH",
"417 418 OFFCURVE",
"419 404 OFFCURVE",
"419 389 CURVE SMOOTH",
"419 374 OFFCURVE",
"417 359 OFFCURVE",
"415 344 CURVE",
"408.333 328.667 OFFCURVE",
"401.667 312.167 OFFCURVE",
"395 294.5 CURVE SMOOTH",
"388.333 276.833 OFFCURVE",
"380.667 258 OFFCURVE",
"372 238 CURVE",
"358.667 218 OFFCURVE",
"344 199.667 OFFCURVE",
"324 185 CURVE SMOOTH",
"287.333 154.333 OFFCURVE",
"244.667 139 OFFCURVE",
"196 139 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"319 34 OFFCURVE",
"332.333 66.667 OFFCURVE",
"347 104 CURVE SMOOTH",
"393 224.667 OFFCURVE",
"427 309.667 OFFCURVE",
"449 359 CURVE SMOOTH",
"459.667 381.667 OFFCURVE",
"470.333 402.333 OFFCURVE",
"481 421 CURVE",
"496 415 LINE SMOOTH",
"555 389 OFFCURVE",
"587 346 OFFCURVE",
"587 288 CURVE SMOOTH",
"587 257 OFFCURVE",
"577 223 OFFCURVE",
"558 187 CURVE SMOOTH",
"499.333 86.333 OFFCURVE",
"415.667 26 OFFCURVE",
"307 6 CURVE"
);
},
{
closed = 1;
nodes = (
"168 429.333 OFFCURVE",
"168.333 430.333 OFFCURVE",
"169 431 CURVE SMOOTH",
"171 434 LINE SMOOTH",
"194.333 474 OFFCURVE",
"226.333 501 OFFCURVE",
"267 515 CURVE SMOOTH",
"284.333 521.667 OFFCURVE",
"301 525 OFFCURVE",
"317 525 CURVE SMOOTH",
"363 525 OFFCURVE",
"393 502 OFFCURVE",
"407 456 CURVE",
"388.333 458.667 OFFCURVE",
"366.667 460 OFFCURVE",
"344 460 CURVE SMOOTH",
"296.667 460 OFFCURVE",
"246 452.333 OFFCURVE",
"192 437 CURVE SMOOTH",
"184 434.333 OFFCURVE",
"174.667 430.667 OFFCURVE",
"168 428 CURVE"
);
},
{
closed = 1;
nodes = (
"431 396 LINE SMOOTH",
"430.333 402.667 OFFCURVE",
"430 409.167 OFFCURVE",
"430 415.5 CURVE SMOOTH",
"430 421.833 OFFCURVE",
"429.333 428 OFFCURVE",
"428 434 CURVE",
"427 436 LINE",
"440.5 433 LINE SMOOTH",
"444.833 432.333 OFFCURVE",
"449 431.333 OFFCURVE",
"453 430 CURVE",
"449.667 422.667 OFFCURVE",
"446.167 415.167 OFFCURVE",
"442.5 407.5 CURVE SMOOTH",
"431 382 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01255 65 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01288 36 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012114 36 88 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012151 65 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012153 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012153 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 674;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = plusminus;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"273.333 92 OFFCURVE",
"283.333 97.333 OFFCURVE",
"284 108 CURVE",
"306 235 LINE",
"384 238.5 LINE SMOOTH",
"404 239.5 OFFCURVE",
"418.667 240 OFFCURVE",
"428 240 CURVE SMOOTH",
"440.667 240 OFFCURVE",
"447 244 OFFCURVE",
"447 252 CURVE SMOOTH",
"447 260.667 OFFCURVE",
"441.667 265 OFFCURVE",
"431 265 CURVE SMOOTH",
"415.667 265.667 OFFCURVE",
"398 266 OFFCURVE",
"378 266 CURVE SMOOTH",
"358 266 OFFCURVE",
"335.667 266 OFFCURVE",
"311 266 CURVE",
"327.5 351.5 LINE SMOOTH",
"331.833 374.5 OFFCURVE",
"335.667 391.667 OFFCURVE",
"339 403 CURVE SMOOTH",
"341.667 413.667 OFFCURVE",
"339.333 419 OFFCURVE",
"332 419 CURVE SMOOTH",
"322 419 OFFCURVE",
"315.667 412.667 OFFCURVE",
"313 400 CURVE SMOOTH",
"281 266 LINE",
"277 266 OFFCURVE",
"268.833 266.167 OFFCURVE",
"256.5 266.5 CURVE SMOOTH",
"206 268 LINE SMOOTH",
"195.333 268.667 OFFCURVE",
"185.5 269 OFFCURVE",
"176.5 269 CURVE SMOOTH",
"152 269 LINE SMOOTH",
"138 269 OFFCURVE",
"131 260.333 OFFCURVE",
"131 243 CURVE SMOOTH",
"131 230.333 OFFCURVE",
"134.333 224 OFFCURVE",
"141 224 CURVE SMOOTH",
"272 233 LINE",
"240 108 LINE SMOOTH",
"237.333 97.333 OFFCURVE",
"242 92 OFFCURVE",
"254 92 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"206 28 OFFCURVE",
"287 32 OFFCURVE",
"381 32 CURVE SMOOTH",
"391.667 32 OFFCURVE",
"397 35.333 OFFCURVE",
"397 42 CURVE SMOOTH",
"397 52 OFFCURVE",
"390.667 57 OFFCURVE",
"378 57 CURVE SMOOTH",
"364.667 57.667 OFFCURVE",
"346 58.333 OFFCURVE",
"322 59 CURVE SMOOTH",
"232 62 LINE SMOOTH",
"184.667 64 OFFCURVE",
"153.333 65 OFFCURVE",
"138 65 CURVE SMOOTH",
"127.333 65 OFFCURVE",
"122 59 OFFCURVE",
"122 47 CURVE SMOOTH",
"122 28.333 OFFCURVE",
"127.333 19.333 OFFCURVE",
"138 20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01243 949 35 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01224 10 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01213 10 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 423;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = yen;
lastChange = "2021-05-18 16:58:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"485 377 OFFCURVE",
"481 388 OFFCURVE",
"472 397 CURVE SMOOTH",
"464 406 OFFCURVE",
"453 410 OFFCURVE",
"441 410 CURVE SMOOTH",
"403 410 OFFCURVE",
"351 361 OFFCURVE",
"288 262 CURVE SMOOTH",
"276 243 OFFCURVE",
"267 227 OFFCURVE",
"260 217 CURVE SMOOTH",
"256 210 OFFCURVE",
"253 207 OFFCURVE",
"253 205 CURVE",
"240 185 LINE",
"238 212 OFFCURVE",
"233 238 OFFCURVE",
"225 263 CURVE SMOOTH",
"216 292 OFFCURVE",
"202 317 OFFCURVE",
"185 337 CURVE SMOOTH",
"163 363 OFFCURVE",
"138 376 OFFCURVE",
"112 376 CURVE SMOOTH",
"93 376 OFFCURVE",
"77 367 OFFCURVE",
"65 348 CURVE SMOOTH",
"53 331 OFFCURVE",
"48 313 OFFCURVE",
"48 293 CURVE SMOOTH",
"48 273 OFFCURVE",
"54 255 OFFCURVE",
"65 239 CURVE SMOOTH",
"66 238 OFFCURVE",
"67 237 OFFCURVE",
"69 237 CURVE SMOOTH",
"72 237 OFFCURVE",
"73 239 OFFCURVE",
"73 242 CURVE SMOOTH",
"73 241 OFFCURVE",
"70 246 OFFCURVE",
"65 259 CURVE SMOOTH",
"59 271 OFFCURVE",
"56 283 OFFCURVE",
"56 293 CURVE SMOOTH",
"56 310 OFFCURVE",
"61 326 OFFCURVE",
"71 341 CURVE SMOOTH",
"83 359 OFFCURVE",
"96 367 OFFCURVE",
"112 367 CURVE SMOOTH",
"138 367 OFFCURVE",
"160 348 OFFCURVE",
"180 310 CURVE SMOOTH",
"194 283 OFFCURVE",
"204 253 OFFCURVE",
"209 219 CURVE",
"127 219 LINE SMOOTH",
"126 219 OFFCURVE",
"123 218 OFFCURVE",
"120 214 CURVE SMOOTH",
"117 211 OFFCURVE",
"115 208 OFFCURVE",
"115 206 CURVE SMOOTH",
"115 205 OFFCURVE",
"116 205 OFFCURVE",
"117 205 CURVE SMOOTH",
"211 205 LINE",
"214 186 OFFCURVE",
"216 166 OFFCURVE",
"216 147 CURVE",
"213 142 LINE",
"61 142 LINE SMOOTH",
"59 142 OFFCURVE",
"57 140 OFFCURVE",
"54 137 CURVE SMOOTH",
"51 134 OFFCURVE",
"49 131 OFFCURVE",
"49 129 CURVE SMOOTH",
"49 128 OFFCURVE",
"50 127 OFFCURVE",
"51 127 CURVE SMOOTH",
"203 127 LINE",
"175 86 OFFCURVE",
"152 56 OFFCURVE",
"135 36 CURVE SMOOTH",
"100 -2 OFFCURVE",
"70 -21 OFFCURVE",
"43 -21 CURVE SMOOTH",
"36 -21 OFFCURVE",
"33 -22 OFFCURVE",
"33 -25 CURVE SMOOTH",
"33 -28 OFFCURVE",
"38 -29 OFFCURVE",
"46 -29 CURVE SMOOTH",
"83 -29 OFFCURVE",
"120 -11 OFFCURVE",
"157 26 CURVE SMOOTH",
"180 49 OFFCURVE",
"207 82 OFFCURVE",
"237 127 CURVE",
"303 127 LINE SMOOTH",
"306 127 OFFCURVE",
"308 129 OFFCURVE",
"311 132 CURVE SMOOTH",
"314 136 OFFCURVE",
"315 138 OFFCURVE",
"315 140 CURVE SMOOTH",
"315 141 OFFCURVE",
"315 142 OFFCURVE",
"313 142 CURVE SMOOTH",
"246 142 LINE",
"262 170 OFFCURVE",
"274 190 OFFCURVE",
"281 205 CURVE",
"348 205 LINE SMOOTH",
"350 205 OFFCURVE",
"353 206 OFFCURVE",
"356 209 CURVE SMOOTH",
"359 212 OFFCURVE",
"360 215 OFFCURVE",
"360 217 CURVE SMOOTH",
"360 219 OFFCURVE",
"360 219 OFFCURVE",
"359 219 CURVE SMOOTH",
"289 219 LINE",
"358 341 OFFCURVE",
"408 401 OFFCURVE",
"441 401 CURVE SMOOTH",
"451 401 OFFCURVE",
"459 398 OFFCURVE",
"466 390 CURVE SMOOTH",
"473 383 OFFCURVE",
"477 375 OFFCURVE",
"477 365 CURVE SMOOTH",
"477 364 OFFCURVE",
"476 363 OFFCURVE",
"476 361 CURVE SMOOTH",
"476 360 OFFCURVE",
"475 358 OFFCURVE",
"475 357 CURVE SMOOTH",
"475 354 OFFCURVE",
"477 353 OFFCURVE",
"480 353 CURVE SMOOTH",
"484 353 OFFCURVE",
"485 357 OFFCURVE",
"485 365 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01244 30 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 948 25 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 948 17 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01277 49 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 481;
}
);
note = yen;
unicode = 00A5;
},
{
color = 4;
glyphname = mu;
lastChange = "2021-05-18 16:39:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-76.333 -243 OFFCURVE",
"-72.333 -242 OFFCURVE",
"-71 -240 CURVE SMOOTH",
"48 20 LINE",
"57.333 2.667 OFFCURVE",
"71.667 -6 OFFCURVE",
"91 -6 CURVE SMOOTH",
"127.667 -6 OFFCURVE",
"167 27.667 OFFCURVE",
"209 95 CURVE",
"202.333 77.667 OFFCURVE",
"199 61.333 OFFCURVE",
"199 46 CURVE SMOOTH",
"199 10.667 OFFCURVE",
"215 -7 OFFCURVE",
"247 -7 CURVE SMOOTH",
"289 -7 OFFCURVE",
"333.667 45 OFFCURVE",
"381 149 CURVE",
"379 151 LINE",
"374 151 LINE",
"359.333 116.333 OFFCURVE",
"343.667 87.333 OFFCURVE",
"325 62 CURVE SMOOTH",
"297 22 OFFCURVE",
"271.667 2 OFFCURVE",
"249 2 CURVE SMOOTH",
"239 2 OFFCURVE",
"234 8 OFFCURVE",
"234 20 CURVE SMOOTH",
"234 40 OFFCURVE",
"255 91.667 OFFCURVE",
"297 175 CURVE SMOOTH",
"369 314 LINE",
"367 315 LINE",
"361 302.333 OFFCURVE",
"351.333 296 OFFCURVE",
"338 296 CURVE SMOOTH",
"330 296 OFFCURVE",
"322.333 298.333 OFFCURVE",
"315 303 CURVE",
"313 303 LINE",
"279.667 237.667 OFFCURVE",
"256.667 192.667 OFFCURVE",
"242 166 CURVE SMOOTH",
"182 58.667 OFFCURVE",
"134.333 5 OFFCURVE",
"99 5 CURVE SMOOTH",
"83.667 5 OFFCURVE",
"76 13.333 OFFCURVE",
"76 30 CURVE SMOOTH",
"76 59.333 OFFCURVE",
"94 104.667 OFFCURVE",
"130 166 CURVE SMOOTH",
"148.667 196.667 OFFCURVE",
"162.333 220.333 OFFCURVE",
"173 239 CURVE SMOOTH",
"194.333 277.667 OFFCURVE",
"209.333 301.333 OFFCURVE",
"218 310 CURVE",
"216 312 LINE",
"200.667 299.333 OFFCURVE",
"186 293 OFFCURVE",
"172 293 CURVE SMOOTH",
"165.333 293 OFFCURVE",
"160.333 294.333 OFFCURVE",
"157 297 CURVE",
"155 297 LINE",
"109.667 217.667 OFFCURVE",
"77.667 157.667 OFFCURVE",
"59 117 CURVE SMOOTH",
"-119 -233 LINE",
"-120.333 -234.333 OFFCURVE",
"-119 -235.667 OFFCURVE",
"-115 -237 CURVE SMOOTH",
"-107 -241 OFFCURVE",
"-96.333 -243 OFFCURVE",
"-83 -243 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 952 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01249 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 4 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 4 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\01258 33 74 33 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 33 25 33 41 33 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 13 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01210 13 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 13 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01246 13 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 299;
}
);
note = mu;
unicode = 03BC;
},
{
glyphname = ordfeminine;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"68 390 OFFCURVE",
"90.333 408.333 OFFCURVE",
"115 445 CURVE",
"118 408 OFFCURVE",
"132 391 OFFCURVE",
"156 391 CURVE SMOOTH",
"180 391 OFFCURVE",
"209 408 OFFCURVE",
"244 443 CURVE",
"246 446.333 OFFCURVE",
"246.667 449.333 OFFCURVE",
"246 452 CURVE SMOOTH",
"244.667 454.667 OFFCURVE",
"241.667 453.667 OFFCURVE",
"237 449 CURVE SMOOTH",
"209 418.333 OFFCURVE",
"185.333 403 OFFCURVE",
"166 403 CURVE SMOOTH",
"147.333 403 OFFCURVE",
"138 415 OFFCURVE",
"138 439 CURVE SMOOTH",
"138 457 OFFCURVE",
"144 476.667 OFFCURVE",
"156 498 CURVE",
"161 500 LINE SMOOTH",
"165 501.333 OFFCURVE",
"167 503 OFFCURVE",
"167 505 CURVE SMOOTH",
"167 515.667 OFFCURVE",
"158.333 521 OFFCURVE",
"141 521 CURVE SMOOTH",
"133.667 521 OFFCURVE",
"124 518.333 OFFCURVE",
"112 513 CURVE SMOOTH",
"86.667 501.667 OFFCURVE",
"64 481 OFFCURVE",
"44 451 CURVE SMOOTH",
"35.333 438.333 OFFCURVE",
"31 425.333 OFFCURVE",
"31 412 CURVE SMOOTH",
"31 397.333 OFFCURVE",
"36.667 390 OFFCURVE",
"48 390 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"57.333 412 OFFCURVE",
"54 416.333 OFFCURVE",
"54 425 CURVE SMOOTH",
"54 431 OFFCURVE",
"57 439.667 OFFCURVE",
"63 451 CURVE SMOOTH",
"82.333 487 OFFCURVE",
"104 504.667 OFFCURVE",
"128 504 CURVE",
"122.667 492.667 OFFCURVE",
"118.667 479.333 OFFCURVE",
"116 464 CURVE",
"110.667 449.333 OFFCURVE",
"100.333 435.667 OFFCURVE",
"85 423 CURVE SMOOTH",
"75.667 415.667 OFFCURVE",
"68.667 412 OFFCURVE",
"64 412 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 952 8 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 22 22 22 38 22 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 22 69 22 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0124 8 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 8 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 345;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"94 380 OFFCURVE",
"114.667 391.667 OFFCURVE",
"134 415 CURVE",
"164 415 OFFCURVE",
"190.333 425.333 OFFCURVE",
"213 446 CURVE SMOOTH",
"216.333 449.333 OFFCURVE",
"218 451.667 OFFCURVE",
"218 453 CURVE SMOOTH",
"218 455.667 OFFCURVE",
"217 457 OFFCURVE",
"215 457 CURVE SMOOTH",
"213 457 OFFCURVE",
"211.667 456 OFFCURVE",
"211 454 CURVE",
"193 437.333 OFFCURVE",
"169.333 428.333 OFFCURVE",
"140 427 CURVE",
"141 428 LINE",
"151.667 445.333 OFFCURVE",
"157 464.333 OFFCURVE",
"157 485 CURVE SMOOTH",
"157 509 OFFCURVE",
"144 525.667 OFFCURVE",
"118 535 CURVE",
"121 536 LINE",
"122.333 537.333 OFFCURVE",
"123 538.667 OFFCURVE",
"123 540 CURVE SMOOTH",
"123 545.333 OFFCURVE",
"118.667 548 OFFCURVE",
"110 548 CURVE SMOOTH",
"104 548 OFFCURVE",
"97.667 544 OFFCURVE",
"91 536 CURVE",
"66.333 533.333 OFFCURVE",
"54 519.333 OFFCURVE",
"54 494 CURVE SMOOTH",
"54 486 LINE SMOOTH",
"54 483.333 OFFCURVE",
"54.333 480.667 OFFCURVE",
"55 478 CURVE",
"46.333 456 OFFCURVE",
"42 435.667 OFFCURVE",
"42 417 CURVE SMOOTH",
"42 392.333 OFFCURVE",
"52 380 OFFCURVE",
"72 380 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"70.667 393 OFFCURVE",
"65 401.667 OFFCURVE",
"65 419 CURVE SMOOTH",
"65 425.667 OFFCURVE",
"66 434 OFFCURVE",
"68 444 CURVE SMOOTH",
"68 445 LINE",
"80 428.333 OFFCURVE",
"97.333 418.667 OFFCURVE",
"120 416 CURVE",
"108.667 400.667 OFFCURVE",
"96 393 OFFCURVE",
"82 393 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98.667 431 OFFCURVE",
"82.333 445.667 OFFCURVE",
"77 471 CURVE",
"86.333 492.333 OFFCURVE",
"97.333 511 OFFCURVE",
"112 527 CURVE",
"132 525.667 OFFCURVE",
"142 512 OFFCURVE",
"142 486 CURVE SMOOTH",
"142 467.333 OFFCURVE",
"136.667 447.667 OFFCURVE",
"126 427 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 952 38 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 21 118 21 134 21 150 21 166 21 182 21 198 21 214 21 230 21 246 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 21 22 21 38 21 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 21 69 21 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0121 38 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0127 38 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01219 38 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 38 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0121 36 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0127 36 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01219 36 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 36 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 252;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = ae;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"271.333 -13 OFFCURVE",
"314.667 -0.667 OFFCURVE",
"364 24 CURVE SMOOTH",
"414.667 49.333 OFFCURVE",
"452 76.667 OFFCURVE",
"476 106 CURVE SMOOTH",
"480 110.667 OFFCURVE",
"482 115 OFFCURVE",
"482 119 CURVE SMOOTH",
"482 125 OFFCURVE",
"481 128 OFFCURVE",
"478 128 CURVE SMOOTH",
"475 128 OFFCURVE",
"470 124 OFFCURVE",
"464 117 CURVE SMOOTH",
"440.667 91.667 OFFCURVE",
"408.667 68 OFFCURVE",
"368 46 CURVE SMOOTH",
"324 22 OFFCURVE",
"286.667 10 OFFCURVE",
"256 10 CURVE SMOOTH",
"218 10 OFFCURVE",
"199 31 OFFCURVE",
"199 73 CURVE SMOOTH",
"199 83 OFFCURVE",
"200 94 OFFCURVE",
"202 106 CURVE",
"257.333 120 OFFCURVE",
"298.333 144.333 OFFCURVE",
"325 179 CURVE SMOOTH",
"341 199.667 OFFCURVE",
"349 219.333 OFFCURVE",
"349 238 CURVE SMOOTH",
"349 268 OFFCURVE",
"334 283 OFFCURVE",
"304 283 CURVE SMOOTH",
"282.667 283 OFFCURVE",
"260.667 273.667 OFFCURVE",
"238 255 CURVE",
"229.333 258.333 OFFCURVE",
"220.333 260 OFFCURVE",
"211 260 CURVE SMOOTH",
"193 260 OFFCURVE",
"173 255.333 OFFCURVE",
"151 246 CURVE SMOOTH",
"100.333 223.333 OFFCURVE",
"55.333 181 OFFCURVE",
"16 119 CURVE SMOOTH",
"-1.333 91.667 OFFCURVE",
"-10 66 OFFCURVE",
"-10 42 CURVE SMOOTH",
"-10 13.333 OFFCURVE",
"1.333 -1 OFFCURVE",
"24 -1 CURVE SMOOTH",
"56 -1 OFFCURVE",
"97.667 31 OFFCURVE",
"149 95 CURVE",
"148.333 91.667 OFFCURVE",
"148 87 OFFCURVE",
"148 81 CURVE SMOOTH",
"148 18.333 OFFCURVE",
"176.667 -13 OFFCURVE",
"234 -13 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"42.667 43 OFFCURVE",
"37 51.333 OFFCURVE",
"37 68 CURVE SMOOTH",
"37 84 OFFCURVE",
"42.333 101.667 OFFCURVE",
"53 121 CURVE SMOOTH",
"90.333 193 OFFCURVE",
"134.333 228.667 OFFCURVE",
"185 228 CURVE",
"173.667 206 OFFCURVE",
"165.667 179 OFFCURVE",
"161 147 CURVE",
"149.667 119 OFFCURVE",
"128.667 92 OFFCURVE",
"98 66 CURVE SMOOTH",
"79.333 50.667 OFFCURVE",
"64.667 43 OFFCURVE",
"54 43 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"217.333 146.333 OFFCURVE",
"232 172.667 OFFCURVE",
"252 202 CURVE SMOOTH",
"276.667 240.667 OFFCURVE",
"297 260 OFFCURVE",
"313 260 CURVE SMOOTH",
"320.333 260 OFFCURVE",
"324 254.667 OFFCURVE",
"324 244 CURVE SMOOTH",
"324 230.667 OFFCURVE",
"318.333 213.667 OFFCURVE",
"307 193 CURVE SMOOTH",
"289 162.333 OFFCURVE",
"256 139 OFFCURVE",
"208 123 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\01258 19 74 19 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 19 121 19 137 19 153 19 169 19 185 19 201 19 217 19 233 19 249 19 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 19 25 19 41 19 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01243 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0120 19 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0124 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 4 181 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01245 947 17 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01231 949 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 452;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = questiondown;
lastChange = "2021-05-11 11:02:03 +0000";
layers = (
{
components = (
{
name = question;
transform = "{-1, 0, 0, -1, 400, 259}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 952 16 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01234 950 26 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 26 186 26 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01255 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01228 16 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 44 22 44 38 44 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 44 69 44 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01246 949 12 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0126 2 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 400;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = exclamdown;
lastChange = "2021-05-11 11:02:42 +0000";
layers = (
{
components = (
{
name = exclam;
transform = "{-1, 0, 0, -1, 285, 254}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 952 4 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 4 74 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 4 121 4 137 4 153 4 169 4 185 4 201 4 217 4 233 4 249 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 4 25 4 41 4 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 2 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 279;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = logicalnot;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"559.333 13 OFFCURVE",
"567.667 19.667 OFFCURVE",
"571 33 CURVE SMOOTH",
"618 256 LINE",
"93 256 LINE SMOOTH",
"82.333 256 OFFCURVE",
"66 235 OFFCURVE",
"66 223 CURVE SMOOTH",
"66 215 OFFCURVE",
"72 211 OFFCURVE",
"84 211 CURVE SMOOTH",
"566 211 LINE",
"528 33 LINE SMOOTH",
"524.667 19.667 OFFCURVE",
"530.667 13 OFFCURVE",
"546 13 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0120 3 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0126 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 746;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = ellipsis;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"255 -13 OFFCURVE",
"269.667 -0.333 OFFCURVE",
"275 25 CURVE SMOOTH",
"276 29 OFFCURVE",
"276 33 OFFCURVE",
"276 37 CURVE SMOOTH",
"276 54 OFFCURVE",
"266 63 OFFCURVE",
"244 63 CURVE SMOOTH",
"215 63 OFFCURVE",
"198 47 OFFCURVE",
"198 16 CURVE SMOOTH",
"198 -3 OFFCURVE",
"209 -13 OFFCURVE",
"231 -13 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"76 -13 OFFCURVE",
"90.667 -0.333 OFFCURVE",
"96 25 CURVE SMOOTH",
"97 29 OFFCURVE",
"97 33 OFFCURVE",
"97 37 CURVE SMOOTH",
"97 54 OFFCURVE",
"87 63 OFFCURVE",
"65 63 CURVE SMOOTH",
"36 63 OFFCURVE",
"19 47 OFFCURVE",
"19 16 CURVE SMOOTH",
"19 -3 OFFCURVE",
"30 -13 OFFCURVE",
"52 -13 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"450 -13 OFFCURVE",
"466 4 OFFCURVE",
"466 37 CURVE SMOOTH",
"466 54 OFFCURVE",
"456 63 OFFCURVE",
"434 63 CURVE SMOOTH",
"405 63 OFFCURVE",
"389 47 OFFCURVE",
"389 15 CURVE SMOOTH",
"389 -4 OFFCURVE",
"400 -13 OFFCURVE",
"421 -13 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0126 2 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 496;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = endash;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"139.5 159 LINE SMOOTH",
"165.833 160.333 OFFCURVE",
"195 162.333 OFFCURVE",
"227 165 CURVE SMOOTH",
"286.333 170.333 OFFCURVE",
"340 173.333 OFFCURVE",
"388 174 CURVE SMOOTH",
"414.667 174.667 OFFCURVE",
"428 178.667 OFFCURVE",
"428 186 CURVE SMOOTH",
"428 193.333 OFFCURVE",
"414.667 198.333 OFFCURVE",
"388 201 CURVE SMOOTH",
"320 209 OFFCURVE",
"250.667 213 OFFCURVE",
"180 213 CURVE SMOOTH",
"133.333 213 OFFCURVE",
"101 210.333 OFFCURVE",
"83 205 CURVE SMOOTH",
"47.667 193 OFFCURVE",
"30 180 OFFCURVE",
"30 166 CURVE SMOOTH",
"30 157.333 OFFCURVE",
"42.667 153.667 OFFCURVE",
"68 155 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01211 5 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 554;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"281.333 164.333 OFFCURVE",
"461.667 171.333 OFFCURVE",
"615 174 CURVE SMOOTH",
"642.333 174 OFFCURVE",
"656 178 OFFCURVE",
"656 186 CURVE SMOOTH",
"656 192.667 OFFCURVE",
"642.333 197.667 OFFCURVE",
"615 201 CURVE SMOOTH",
"547.667 209 OFFCURVE",
"425 213 OFFCURVE",
"247 213 CURVE SMOOTH",
"155.667 213 OFFCURVE",
"101 210.333 OFFCURVE",
"83 205 CURVE SMOOTH",
"47.667 193 OFFCURVE",
"30 180 OFFCURVE",
"30 166 CURVE SMOOTH",
"30 157.333 OFFCURVE",
"42.667 153.667 OFFCURVE",
"68 155 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 3 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0120 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 681;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = quotedblleft;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"151.333 602 OFFCURVE",
"173 623.667 OFFCURVE",
"173 649 CURVE SMOOTH",
"173 673 OFFCURVE",
"165.667 685.333 OFFCURVE",
"151 686 CURVE",
"155 708 OFFCURVE",
"167.667 730.333 OFFCURVE",
"189 753 CURVE SMOOTH",
"201 765.667 OFFCURVE",
"207 776.333 OFFCURVE",
"207 785 CURVE SMOOTH",
"207 789.667 OFFCURVE",
"205 792 OFFCURVE",
"201 792 CURVE SMOOTH",
"196.333 792 OFFCURVE",
"188.667 787.333 OFFCURVE",
"178 778 CURVE",
"152 746.5 LINE SMOOTH",
"144 736.833 OFFCURVE",
"137.333 728 OFFCURVE",
"132 720 CURVE SMOOTH",
"105.333 683.333 OFFCURVE",
"93.333 656.667 OFFCURVE",
"96 640 CURVE SMOOTH",
"99.333 614.667 OFFCURVE",
"110.667 602 OFFCURVE",
"130 602 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"270.667 602 OFFCURVE",
"292 623.667 OFFCURVE",
"292 649 CURVE SMOOTH",
"292 673 OFFCURVE",
"284.667 685.333 OFFCURVE",
"270 686 CURVE",
"274 708 OFFCURVE",
"286.667 730.333 OFFCURVE",
"308 753 CURVE SMOOTH",
"320 765.667 OFFCURVE",
"326 776.333 OFFCURVE",
"326 785 CURVE SMOOTH",
"326 789.667 OFFCURVE",
"324 792 OFFCURVE",
"320 792 CURVE SMOOTH",
"314 792 OFFCURVE",
"306.333 787.333 OFFCURVE",
"297 778 CURVE",
"271 746.5 LINE SMOOTH",
"263 736.833 OFFCURVE",
"256.333 728 OFFCURVE",
"251 720 CURVE SMOOTH",
"224.333 683.333 OFFCURVE",
"212.333 656.667 OFFCURVE",
"215 640 CURVE SMOOTH",
"218.333 614.667 OFFCURVE",
"229.333 602 OFFCURVE",
"248 602 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01213 18 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"260 615 OFFCURVE",
"267.667 619.333 OFFCURVE",
"277 628 CURVE",
"295.667 650.667 OFFCURVE",
"311 671 OFFCURVE",
"323 687 CURVE SMOOTH",
"349.667 723.667 OFFCURVE",
"361.667 750 OFFCURVE",
"359 766 CURVE SMOOTH",
"355 792 OFFCURVE",
"343.667 805 OFFCURVE",
"325 805 CURVE SMOOTH",
"303.667 805 OFFCURVE",
"281 783.667 OFFCURVE",
"281 757 CURVE SMOOTH",
"281 733 OFFCURVE",
"288.333 720.667 OFFCURVE",
"303 720 CURVE",
"300.333 699.333 OFFCURVE",
"288 677 OFFCURVE",
"266 653 CURVE SMOOTH",
"254 641 OFFCURVE",
"248 630.667 OFFCURVE",
"248 622 CURVE SMOOTH",
"248 617.333 OFFCURVE",
"250 615 OFFCURVE",
"254 615 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"141 615 OFFCURVE",
"148.667 619.333 OFFCURVE",
"158 628 CURVE",
"176.667 650.667 OFFCURVE",
"193.333 671 OFFCURVE",
"204 687 CURVE SMOOTH",
"230.667 723.667 OFFCURVE",
"242.667 750 OFFCURVE",
"240 766 CURVE SMOOTH",
"236 792 OFFCURVE",
"224.667 805 OFFCURVE",
"206 805 CURVE SMOOTH",
"184.667 805 OFFCURVE",
"163 783.667 OFFCURVE",
"163 757 CURVE SMOOTH",
"163 733 OFFCURVE",
"170.333 720.667 OFFCURVE",
"185 720 CURVE",
"181 698.667 OFFCURVE",
"168.333 676.333 OFFCURVE",
"147 653 CURVE SMOOTH",
"135 641 OFFCURVE",
"129 630.667 OFFCURVE",
"129 622 CURVE SMOOTH",
"129 617.333 OFFCURVE",
"131 615 OFFCURVE",
"135 615 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01218 13 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"95.333 340 OFFCURVE",
"118 361.333 OFFCURVE",
"118 388 CURVE SMOOTH",
"118 411.333 OFFCURVE",
"110.333 423.667 OFFCURVE",
"95 425 CURVE",
"99 446.333 OFFCURVE",
"111.667 468.333 OFFCURVE",
"133 491 CURVE SMOOTH",
"145 503.667 OFFCURVE",
"151 514.333 OFFCURVE",
"151 523 CURVE SMOOTH",
"151 527.667 OFFCURVE",
"149 530 OFFCURVE",
"145 530 CURVE SMOOTH",
"139 530 OFFCURVE",
"131.333 525.667 OFFCURVE",
"122 517 CURVE",
"103.333 494.333 OFFCURVE",
"88 474 OFFCURVE",
"76 458 CURVE SMOOTH",
"49.333 421.333 OFFCURVE",
"37.333 394.667 OFFCURVE",
"40 378 CURVE SMOOTH",
"44 352.667 OFFCURVE",
"55.333 340 OFFCURVE",
"74 340 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 259;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"159.333 334 OFFCURVE",
"167.333 338.667 OFFCURVE",
"178 348 CURVE",
"196 370 OFFCURVE",
"211.333 389.333 OFFCURVE",
"224 406 CURVE SMOOTH",
"250 442.667 OFFCURVE",
"262 469.333 OFFCURVE",
"260 486 CURVE SMOOTH",
"256 511.333 OFFCURVE",
"244.667 524 OFFCURVE",
"226 524 CURVE SMOOTH",
"203.333 524 OFFCURVE",
"182 502.667 OFFCURVE",
"182 476 CURVE SMOOTH",
"182 452.667 OFFCURVE",
"189.333 440.667 OFFCURVE",
"204 440 CURVE",
"200 418 OFFCURVE",
"187.333 395.667 OFFCURVE",
"166 373 CURVE SMOOTH",
"154 359.667 OFFCURVE",
"148 349 OFFCURVE",
"148 341 CURVE SMOOTH",
"148 336.333 OFFCURVE",
"150 334 OFFCURVE",
"154 334 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 239;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = daggerdbl;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"42 -88 LINE",
"175 187 LINE",
"335 187 LINE",
"352.333 195 OFFCURVE",
"360.333 203.667 OFFCURVE",
"359 213 CURVE",
"187 213 LINE",
"268 379 LINE",
"419 379 LINE",
"435.667 387.667 OFFCURVE",
"443.667 396.667 OFFCURVE",
"443 406 CURVE",
"281 406 LINE",
"381 615 LINE",
"352 615 LINE",
"251 406 LINE",
"125 406 LINE",
"107.667 396.667 OFFCURVE",
"99.667 387.667 OFFCURVE",
"101 379 CURVE",
"238 379 LINE",
"158 213 LINE",
"41 213 LINE",
"24.333 204.333 OFFCURVE",
"16.333 195.667 OFFCURVE",
"17 187 CURVE",
"145 187 LINE",
"13 -88 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0120 949 2 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0125 949 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 458;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = quotesinglbase;
layers = (
{
components = (
{
name = quotesingle;
transform = "{1, 0, 0, 1, 0, -357}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 142;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"139 -81 LINE",
"159 -32 LINE SMOOTH",
"165 -18 OFFCURVE",
"170 -5.667 OFFCURVE",
"174 5 CURVE SMOOTH",
"192 49.667 OFFCURVE",
"201 77.667 OFFCURVE",
"201 89 CURVE SMOOTH",
"201 102.333 OFFCURVE",
"194.667 109 OFFCURVE",
"182 109 CURVE SMOOTH",
"162 109 OFFCURVE",
"150.667 98.667 OFFCURVE",
"148 78 CURVE SMOOTH",
"129 -81 LINE"
);
},
{
closed = 1;
nodes = (
"36 -81 LINE",
"43.333 -63.667 OFFCURVE",
"49.833 -47.833 OFFCURVE",
"55.5 -33.5 CURVE SMOOTH",
"71 5 LINE SMOOTH",
"88.333 49.667 OFFCURVE",
"97 78 OFFCURVE",
"97 90 CURVE SMOOTH",
"97 102.667 OFFCURVE",
"91 109 OFFCURVE",
"79 109 CURVE SMOOTH",
"63 109 OFFCURVE",
"46.333 93 OFFCURVE",
"45 77 CURVE SMOOTH",
"27 -81 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = perthousand;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"59 -14 LINE",
"451 601 LINE",
"421 601 LINE",
"329 446 LINE SMOOTH",
"318.333 429.333 OFFCURVE",
"303 421 OFFCURVE",
"283 421 CURVE SMOOTH",
"277 421 OFFCURVE",
"271.333 422.667 OFFCURVE",
"266 426 CURVE",
"265 428 LINE",
"290.333 457.333 OFFCURVE",
"303 493.333 OFFCURVE",
"303 536 CURVE SMOOTH",
"303 582.667 OFFCURVE",
"282.667 606 OFFCURVE",
"242 606 CURVE SMOOTH",
"204 606 OFFCURVE",
"171.667 587.667 OFFCURVE",
"145 551 CURVE SMOOTH",
"119.667 516.333 OFFCURVE",
"107 479.667 OFFCURVE",
"107 441 CURVE SMOOTH",
"107 418.333 OFFCURVE",
"112.333 398.667 OFFCURVE",
"123 382 CURVE SMOOTH",
"135 363.333 OFFCURVE",
"152 354 OFFCURVE",
"174 354 CURVE SMOOTH",
"206.667 354 OFFCURVE",
"235.667 376 OFFCURVE",
"261 420 CURVE",
"267.667 416 OFFCURVE",
"275.333 414 OFFCURVE",
"284 414 CURVE SMOOTH",
"294.667 414 OFFCURVE",
"305.667 417.667 OFFCURVE",
"317 425 CURVE",
"30 -14 LINE"
);
},
{
closed = 1;
nodes = (
"287.667 -19 OFFCURVE",
"319 3.333 OFFCURVE",
"347 48 CURVE SMOOTH",
"372.333 88.667 OFFCURVE",
"385 127 OFFCURVE",
"385 163 CURVE SMOOTH",
"385 209.667 OFFCURVE",
"363 233 OFFCURVE",
"319 233 CURVE SMOOTH",
"279.667 233 OFFCURVE",
"246.667 214.667 OFFCURVE",
"220 178 CURVE SMOOTH",
"196 144.667 OFFCURVE",
"184 108 OFFCURVE",
"184 68 CURVE SMOOTH",
"184 10 OFFCURVE",
"207 -19 OFFCURVE",
"253 -19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230.333 -10 OFFCURVE",
"219 11.333 OFFCURVE",
"219 54 CURVE SMOOTH",
"219 70 OFFCURVE",
"221.333 86 OFFCURVE",
"226 102 CURVE SMOOTH",
"234 131.333 OFFCURVE",
"246.333 156.667 OFFCURVE",
"263 178 CURVE SMOOTH",
"283.667 206.667 OFFCURVE",
"306 221 OFFCURVE",
"330 221 CURVE SMOOTH",
"356.667 221 OFFCURVE",
"370 204.333 OFFCURVE",
"370 171 CURVE SMOOTH",
"370 137.667 OFFCURVE",
"358.667 100.667 OFFCURVE",
"336 60 CURVE SMOOTH",
"310 13.333 OFFCURVE",
"282.333 -10 OFFCURVE",
"253 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"510.667 -19 OFFCURVE",
"542.333 3.333 OFFCURVE",
"571 48 CURVE SMOOTH",
"595.667 87.333 OFFCURVE",
"608 125.667 OFFCURVE",
"608 163 CURVE SMOOTH",
"608 209.667 OFFCURVE",
"586 233 OFFCURVE",
"542 233 CURVE SMOOTH",
"503.333 233 OFFCURVE",
"470.667 214.667 OFFCURVE",
"444 178 CURVE SMOOTH",
"418.667 144.667 OFFCURVE",
"406 108 OFFCURVE",
"406 68 CURVE SMOOTH",
"406 10 OFFCURVE",
"429.333 -19 OFFCURVE",
"476 -19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"453.333 -10 OFFCURVE",
"442 11.333 OFFCURVE",
"442 54 CURVE SMOOTH",
"442 71.333 OFFCURVE",
"444.333 87.333 OFFCURVE",
"449 102 CURVE SMOOTH",
"456.333 129.333 OFFCURVE",
"468.667 154.667 OFFCURVE",
"486 178 CURVE SMOOTH",
"506.667 206.667 OFFCURVE",
"528.667 221 OFFCURVE",
"552 221 CURVE SMOOTH",
"580 221 OFFCURVE",
"594 204.333 OFFCURVE",
"594 171 CURVE SMOOTH",
"594 137.667 OFFCURVE",
"582.667 100.667 OFFCURVE",
"560 60 CURVE SMOOTH",
"534 13.333 OFFCURVE",
"506 -10 OFFCURVE",
"476 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"154.667 362 OFFCURVE",
"143 383.667 OFFCURVE",
"143 427 CURVE SMOOTH",
"143 444.333 OFFCURVE",
"145.333 460.333 OFFCURVE",
"150 475 CURVE SMOOTH",
"156.667 501.667 OFFCURVE",
"168.667 526.667 OFFCURVE",
"186 550 CURVE SMOOTH",
"206.667 578.667 OFFCURVE",
"229 593 OFFCURVE",
"253 593 CURVE SMOOTH",
"281 593 OFFCURVE",
"295 571.333 OFFCURVE",
"295 528 CURVE",
"291.667 528.667 OFFCURVE",
"289.167 529 OFFCURVE",
"287.5 529 CURVE SMOOTH",
"283 529 LINE SMOOTH",
"256.333 529 OFFCURVE",
"243 508.667 OFFCURVE",
"243 468 CURVE SMOOTH",
"243 452.667 OFFCURVE",
"247.333 438.667 OFFCURVE",
"256 426 CURVE",
"254 422 LINE SMOOTH",
"234 382 OFFCURVE",
"208.667 362 OFFCURVE",
"178 362 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 950 25 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 951 46 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01231 952 67 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 6 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 6 74 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 6 25 6 41 6 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01212 6 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01215 46 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 31 22 31 38 31 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 31 69 31 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 60 181 60 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01280 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 94 118 94 134 94 150 94 166 94 182 94 198 94 214 94 230 94 246 94 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 94 22 94 38 94 54 94 70 94 86 94 102 94 118 94 134 94 150 94 166 94 182 94 198 94 214 94 230 94 246 94 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 94 22 94 38 94 54 94 70 94 86 94 102 94 118 94 134 94 150 94 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 94 181 94 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01236 88 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01214 4 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01215 4 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01288 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 635;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = circumflex;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"290 270 OFFCURVE",
"292 270 OFFCURVE",
"294 270 CURVE SMOOTH",
"296 270.667 OFFCURVE",
"296.333 272.333 OFFCURVE",
"295 275 CURVE SMOOTH",
"263 371 LINE SMOOTH",
"262 373 OFFCURVE",
"259 373 OFFCURVE",
"253 373 CURVE SMOOTH",
"247 373 OFFCURVE",
"239 373 OFFCURVE",
"228 371 CURVE",
"93 275 LINE",
"92 274 LINE",
"92 270.667 OFFCURVE",
"95 269.667 OFFCURVE",
"101 271 CURVE",
"107 271 OFFCURVE",
"112 272.333 OFFCURVE",
"116 275 CURVE SMOOTH",
"236 340 LINE",
"277 275 LINE SMOOTH",
"279 271 OFFCURVE",
"283 270 OFFCURVE",
"289 270 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0120 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 957 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 358;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = tilde;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"252 290 OFFCURVE",
"271 306 OFFCURVE",
"287 339 CURVE SMOOTH",
"287.667 341 OFFCURVE",
"286 342 OFFCURVE",
"282 342 CURVE SMOOTH",
"277.333 342 OFFCURVE",
"274.667 341.667 OFFCURVE",
"274 341 CURVE",
"267.333 325.667 OFFCURVE",
"256 318 OFFCURVE",
"240 318 CURVE",
"230.667 319.333 OFFCURVE",
"218 322 OFFCURVE",
"202 330 CURVE SMOOTH",
"184 338 OFFCURVE",
"171 342 OFFCURVE",
"163 342 CURVE SMOOTH",
"142 342 OFFCURVE",
"122 326 OFFCURVE",
"102 294 CURVE",
"102 292 OFFCURVE",
"105 291 OFFCURVE",
"112 291 CURVE SMOOTH",
"115 291 OFFCURVE",
"117 292 OFFCURVE",
"118 293 CURVE SMOOTH",
"126 307 OFFCURVE",
"136 314 OFFCURVE",
"148 314 CURVE SMOOTH",
"155 314 OFFCURVE",
"168 310 OFFCURVE",
"187 302 CURVE SMOOTH",
"207 293 OFFCURVE",
"221 290 OFFCURVE",
"231 290 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 358;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"210 303 OFFCURVE",
"227 304 OFFCURVE",
"243 305 CURVE SMOOTH",
"249 306 OFFCURVE",
"261 315 OFFCURVE",
"261 319 CURVE SMOOTH",
"261 321 OFFCURVE",
"260 322 OFFCURVE",
"256 322 CURVE SMOOTH",
"256 322 OFFCURVE",
"255 322 OFFCURVE",
"255 322 CURVE SMOOTH",
"243 322 OFFCURVE",
"227 322 OFFCURVE",
"210 322 CURVE SMOOTH",
"178 322 OFFCURVE",
"144 322 OFFCURVE",
"137 322 CURVE",
"129 316 OFFCURVE",
"126 312 OFFCURVE",
"126 309 CURVE SMOOTH",
"126 307 OFFCURVE",
"127 305 OFFCURVE",
"129 304 CURVE",
"148 304 OFFCURVE",
"170 303 OFFCURVE",
"193 303 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0120 949 1 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 358;
}
);
note = macron;
unicode = 00AF;
},
{
glyphname = cedilla;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"186 -227 OFFCURVE",
"240 -188 OFFCURVE",
"240 -141 CURVE SMOOTH",
"240 -105 OFFCURVE",
"224 -70 OFFCURVE",
"162 -70 CURVE SMOOTH",
"157 -70 OFFCURVE",
"152 -71 OFFCURVE",
"147 -71 CURVE SMOOTH",
"136 -72 OFFCURVE",
"114 -80 OFFCURVE",
"102 -82 CURVE",
"102 -80 OFFCURVE",
"140 -30 OFFCURVE",
"166 4 CURVE",
"163 8 OFFCURVE",
"160 10 OFFCURVE",
"157 10 CURVE",
"90 -69 LINE SMOOTH",
"72 -90 OFFCURVE",
"70 -92 OFFCURVE",
"70 -94 CURVE SMOOTH",
"70 -104 OFFCURVE",
"75 -110 OFFCURVE",
"87 -110 CURVE SMOOTH",
"89 -110 OFFCURVE",
"92 -107 OFFCURVE",
"111 -99 CURVE SMOOTH",
"116 -97 OFFCURVE",
"134 -91 OFFCURVE",
"151 -91 CURVE SMOOTH",
"163 -91 OFFCURVE",
"175 -93 OFFCURVE",
"184 -100 CURVE SMOOTH",
"197 -109 OFFCURVE",
"202 -123 OFFCURVE",
"202 -140 CURVE SMOOTH",
"202 -183 OFFCURVE",
"173 -211 OFFCURVE",
"120 -211 CURVE SMOOTH",
"89 -211 OFFCURVE",
"60 -203 OFFCURVE",
"48 -188 CURVE",
"41 -183 OFFCURVE",
"39 -184 OFFCURVE",
"39 -187 CURVE SMOOTH",
"39 -190 OFFCURVE",
"43 -197 OFFCURVE",
"45 -200 CURVE SMOOTH",
"60 -219 OFFCURVE",
"92 -227 OFFCURVE",
"134 -227 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 951 18 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 18 186 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01231 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01233 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01237 4 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 350;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = brokenbar;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"203 -213 LINE",
"287 199 LINE",
"244 203 LINE",
"155 -213 LINE"
);
},
{
closed = 1;
nodes = (
"395 692 LINE",
"347 692 LINE",
"264 302 LINE",
"308 297 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */\0121 8 8 64 9 0 7 1 6 4 2 0 0 1 9 7 2 3 6 6 3 4 5 9 7 2 3 6 6 3 3 0 6 5 1 6 70 \012SROUND[ ]	/* SuperRound */\012MDAP[1]	/* MoveDirectAbsPt */\012SHZ[1]	/* ShiftZoneByLastPoint */\012RTG[ ]	/* RoundToGrid */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SDPVTL[1]	/* SetDualPVectorToLine */\012MDAP[0]	/* MoveDirectAbsPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MIRP[11100]	/* MoveIndirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SDPVTL[1]	/* SetDualPVectorToLine */\012MDAP[0]	/* MoveDirectAbsPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MIRP[11100]	/* MoveIndirectRelPt */\012SFVTPV[ ]	/* SetFVectorToPVector */\012MDRP[00100]	/* MoveDirectRelPt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MDAP[0]	/* MoveDirectAbsPt */\012MDAP[0]	/* MoveDirectAbsPt */\012IUP[1]	/* InterpolateUntPts */\012IUP[0]	/* InterpolateUntPts */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 2 values pushed */\0126 8 \012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SRP1[ ]	/* SetRefPoint1 */\012SHZ[1]	/* ShiftZoneByLastPoint */\012PUSHW[ ]	/* 2 values pushed */\0128 -64 \012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */";
};
width = 448;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = minus;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"334 192 LINE",
"334 211 LINE",
"100 212 LINE",
"99 211 LINE",
"99 192 LINE",
"333 191 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */\0121 6 6 64 7 0 5 0 4 4 3 2 4 1 1 2 70 \012SROUND[ ]	/* SuperRound */\012MDAP[1]	/* MoveDirectAbsPt */\012SHZ[1]	/* ShiftZoneByLastPoint */\012RTG[ ]	/* RoundToGrid */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MDAP[1]	/* MoveDirectAbsPt */\012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012IUP[1]	/* InterpolateUntPts */\012IUP[0]	/* InterpolateUntPts */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 2 values pushed */\0122 6 \012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SRP1[ ]	/* SetRefPoint1 */\012SHZ[1]	/* ShiftZoneByLastPoint */\012PUSHW[ ]	/* 2 values pushed */\0126 -64 \012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */";
};
width = 344;
}
);
note = minus;
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"159.667 14.667 OFFCURVE",
"165.667 20.667 OFFCURVE",
"169 30 CURVE",
"129 108 LINE",
"198 182 LINE",
"198 194.667 OFFCURVE",
"194.333 201 OFFCURVE",
"187 201 CURVE",
"119 127 LINE",
"80 206 LINE",
"71.333 202.667 OFFCURVE",
"65.667 196.333 OFFCURVE",
"63 187 CURVE",
"102 110 LINE",
"34 36 LINE",
"34 25.333 OFFCURVE",
"37.333 19 OFFCURVE",
"44 17 CURVE",
"113 90 LINE",
"151 12 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0125 4 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01213 4 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 221;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = onesuperior;
lastChange = "2021-05-18 17:03:03 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"50 281 OFFCURVE",
"54 283 OFFCURVE",
"55 286 CURVE SMOOTH",
"78 342 OFFCURVE",
"107 401 OFFCURVE",
"143 466 CURVE SMOOTH",
"174 522 OFFCURVE",
"200 565 OFFCURVE",
"223 596 CURVE",
"228 605 OFFCURVE",
"211 616 OFFCURVE",
"202 616 CURVE SMOOTH",
"195 616 OFFCURVE",
"176 604 OFFCURVE",
"145 581 CURVE SMOOTH",
"108 552 OFFCURVE",
"89 526 OFFCURVE",
"89 505 CURVE SMOOTH",
"89 504 OFFCURVE",
"90 503 OFFCURVE",
"91 503 CURVE SMOOTH",
"94 503 OFFCURVE",
"97 504 OFFCURVE",
"100 507 CURVE SMOOTH",
"119 526 OFFCURVE",
"135 538 OFFCURVE",
"149 545 CURVE",
"134 504 OFFCURVE",
"117 462 OFFCURVE",
"97 419 CURVE SMOOTH",
"38 295 LINE",
"36 288 LINE",
"36 283 OFFCURVE",
"39 281 OFFCURVE",
"45 281 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01216 8 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01222 8 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 202;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = twosuperior;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"217 260 OFFCURVE",
"218.333 260.333 OFFCURVE",
"219 261 CURVE",
"231 267 OFFCURVE",
"237 276 OFFCURVE",
"237 289 CURVE SMOOTH",
"237 316 OFFCURVE",
"189 330 OFFCURVE",
"93 330 CURVE",
"116.5 347.5 LINE SMOOTH",
"128.167 355.833 OFFCURVE",
"143.667 366.333 OFFCURVE",
"163 379 CURVE SMOOTH",
"228 419 LINE SMOOTH",
"291.333 459 OFFCURVE",
"323 500.667 OFFCURVE",
"323 544 CURVE SMOOTH",
"323 584 OFFCURVE",
"303.333 604 OFFCURVE",
"264 604 CURVE SMOOTH",
"233.333 604 OFFCURVE",
"201.333 591.333 OFFCURVE",
"168 566 CURVE SMOOTH",
"135.333 541.333 OFFCURVE",
"116 514.333 OFFCURVE",
"110 485 CURVE SMOOTH",
"108.667 479 OFFCURVE",
"109 476 OFFCURVE",
"111 476 CURVE SMOOTH",
"114.333 476 OFFCURVE",
"116.667 478.667 OFFCURVE",
"118 484 CURVE SMOOTH",
"131.333 523.333 OFFCURVE",
"165 554.333 OFFCURVE",
"219 577 CURVE SMOOTH",
"238.333 585.667 OFFCURVE",
"255.667 590 OFFCURVE",
"271 590 CURVE SMOOTH",
"295 590 OFFCURVE",
"307 579.667 OFFCURVE",
"307 559 CURVE SMOOTH",
"307 511 OFFCURVE",
"255.667 453 OFFCURVE",
"153 385 CURVE SMOOTH",
"105 353.667 OFFCURVE",
"65 332.333 OFFCURVE",
"33 321 CURVE",
"15.667 321 OFFCURVE",
"-9 304.333 OFFCURVE",
"-9 287 CURVE SMOOTH",
"-9 281.667 OFFCURVE",
"-5.667 279 OFFCURVE",
"1 279 CURVE SMOOTH",
"7 279 OFFCURVE",
"13 280.333 OFFCURVE",
"19 283 CURVE SMOOTH",
"76.333 304.333 OFFCURVE",
"119.667 313.667 OFFCURVE",
"149 315 CURVE SMOOTH",
"161.667 315 OFFCURVE",
"177 313 OFFCURVE",
"195 309 CURVE SMOOTH",
"219 303 OFFCURVE",
"231 295.333 OFFCURVE",
"231 286 CURVE SMOOTH",
"231 281.333 OFFCURVE",
"226.333 276.333 OFFCURVE",
"217 271 CURVE",
"214.333 270.333 OFFCURVE",
"212.333 268.667 OFFCURVE",
"211 266 CURVE",
"211 262 OFFCURVE",
"212.333 260 OFFCURVE",
"215 260 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 2 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 2 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 330;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"150.333 252 OFFCURVE",
"194.667 266 OFFCURVE",
"234 294 CURVE SMOOTH",
"262 314 OFFCURVE",
"276 335.667 OFFCURVE",
"276 359 CURVE SMOOTH",
"276 397 OFFCURVE",
"247.667 415.667 OFFCURVE",
"191 415 CURVE",
"248 427 LINE",
"319.333 450.333 OFFCURVE",
"355 481.667 OFFCURVE",
"355 521 CURVE SMOOTH",
"355 545 OFFCURVE",
"341.667 563.333 OFFCURVE",
"315 576 CURVE SMOOTH",
"294.333 586.667 OFFCURVE",
"270.333 592 OFFCURVE",
"243 592 CURVE SMOOTH",
"210.333 592 OFFCURVE",
"178 585 OFFCURVE",
"146 571 CURVE SMOOTH",
"106.667 553.667 OFFCURVE",
"86.333 531.333 OFFCURVE",
"85 504 CURVE",
"83.667 498 OFFCURVE",
"85.333 495 OFFCURVE",
"90 495 CURVE SMOOTH",
"93.333 495 OFFCURVE",
"95.667 497.667 OFFCURVE",
"97 503 CURVE SMOOTH",
"100.333 529 OFFCURVE",
"118.333 549.333 OFFCURVE",
"151 564 CURVE SMOOTH",
"177 576.667 OFFCURVE",
"205 583 OFFCURVE",
"235 583 CURVE SMOOTH",
"259.667 583 OFFCURVE",
"280.667 577.667 OFFCURVE",
"298 567 CURVE SMOOTH",
"320 555 OFFCURVE",
"331 538 OFFCURVE",
"331 516 CURVE SMOOTH",
"331 478.667 OFFCURVE",
"299.667 452 OFFCURVE",
"237 436 CURVE SMOOTH",
"229 434 OFFCURVE",
"205.333 431 OFFCURVE",
"166 427 CURVE SMOOTH",
"135.333 424.333 OFFCURVE",
"120 420.333 OFFCURVE",
"120 415 CURVE SMOOTH",
"120 409 OFFCURVE",
"127 408 OFFCURVE",
"140 408 CURVE SMOOTH",
"161 408 OFFCURVE",
"182 405 OFFCURVE",
"204 400 CURVE SMOOTH",
"235.333 390.667 OFFCURVE",
"251 376.667 OFFCURVE",
"251 358 CURVE SMOOTH",
"251 343.333 OFFCURVE",
"240.667 327.667 OFFCURVE",
"220 311 CURVE SMOOTH",
"185.333 282.333 OFFCURVE",
"144 268 OFFCURVE",
"96 268 CURVE SMOOTH",
"72.667 268 OFFCURVE",
"57 273.333 OFFCURVE",
"49 284 CURVE SMOOTH",
"44.333 288.667 OFFCURVE",
"42 294.667 OFFCURVE",
"42 302 CURVE SMOOTH",
"42 320.926 OFFCURVE",
"75 334.015 OFFCURVE",
"75 339 CURVE",
"73.667 341 OFFCURVE",
"71 342 OFFCURVE",
"67 342 CURVE",
"42.333 337.333 OFFCURVE",
"30 324.333 OFFCURVE",
"30 303 CURVE SMOOTH",
"30 296.333 OFFCURVE",
"31.667 289 OFFCURVE",
"35 281 CURVE SMOOTH",
"43 261.667 OFFCURVE",
"65 252 OFFCURVE",
"101 252 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01213 21 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 951 50 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 13 22 13 38 13 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 13 69 13 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01211 21 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 50 186 50 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01244 17 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 330;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = onehalf;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"178 26 LINE",
"179.333 46 OFFCURVE",
"181.667 62.333 OFFCURVE",
"185 75 CURVE SMOOTH",
"201.667 140.333 OFFCURVE",
"249.667 221.667 OFFCURVE",
"329 319 CURVE SMOOTH",
"381 381.667 OFFCURVE",
"447 450.667 OFFCURVE",
"527 526 CURVE SMOOTH",
"528.333 527.333 OFFCURVE",
"529 528.333 OFFCURVE",
"529 529 CURVE SMOOTH",
"529 530 LINE SMOOTH",
"529 533 OFFCURVE",
"525 533 OFFCURVE",
"516 533 CURVE SMOOTH",
"508 533 OFFCURVE",
"500 531 OFFCURVE",
"493 525 CURVE SMOOTH",
"491.667 524.333 OFFCURVE",
"489.333 522.333 OFFCURVE",
"486 519 CURVE SMOOTH",
"472 506 LINE SMOOTH",
"406 442 OFFCURVE",
"340.333 364.333 OFFCURVE",
"275 273 CURVE SMOOTH",
"200 167 OFFCURVE",
"161 90 OFFCURVE",
"161 43 CURVE SMOOTH",
"161 41 OFFCURVE",
"162 40 OFFCURVE",
"162 39 CURVE SMOOTH",
"163.333 32.333 OFFCURVE",
"170.667 25 OFFCURVE",
"176 25 CURVE"
);
},
{
closed = 1;
nodes = (
"523 -20 OFFCURVE",
"530 -11 OFFCURVE",
"530 4 CURVE SMOOTH",
"530 31 OFFCURVE",
"482 44 OFFCURVE",
"386 44 CURVE",
"396.667 54.667 OFFCURVE",
"420 71.333 OFFCURVE",
"456 94 CURVE SMOOTH",
"470.667 103.333 OFFCURVE",
"483.5 111.333 OFFCURVE",
"494.5 118 CURVE SMOOTH",
"522 135 LINE SMOOTH",
"585.333 175 OFFCURVE",
"617 216.333 OFFCURVE",
"617 259 CURVE SMOOTH",
"617 299 OFFCURVE",
"597.333 319 OFFCURVE",
"558 319 CURVE SMOOTH",
"526.667 319 OFFCURVE",
"494.333 306.333 OFFCURVE",
"461 281 CURVE SMOOTH",
"428.333 256.333 OFFCURVE",
"409 229 OFFCURVE",
"403 199 CURVE SMOOTH",
"402.333 194.333 OFFCURVE",
"402.667 192 OFFCURVE",
"404 192 CURVE SMOOTH",
"408 192 OFFCURVE",
"410.333 194.333 OFFCURVE",
"411 199 CURVE",
"424.333 238.333 OFFCURVE",
"458 269.333 OFFCURVE",
"512 292 CURVE SMOOTH",
"531.333 300.667 OFFCURVE",
"548.667 305 OFFCURVE",
"564 305 CURVE SMOOTH",
"588 305 OFFCURVE",
"600 294.333 OFFCURVE",
"600 273 CURVE SMOOTH",
"600 254.333 OFFCURVE",
"589.333 231.333 OFFCURVE",
"568 204 CURVE SMOOTH",
"544 174 OFFCURVE",
"506.667 141.333 OFFCURVE",
"456 106 CURVE SMOOTH",
"406.667 71.333 OFFCURVE",
"363.333 48 OFFCURVE",
"326 36 CURVE",
"308.667 36 OFFCURVE",
"283 18 OFFCURVE",
"283 2 CURVE SMOOTH",
"283 -3.333 OFFCURVE",
"287 -6 OFFCURVE",
"295 -6 CURVE SMOOTH",
"299 -6 OFFCURVE",
"305 -4.667 OFFCURVE",
"313 -2 CURVE SMOOTH",
"374 21 OFFCURVE",
"419 30 OFFCURVE",
"450 30 CURVE SMOOTH",
"460 30 OFFCURVE",
"474 28 OFFCURVE",
"489 24 CURVE SMOOTH",
"512.333 18 OFFCURVE",
"524 10.333 OFFCURVE",
"524 1 CURVE SMOOTH",
"524 -3.667 OFFCURVE",
"519.333 -8.667 OFFCURVE",
"510 -14 CURVE",
"506 -15.333 OFFCURVE",
"504 -17 OFFCURVE",
"504 -19 CURVE SMOOTH",
"504 -24.333 OFFCURVE",
"506.667 -26 OFFCURVE",
"512 -24 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"142 301 OFFCURVE",
"145.667 302.667 OFFCURVE",
"147 306 CURVE SMOOTH",
"169.667 362.667 OFFCURVE",
"198.667 422.667 OFFCURVE",
"234 486 CURVE SMOOTH",
"263.333 538.667 OFFCURVE",
"290.333 582 OFFCURVE",
"315 616 CURVE",
"319 625.333 OFFCURVE",
"303.333 636 OFFCURVE",
"294 636 CURVE SMOOTH",
"287.333 636 OFFCURVE",
"268.333 624.333 OFFCURVE",
"237 601 CURVE SMOOTH",
"199.667 571.667 OFFCURVE",
"181 546.333 OFFCURVE",
"181 525 CURVE SMOOTH",
"181 523.667 OFFCURVE",
"181.667 523 OFFCURVE",
"183 523 CURVE SMOOTH",
"186.333 523 OFFCURVE",
"189.333 524.333 OFFCURVE",
"192 527 CURVE SMOOTH",
"210.667 545.667 OFFCURVE",
"227 558.333 OFFCURVE",
"241 565 CURVE",
"194.333 451.667 OFFCURVE",
"155.667 371 OFFCURVE",
"129 315 CURVE",
"127 308 LINE",
"127 303.333 OFFCURVE",
"130 301 OFFCURVE",
"136 301 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 574;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"178 26 LINE",
"179.333 46 OFFCURVE",
"181.667 62.333 OFFCURVE",
"185 75 CURVE SMOOTH",
"201.667 140.333 OFFCURVE",
"249.667 221.667 OFFCURVE",
"329 319 CURVE SMOOTH",
"381 381.667 OFFCURVE",
"447 450.667 OFFCURVE",
"527 526 CURVE SMOOTH",
"528.333 527.333 OFFCURVE",
"529 528.333 OFFCURVE",
"529 529 CURVE SMOOTH",
"529 530 LINE SMOOTH",
"529 533 OFFCURVE",
"525 533 OFFCURVE",
"516 533 CURVE SMOOTH",
"508 533 OFFCURVE",
"500 531 OFFCURVE",
"493 525 CURVE SMOOTH",
"491.667 524.333 OFFCURVE",
"489.333 522.333 OFFCURVE",
"486 519 CURVE SMOOTH",
"472 506 LINE SMOOTH",
"406 442 OFFCURVE",
"340.333 364.333 OFFCURVE",
"275 273 CURVE SMOOTH",
"200 167 OFFCURVE",
"161 90 OFFCURVE",
"161 43 CURVE SMOOTH",
"161 41 OFFCURVE",
"162 40 OFFCURVE",
"162 39 CURVE SMOOTH",
"163.333 32.333 OFFCURVE",
"170.667 25 OFFCURVE",
"176 25 CURVE"
);
},
{
closed = 1;
nodes = (
"370 -21.5 LINE SMOOTH",
"372 -18.5 OFFCURVE",
"374 -14.667 OFFCURVE",
"376 -10 CURVE SMOOTH",
"397 34 LINE SMOOTH",
"419.667 83.333 OFFCURVE",
"437.333 117 OFFCURVE",
"448 137 CURVE",
"452 137 OFFCURVE",
"455 137.333 OFFCURVE",
"457 138 CURVE",
"464 138 LINE SMOOTH",
"471.333 138 OFFCURVE",
"479.667 137 OFFCURVE",
"489 135 CURVE SMOOTH",
"509 131 LINE",
"511 133 LINE",
"511 131 LINE",
"516.333 131 OFFCURVE",
"519 133.667 OFFCURVE",
"519 139 CURVE SMOOTH",
"519 143.667 OFFCURVE",
"502 149.667 OFFCURVE",
"468 157 CURVE SMOOTH",
"462 159 LINE",
"462 163.667 OFFCURVE",
"476.667 189.667 OFFCURVE",
"506 237 CURVE SMOOTH",
"536.667 285 OFFCURVE",
"554.667 311.667 OFFCURVE",
"560 317 CURVE",
"560 329 LINE SMOOTH",
"560 351 OFFCURVE",
"554.333 362 OFFCURVE",
"543 362 CURVE",
"513.667 324.667 OFFCURVE",
"476.333 290.333 OFFCURVE",
"431 257 CURVE SMOOTH",
"396.333 230.333 OFFCURVE",
"354.333 201.333 OFFCURVE",
"305 168 CURVE SMOOTH",
"288.5 157.5 LINE SMOOTH",
"284.167 154.5 OFFCURVE",
"280.333 152.333 OFFCURVE",
"277 151 CURVE",
"263 141 OFFCURVE",
"256 133.667 OFFCURVE",
"256 129 CURVE SMOOTH",
"256 120.333 OFFCURVE",
"260 116 OFFCURVE",
"268 116 CURVE",
"314 131.333 OFFCURVE",
"362.333 139 OFFCURVE",
"413 139 CURVE SMOOTH",
"417 139 OFFCURVE",
"419.667 138.667 OFFCURVE",
"421 138 CURVE",
"383 57 LINE SMOOTH",
"364.333 17 OFFCURVE",
"355 -7.667 OFFCURVE",
"355 -17 CURVE SMOOTH",
"355 -25.667 OFFCURVE",
"358.333 -30 OFFCURVE",
"365 -30 CURVE"
);
},
{
closed = 1;
nodes = (
"429.667 162.667 OFFCURVE",
"413 163 OFFCURVE",
"381 163 CURVE SMOOTH",
"334 163 LINE",
"410 223 OFFCURVE",
"467.333 266.667 OFFCURVE",
"506 296 CURVE",
"462.667 206.667 OFFCURVE",
"437.667 162 OFFCURVE",
"431 162 CURVE"
);
},
{
closed = 1;
nodes = (
"142 301 OFFCURVE",
"145.667 302.667 OFFCURVE",
"147 306 CURVE SMOOTH",
"169.667 362.667 OFFCURVE",
"198.667 422.667 OFFCURVE",
"234 486 CURVE SMOOTH",
"263.333 538.667 OFFCURVE",
"290.333 582 OFFCURVE",
"315 616 CURVE",
"319 625.333 OFFCURVE",
"303.333 636 OFFCURVE",
"294 636 CURVE SMOOTH",
"287.333 636 OFFCURVE",
"268.333 624.333 OFFCURVE",
"237 601 CURVE SMOOTH",
"199.667 571.667 OFFCURVE",
"181 546.333 OFFCURVE",
"181 525 CURVE SMOOTH",
"181 523.667 OFFCURVE",
"181.667 523 OFFCURVE",
"183 523 CURVE SMOOTH",
"186.333 523 OFFCURVE",
"189.333 524.333 OFFCURVE",
"192 527 CURVE SMOOTH",
"210.667 545.667 OFFCURVE",
"227 558.333 OFFCURVE",
"241 565 CURVE",
"194.333 451.667 OFFCURVE",
"155.667 371 OFFCURVE",
"129 315 CURVE",
"127 308 LINE",
"127 303.333 OFFCURVE",
"130 301 OFFCURVE",
"136 301 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01281 947 59 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01213 52 23 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01219 52 23 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01277 52 23 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 574;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = threequarters;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"204 26 LINE",
"205.333 46 OFFCURVE",
"207.667 62.333 OFFCURVE",
"211 75 CURVE SMOOTH",
"227.667 140.333 OFFCURVE",
"275.667 221.667 OFFCURVE",
"355 319 CURVE SMOOTH",
"407 381.667 OFFCURVE",
"473 450.667 OFFCURVE",
"553 526 CURVE SMOOTH",
"554.333 527.333 OFFCURVE",
"555 528.333 OFFCURVE",
"555 529 CURVE SMOOTH",
"555 530 LINE SMOOTH",
"555 533 OFFCURVE",
"551 533 OFFCURVE",
"542 533 CURVE SMOOTH",
"534 533 OFFCURVE",
"526 531 OFFCURVE",
"519 525 CURVE SMOOTH",
"517.667 524.333 OFFCURVE",
"515.333 522.333 OFFCURVE",
"512 519 CURVE SMOOTH",
"498 506 LINE SMOOTH",
"432 442 OFFCURVE",
"366.333 364.333 OFFCURVE",
"301 273 CURVE SMOOTH",
"226 167 OFFCURVE",
"187 90 OFFCURVE",
"187 43 CURVE SMOOTH",
"187 41 OFFCURVE",
"188 40 OFFCURVE",
"188 39 CURVE SMOOTH",
"189.333 32.333 OFFCURVE",
"196.667 25 OFFCURVE",
"202 25 CURVE"
);
},
{
closed = 1;
nodes = (
"150.333 252 OFFCURVE",
"194.667 266 OFFCURVE",
"234 294 CURVE SMOOTH",
"262 314 OFFCURVE",
"276 335.667 OFFCURVE",
"276 359 CURVE SMOOTH",
"276 397 OFFCURVE",
"247.667 415.667 OFFCURVE",
"191 415 CURVE",
"248 427 LINE",
"319.333 450.333 OFFCURVE",
"355 481.667 OFFCURVE",
"355 521 CURVE SMOOTH",
"355 545 OFFCURVE",
"341.667 563.333 OFFCURVE",
"315 576 CURVE SMOOTH",
"294.333 586.667 OFFCURVE",
"270.333 592 OFFCURVE",
"243 592 CURVE SMOOTH",
"210.333 592 OFFCURVE",
"178 585 OFFCURVE",
"146 571 CURVE SMOOTH",
"106.667 553.667 OFFCURVE",
"86.333 531.333 OFFCURVE",
"85 504 CURVE",
"83.667 498 OFFCURVE",
"85.333 495 OFFCURVE",
"90 495 CURVE SMOOTH",
"93.333 495 OFFCURVE",
"95.667 497.667 OFFCURVE",
"97 503 CURVE SMOOTH",
"100.333 529 OFFCURVE",
"118.333 549.333 OFFCURVE",
"151 564 CURVE SMOOTH",
"177 576.667 OFFCURVE",
"205 583 OFFCURVE",
"235 583 CURVE SMOOTH",
"259.667 583 OFFCURVE",
"280.667 577.667 OFFCURVE",
"298 567 CURVE SMOOTH",
"320 555 OFFCURVE",
"331 538 OFFCURVE",
"331 516 CURVE SMOOTH",
"331 478.667 OFFCURVE",
"299.667 452 OFFCURVE",
"237 436 CURVE SMOOTH",
"229 434 OFFCURVE",
"205.333 431 OFFCURVE",
"166 427 CURVE SMOOTH",
"135.333 424.333 OFFCURVE",
"120 420.333 OFFCURVE",
"120 415 CURVE SMOOTH",
"120 409 OFFCURVE",
"127 408 OFFCURVE",
"140 408 CURVE SMOOTH",
"161 408 OFFCURVE",
"182 405 OFFCURVE",
"204 400 CURVE SMOOTH",
"235.333 390.667 OFFCURVE",
"251 376.667 OFFCURVE",
"251 358 CURVE SMOOTH",
"251 343.333 OFFCURVE",
"240.667 327.667 OFFCURVE",
"220 311 CURVE SMOOTH",
"185.333 282.333 OFFCURVE",
"144 268 OFFCURVE",
"96 268 CURVE SMOOTH",
"72.667 268 OFFCURVE",
"57 273.333 OFFCURVE",
"49 284 CURVE SMOOTH",
"44.333 288.667 OFFCURVE",
"42 294.667 OFFCURVE",
"42 302 CURVE SMOOTH",
"42 320.926 OFFCURVE",
"75 334.015 OFFCURVE",
"75 339 CURVE",
"73.667 341 OFFCURVE",
"71 342 OFFCURVE",
"67 342 CURVE",
"42.333 337.333 OFFCURVE",
"30 324.333 OFFCURVE",
"30 303 CURVE SMOOTH",
"30 296.333 OFFCURVE",
"31.667 289 OFFCURVE",
"35 281 CURVE SMOOTH",
"43 261.667 OFFCURVE",
"65 252 OFFCURVE",
"101 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"422 -21.5 LINE SMOOTH",
"424 -18.5 OFFCURVE",
"426 -14.667 OFFCURVE",
"428 -10 CURVE SMOOTH",
"449 34 LINE SMOOTH",
"471.667 83.333 OFFCURVE",
"489.333 117 OFFCURVE",
"500 137 CURVE",
"504 137 OFFCURVE",
"507 137.333 OFFCURVE",
"509 138 CURVE",
"516 138 LINE SMOOTH",
"523.333 138 OFFCURVE",
"531.667 137 OFFCURVE",
"541 135 CURVE SMOOTH",
"561 131 LINE",
"563 133 LINE",
"563 131 LINE",
"568.333 131 OFFCURVE",
"571 133.667 OFFCURVE",
"571 139 CURVE SMOOTH",
"571 143.667 OFFCURVE",
"554 149.667 OFFCURVE",
"520 157 CURVE SMOOTH",
"514 159 LINE",
"514 163.667 OFFCURVE",
"528.667 189.667 OFFCURVE",
"558 237 CURVE SMOOTH",
"588.667 285 OFFCURVE",
"606.667 311.667 OFFCURVE",
"612 317 CURVE",
"612 329 LINE SMOOTH",
"612 351 OFFCURVE",
"606.333 362 OFFCURVE",
"595 362 CURVE",
"565.667 324.667 OFFCURVE",
"528.333 290.333 OFFCURVE",
"483 257 CURVE SMOOTH",
"448.333 230.333 OFFCURVE",
"406.333 201.333 OFFCURVE",
"357 168 CURVE SMOOTH",
"340.5 157.5 LINE SMOOTH",
"336.167 154.5 OFFCURVE",
"332.333 152.333 OFFCURVE",
"329 151 CURVE",
"315 141 OFFCURVE",
"308 133.667 OFFCURVE",
"308 129 CURVE SMOOTH",
"308 120.333 OFFCURVE",
"312 116 OFFCURVE",
"320 116 CURVE",
"366 131.333 OFFCURVE",
"414.333 139 OFFCURVE",
"465 139 CURVE SMOOTH",
"469 139 OFFCURVE",
"471.667 138.667 OFFCURVE",
"473 138 CURVE",
"435 57 LINE SMOOTH",
"416.333 17 OFFCURVE",
"407 -7.667 OFFCURVE",
"407 -17 CURVE SMOOTH",
"407 -25.667 OFFCURVE",
"410.333 -30 OFFCURVE",
"417 -30 CURVE"
);
},
{
closed = 1;
nodes = (
"481.667 162.667 OFFCURVE",
"465 163 OFFCURVE",
"433 163 CURVE SMOOTH",
"386 163 LINE",
"462 223 OFFCURVE",
"519.333 266.667 OFFCURVE",
"558 296 CURVE",
"514.667 206.667 OFFCURVE",
"489.667 162 OFFCURVE",
"483 162 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01213 21 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 951 50 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 13 22 13 38 13 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 13 69 13 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01211 21 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 50 186 50 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012117 947 95 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01244 17 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012113 17 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012117 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 674;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = RS;
lastChange = "2021-05-18 10:20:52 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 462;
}
);
note = RS;
},
{
glyphname = US;
lastChange = "2021-05-18 10:20:52 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 462;
}
);
note = US;
},
{
glyphname = notequal;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"166.667 126 OFFCURVE",
"173.667 129.667 OFFCURVE",
"179 137 CURVE SMOOTH",
"217 187 LINE",
"269 192.333 OFFCURVE",
"316.667 195 OFFCURVE",
"362 195 CURVE SMOOTH",
"372.667 195 OFFCURVE",
"378 198.333 OFFCURVE",
"378 205 CURVE SMOOTH",
"378 213.667 OFFCURVE",
"371.333 218.667 OFFCURVE",
"358 220 CURVE SMOOTH",
"245 223 LINE",
"269.667 254.333 OFFCURVE",
"286.333 275 OFFCURVE",
"295 285 CURVE",
"317.667 286.333 OFFCURVE",
"339.333 287 OFFCURVE",
"362 287 CURVE SMOOTH",
"372.667 287 OFFCURVE",
"378 290.333 OFFCURVE",
"378 297 CURVE SMOOTH",
"378 307 OFFCURVE",
"371.333 312 OFFCURVE",
"358 312 CURVE SMOOTH",
"317 313 LINE",
"346 354 LINE",
"348 356 OFFCURVE",
"349 358 OFFCURVE",
"349 360 CURVE SMOOTH",
"349 362.667 OFFCURVE",
"347.333 364 OFFCURVE",
"344 364 CURVE SMOOTH",
"336.667 364 OFFCURVE",
"327.333 357.333 OFFCURVE",
"316 344 CURVE",
"295 314 LINE",
"223 315.333 OFFCURVE",
"176.333 316 OFFCURVE",
"151 316 CURVE SMOOTH",
"141 316 OFFCURVE",
"136 310 OFFCURVE",
"136 298 CURVE SMOOTH",
"136 278.667 OFFCURVE",
"141 269.667 OFFCURVE",
"151 271 CURVE SMOOTH",
"205.667 277.667 OFFCURVE",
"245.667 281.667 OFFCURVE",
"271 283 CURVE",
"222 223 LINE",
"151 223 LINE SMOOTH",
"141 223 OFFCURVE",
"136 217.333 OFFCURVE",
"136 206 CURVE SMOOTH",
"136 186.667 OFFCURVE",
"141 177.667 OFFCURVE",
"151 179 CURVE SMOOTH",
"190 184 LINE",
"154 137 LINE",
"151 130 LINE",
"151 127.333 OFFCURVE",
"153.333 126 OFFCURVE",
"158 126 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01247 13 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 47 22 47 38 47 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 47 69 47 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01210 13 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01217 13 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01234 13 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01244 13 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01245 947 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01226 949 42 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 6 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 423;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = infinity;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"374 246 OFFCURVE",
"395.667 256.667 OFFCURVE",
"413 278 CURVE SMOOTH",
"431 300 OFFCURVE",
"440 324.333 OFFCURVE",
"440 351 CURVE SMOOTH",
"440 401.667 OFFCURVE",
"399.667 440 OFFCURVE",
"349 440 CURVE SMOOTH",
"329.667 440 OFFCURVE",
"310.667 431.667 OFFCURVE",
"292 415 CURVE SMOOTH",
"281.333 405.667 OFFCURVE",
"267.667 388.667 OFFCURVE",
"249 366 CURVE",
"221 414 OFFCURVE",
"182.333 438 OFFCURVE",
"133 438 CURVE SMOOTH",
"77 438 OFFCURVE",
"42 398 OFFCURVE",
"42 342 CURVE SMOOTH",
"42 292.667 OFFCURVE",
"73.667 252 OFFCURVE",
"123 252 CURVE SMOOTH",
"143.667 252 OFFCURVE",
"163.333 260.333 OFFCURVE",
"182 277 CURVE SMOOTH",
"191.333 286.333 OFFCURVE",
"205.667 301.667 OFFCURVE",
"227 327 CURVE",
"240.333 305.667 OFFCURVE",
"257.667 288 OFFCURVE",
"279 272 CURVE SMOOTH",
"303.667 254.667 OFFCURVE",
"326.667 246 OFFCURVE",
"348 246 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86.667 281 OFFCURVE",
"54 302 OFFCURVE",
"54 338 CURVE SMOOTH",
"54 378 OFFCURVE",
"79.333 409 OFFCURVE",
"118 409 CURVE SMOOTH",
"158.667 409 OFFCURVE",
"193.667 384 OFFCURVE",
"223 334 CURVE",
"187.667 298.667 OFFCURVE",
"154.667 281 OFFCURVE",
"124 281 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"326.333 275 OFFCURVE",
"299.667 289 OFFCURVE",
"279 317 CURVE",
"253 359 LINE",
"262 374 LINE",
"284.667 402 OFFCURVE",
"311.333 416 OFFCURVE",
"342 416 CURVE SMOOTH",
"364 416 OFFCURVE",
"383.667 410 OFFCURVE",
"401 398 CURVE SMOOTH",
"419.667 384 OFFCURVE",
"429 366 OFFCURVE",
"429 344 CURVE SMOOTH",
"429 305.333 OFFCURVE",
"397.667 275 OFFCURVE",
"359 275 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01227 949 45 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01251 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 466;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = lessequal;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"194 78 OFFCURVE",
"196 80 OFFCURVE",
"196 84 CURVE SMOOTH",
"196 88.667 OFFCURVE",
"192 94.667 OFFCURVE",
"184 102 CURVE SMOOTH",
"88 196 LINE",
"174 289 LINE",
"183.333 302.333 OFFCURVE",
"188 313.667 OFFCURVE",
"188 323 CURVE SMOOTH",
"188 329.667 OFFCURVE",
"187.333 333 OFFCURVE",
"186 333 CURVE SMOOTH",
"184 333 OFFCURVE",
"162.667 314 OFFCURVE",
"122 276 CURVE SMOOTH",
"101.333 257.333 OFFCURVE",
"85 242.333 OFFCURVE",
"73 231 CURVE SMOOTH",
"48 207 LINE SMOOTH",
"44 203 OFFCURVE",
"42 195.667 OFFCURVE",
"42 185 CURVE SMOOTH",
"42 173 OFFCURVE",
"44 165.667 OFFCURVE",
"48 163 CURVE SMOOTH",
"54.667 157 OFFCURVE",
"79 141.333 OFFCURVE",
"121 116 CURVE SMOOTH",
"162.333 90.667 OFFCURVE",
"185.333 78 OFFCURVE",
"190 78 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193 19 LINE",
"193 39 LINE",
"16 40 LINE",
"14 39 LINE",
"14 19 LINE",
"191 18 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01228 948 24 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 232;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = greaterequal;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"59.333 78 OFFCURVE",
"82.667 90.667 OFFCURVE",
"124 116 CURVE SMOOTH",
"143.333 128 OFFCURVE",
"159 138 OFFCURVE",
"171 146 CURVE SMOOTH",
"196 163 LINE",
"200 167 OFFCURVE",
"202 174.333 OFFCURVE",
"202 185 CURVE SMOOTH",
"202 195.667 OFFCURVE",
"200 203 OFFCURVE",
"196 207 CURVE SMOOTH",
"178.667 224.333 OFFCURVE",
"163.333 238 OFFCURVE",
"150 250 CURVE SMOOTH",
"61 332 LINE",
"59 333 LINE",
"56.333 332.333 OFFCURVE",
"55 329 OFFCURVE",
"55 323 CURVE SMOOTH",
"55 319.667 OFFCURVE",
"55.667 315.333 OFFCURVE",
"57 310 CURVE",
"76.5 284.5 LINE SMOOTH",
"82.833 276.167 OFFCURVE",
"89.667 268.333 OFFCURVE",
"97 261 CURVE SMOOTH",
"156 196 LINE",
"61 102 LINE SMOOTH",
"52.333 94 OFFCURVE",
"48 88 OFFCURVE",
"48 84 CURVE SMOOTH",
"48 80 OFFCURVE",
"50 78 OFFCURVE",
"54 78 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193 19 LINE",
"193 39 LINE",
"16 40 LINE",
"14 39 LINE",
"14 19 LINE",
"191 18 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01232 948 28 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 232;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = partialdiff;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"132 -3 OFFCURVE",
"169 20 OFFCURVE",
"202 65 CURVE SMOOTH",
"249 131 OFFCURVE",
"273 211 OFFCURVE",
"273 304 CURVE SMOOTH",
"273 357 OFFCURVE",
"262 401 OFFCURVE",
"242 436 CURVE SMOOTH",
"218 480 OFFCURVE",
"181 502 OFFCURVE",
"132 502 CURVE SMOOTH",
"102 502 OFFCURVE",
"87 495 OFFCURVE",
"87 485 CURVE SMOOTH",
"87 481 OFFCURVE",
"91 479 OFFCURVE",
"96 479 CURVE SMOOTH",
"100 479 OFFCURVE",
"105 480 OFFCURVE",
"110 481 CURVE SMOOTH",
"116 482 OFFCURVE",
"121 482 OFFCURVE",
"124 482 CURVE SMOOTH",
"164 482 OFFCURVE",
"195 457 OFFCURVE",
"218 407 CURVE SMOOTH",
"235 366 OFFCURVE",
"245 323 OFFCURVE",
"245 277 CURVE SMOOTH",
"245 236 OFFCURVE",
"238 199 OFFCURVE",
"224 164 CURVE",
"230 183 OFFCURVE",
"233 200 OFFCURVE",
"233 213 CURVE SMOOTH",
"233 244 OFFCURVE",
"220 260 OFFCURVE",
"195 260 CURVE SMOOTH",
"166 260 OFFCURVE",
"136 244 OFFCURVE",
"105 214 CURVE SMOOTH",
"63 174 OFFCURVE",
"42 127 OFFCURVE",
"42 73 CURVE SMOOTH",
"42 22 OFFCURVE",
"58 -3 OFFCURVE",
"92 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"83 2 OFFCURVE",
"76 14 OFFCURVE",
"76 37 CURVE SMOOTH",
"76 90 OFFCURVE",
"94 143 OFFCURVE",
"131 195 CURVE SMOOTH",
"154 228 OFFCURVE",
"175 244 OFFCURVE",
"195 244 CURVE SMOOTH",
"212 244 OFFCURVE",
"221 231 OFFCURVE",
"221 204 CURVE SMOOTH",
"221 178 OFFCURVE",
"213 152 OFFCURVE",
"199 125 CURVE SMOOTH",
"156 42 OFFCURVE",
"122 2 OFFCURVE",
"94 2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 951 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 950 31 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 31 186 31 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01214 6 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01216 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 37 181 37 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01210 4 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01214 4 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 245;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = pi;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"65 -4 LINE",
"110 211 LINE",
"193 181 LINE",
"154 -2 LINE",
"166 -2 LINE",
"205 180 LINE",
"211.667 178.667 OFFCURVE",
"217.667 179.667 OFFCURVE",
"223 183 CURVE",
"242.455 191.338 OFFCURVE",
"271 221.074 OFFCURVE",
"271 240 CURVE SMOOTH",
"271 241 LINE",
"269 243 LINE",
"256 226 LINE SMOOTH",
"246.667 214.667 OFFCURVE",
"235 209 OFFCURVE",
"221 209 CURVE SMOOTH",
"207 209 OFFCURVE",
"186 215 OFFCURVE",
"158 227 CURVE SMOOTH",
"130.667 239 OFFCURVE",
"110.333 245 OFFCURVE",
"97 245 CURVE SMOOTH",
"92.333 245 OFFCURVE",
"87.667 244 OFFCURVE",
"83 242 CURVE SMOOTH",
"66.192 233.596 OFFCURVE",
"41 204.166 OFFCURVE",
"41 187 CURVE SMOOTH",
"41 184.333 OFFCURVE",
"42 183 OFFCURVE",
"44 183 CURVE SMOOTH",
"45.333 183 OFFCURVE",
"48.667 187.667 OFFCURVE",
"54 197 CURVE",
"58.667 209 OFFCURVE",
"69 215 OFFCURVE",
"85 215 CURVE SMOOTH",
"87.667 215 OFFCURVE",
"92.333 214.333 OFFCURVE",
"99 213 CURVE",
"53 -4 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 281;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = approxequal;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"165 161 OFFCURVE",
"177.667 166.667 OFFCURVE",
"193 178 CURVE SMOOTH",
"205 186.667 OFFCURVE",
"211 194.333 OFFCURVE",
"211 201 CURVE SMOOTH",
"211 202 LINE",
"209 203 LINE",
"197 192 LINE SMOOTH",
"189.667 184.667 OFFCURVE",
"179.667 181 OFFCURVE",
"167 181 CURVE SMOOTH",
"156.333 181 OFFCURVE",
"140.667 185 OFFCURVE",
"120 193 CURVE SMOOTH",
"100 201 OFFCURVE",
"84.667 205 OFFCURVE",
"74 205 CURVE SMOOTH",
"64.667 205 OFFCURVE",
"54.333 200.667 OFFCURVE",
"43 192 CURVE SMOOTH",
"31 182.667 OFFCURVE",
"25 174.333 OFFCURVE",
"25 167 CURVE SMOOTH",
"25 165 OFFCURVE",
"25.667 164 OFFCURVE",
"27 164 CURVE",
"30.333 168 OFFCURVE",
"33.667 171.333 OFFCURVE",
"37 174 CURVE SMOOTH",
"43.667 179.333 OFFCURVE",
"52.333 185 OFFCURVE",
"63 185 CURVE SMOOTH",
"74.333 185 OFFCURVE",
"90 181 OFFCURVE",
"110 173 CURVE SMOOTH",
"130.667 165 OFFCURVE",
"145.667 161 OFFCURVE",
"155 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165 97 OFFCURVE",
"177.667 102.667 OFFCURVE",
"193 114 CURVE SMOOTH",
"205 122.667 OFFCURVE",
"211 130.333 OFFCURVE",
"211 137 CURVE SMOOTH",
"211 138 LINE",
"209 139 LINE",
"197 128 LINE SMOOTH",
"189.667 120.667 OFFCURVE",
"179.667 117 OFFCURVE",
"167 117 CURVE SMOOTH",
"156.333 117 OFFCURVE",
"140.667 121 OFFCURVE",
"120 129 CURVE SMOOTH",
"100 137 OFFCURVE",
"84.667 141 OFFCURVE",
"74 141 CURVE SMOOTH",
"64.667 141 OFFCURVE",
"54.333 136.667 OFFCURVE",
"43 128 CURVE SMOOTH",
"31 118.667 OFFCURVE",
"25 110.333 OFFCURVE",
"25 103 CURVE SMOOTH",
"25 101 OFFCURVE",
"25.667 100 OFFCURVE",
"27 100 CURVE",
"30.333 104 OFFCURVE",
"33.667 107.333 OFFCURVE",
"37 110 CURVE SMOOTH",
"43.667 115.333 OFFCURVE",
"52.333 121 OFFCURVE",
"63 121 CURVE SMOOTH",
"74.333 121 OFFCURVE",
"90 117 OFFCURVE",
"110 109 CURVE SMOOTH",
"130.667 101 OFFCURVE",
"145.667 97 OFFCURVE",
"155 97 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01215 33 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 249;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = lozenge;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"307.667 -9 OFFCURVE",
"322.667 5 OFFCURVE",
"328 17 CURVE",
"329 17 LINE",
"516 353 LINE SMOOTH",
"522 364 OFFCURVE",
"525 373 OFFCURVE",
"525 383 CURVE SMOOTH",
"525 389 OFFCURVE",
"523 395 OFFCURVE",
"521 400 CURVE SMOOTH",
"520.333 401.333 OFFCURVE",
"520 402.333 OFFCURVE",
"520 403 CURVE",
"519 405 LINE",
"356 739 LINE",
"354.667 740.333 OFFCURVE",
"353 741 OFFCURVE",
"351 741 CURVE SMOOTH",
"344.333 741 OFFCURVE",
"329.333 727 OFFCURVE",
"324 715 CURVE",
"323 714 LINE",
"135 379 LINE SMOOTH",
"129 369 OFFCURVE",
"127 359 OFFCURVE",
"127 350 CURVE SMOOTH",
"127 340 OFFCURVE",
"130 331 OFFCURVE",
"132 327 CURVE SMOOTH",
"296 -7 LINE",
"297.333 -8.333 OFFCURVE",
"299 -9 OFFCURVE",
"301 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"304.438 84.125 OFFCURVE",
"275.544 145.776 OFFCURVE",
"257 184.5 CURVE SMOOTH",
"223.5 254.5 LINE SMOOTH",
"204.37 294.499 OFFCURVE",
"167.215 370.355 OFFCURVE",
"163 383 CURVE",
"331 681 LINE",
"460.5 410.5 LINE SMOOTH",
"472.882 384.537 OFFCURVE",
"486.502 354.244 OFFCURVE",
"488 349 CURVE",
"321 51 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01229 3 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01237 3 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 624;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = fraction;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"126 210 LINE",
"124 225 OFFCURVE",
"123 238 OFFCURVE",
"123 250 CURVE SMOOTH",
"123 319 OFFCURVE",
"154 404 OFFCURVE",
"214 507 CURVE SMOOTH",
"252.667 572.333 OFFCURVE",
"302 642.333 OFFCURVE",
"366 721 CURVE SMOOTH",
"367.333 722.333 OFFCURVE",
"368 723.333 OFFCURVE",
"368 724 CURVE SMOOTH",
"368 725 LINE",
"366.667 727 OFFCURVE",
"363.667 728 OFFCURVE",
"359 728 CURVE SMOOTH",
"348.333 728 OFFCURVE",
"339.667 725 OFFCURVE",
"333 719 CURVE",
"327.5 712 LINE SMOOTH",
"325.167 708.667 OFFCURVE",
"321.333 704.333 OFFCURVE",
"316 699 CURVE",
"263.333 631 OFFCURVE",
"214.667 551 OFFCURVE",
"170 459 CURVE SMOOTH",
"127 368 OFFCURVE",
"105 298 OFFCURVE",
"105 250 CURVE SMOOTH",
"105 234 OFFCURVE",
"106 225 OFFCURVE",
"108 222 CURVE SMOOTH",
"110.667 216.667 OFFCURVE",
"119.667 209 OFFCURVE",
"125 209 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 376;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = apple;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"235.333 85 OFFCURVE",
"253.333 90.333 OFFCURVE",
"266 101 CURVE",
"278.667 109 OFFCURVE",
"294.667 113 OFFCURVE",
"314 113 CURVE SMOOTH",
"333.333 113 OFFCURVE",
"349.667 109 OFFCURVE",
"363 101 CURVE SMOOTH",
"378.333 90.333 OFFCURVE",
"396.667 85 OFFCURVE",
"418 85 CURVE SMOOTH",
"440.667 85 OFFCURVE",
"468.667 105 OFFCURVE",
"502 145 CURVE SMOOTH",
"530 178.333 OFFCURVE",
"549.333 212 OFFCURVE",
"560 246 CURVE",
"505 268 OFFCURVE",
"476 310 OFFCURVE",
"476 373 CURVE SMOOTH",
"476 426 OFFCURVE",
"499 466 OFFCURVE",
"544 493 CURVE",
"516.667 535 OFFCURVE",
"479 556 OFFCURVE",
"431 556 CURVE SMOOTH",
"418.333 556 OFFCURVE",
"409.667 555 OFFCURVE",
"405 553 CURVE SMOOTH",
"390.333 546.333 OFFCURVE",
"370.333 539.667 OFFCURVE",
"341 533 CURVE SMOOTH",
"330 530 OFFCURVE",
"319 528 OFFCURVE",
"309 528 CURVE SMOOTH",
"302 528 OFFCURVE",
"295 529 OFFCURVE",
"289 531 CURVE SMOOTH",
"263.667 539 OFFCURVE",
"242.667 546.333 OFFCURVE",
"224 553 CURVE SMOOTH",
"220 554.333 OFFCURVE",
"213.333 555 OFFCURVE",
"204 555 CURVE SMOOTH",
"152.667 555 OFFCURVE",
"111.333 527.333 OFFCURVE",
"80 472 CURVE SMOOTH",
"62 440 OFFCURVE",
"53 402.667 OFFCURVE",
"53 360 CURVE SMOOTH",
"53 277.333 OFFCURVE",
"77.667 205.667 OFFCURVE",
"127 145 CURVE SMOOTH",
"159.667 105 OFFCURVE",
"188 85 OFFCURVE",
"212 85 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"349.667 545.333 OFFCURVE",
"377.333 559.667 OFFCURVE",
"402 589 CURVE SMOOTH",
"423.333 617.667 OFFCURVE",
"434 648 OFFCURVE",
"434 680 CURVE SMOOTH",
"434 689.333 OFFCURVE",
"433.333 695.333 OFFCURVE",
"432 698 CURVE",
"423.333 700.667 OFFCURVE",
"410.667 697.667 OFFCURVE",
"394 689 CURVE SMOOTH",
"380.667 682.333 OFFCURVE",
"369.333 674.333 OFFCURVE",
"360 665 CURVE SMOOTH",
"330.667 635.667 OFFCURVE",
"316 601.333 OFFCURVE",
"316 562 CURVE SMOOTH",
"316 557.333 OFFCURVE",
"317 552 OFFCURVE",
"319 546 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 952 2 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 2 74 2 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 2 25 2 41 2 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 592;
}
);
note = apple;
unicode = F8FF;
},
{
glyphname = breve;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"88.667 232 OFFCURVE",
"107 236.667 OFFCURVE",
"133 246 CURVE SMOOTH",
"161 256.667 OFFCURVE",
"175 266 OFFCURVE",
"175 274 CURVE",
"172 278 LINE",
"163.333 278 OFFCURVE",
"149.667 274 OFFCURVE",
"131 266 CURVE SMOOTH",
"112.333 258.667 OFFCURVE",
"98.333 255 OFFCURVE",
"89 255 CURVE SMOOTH",
"67.667 255 OFFCURVE",
"55 261.333 OFFCURVE",
"51 274 CURVE SMOOTH",
"49 282.667 OFFCURVE",
"46.667 287 OFFCURVE",
"44 287 CURVE SMOOTH",
"37.333 287 OFFCURVE",
"31 272.333 OFFCURVE",
"31 263 CURVE SMOOTH",
"31 253.667 OFFCURVE",
"36.333 245.667 OFFCURVE",
"47 239 CURVE SMOOTH",
"55.667 234.333 OFFCURVE",
"66 232 OFFCURVE",
"78 232 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 178;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = dotaccent;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"86 260 OFFCURVE",
"102 276 OFFCURVE",
"102 293 CURVE SMOOTH",
"102 306 OFFCURVE",
"96 312 OFFCURVE",
"86 312 CURVE SMOOTH",
"78 312 OFFCURVE",
"71 308 OFFCURVE",
"64 299 CURVE SMOOTH",
"57 290 OFFCURVE",
"53 281 OFFCURVE",
"53 274 CURVE SMOOTH",
"53 264 OFFCURVE",
"58 260 OFFCURVE",
"68 260 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 3 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 145;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = ring;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"154.333 506 OFFCURVE",
"182 532.333 OFFCURVE",
"182 559 CURVE SMOOTH",
"182 585.667 OFFCURVE",
"162.333 606 OFFCURVE",
"137 606 CURVE SMOOTH",
"113.159 606 OFFCURVE",
"86 576.743 OFFCURVE",
"86 554 CURVE SMOOTH",
"86 527.333 OFFCURVE",
"106.333 506 OFFCURVE",
"129 506 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"112.333 523 OFFCURVE",
"102 534.667 OFFCURVE",
"102 558 CURVE SMOOTH",
"102 580 OFFCURVE",
"112.333 591 OFFCURVE",
"133 591 CURVE SMOOTH",
"155 591 OFFCURVE",
"166 580 OFFCURVE",
"166 558 CURVE SMOOTH",
"166 534.667 OFFCURVE",
"155 523 OFFCURVE",
"133 523 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 952 6 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 0 22 0 38 0 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 0 69 0 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01211 3 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 208;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = hungarumlaut;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"129 327 LINE",
"137 346 OFFCURVE",
"144 362 OFFCURVE",
"148 373 CURVE SMOOTH",
"158 397 OFFCURVE",
"163 412 OFFCURVE",
"163 419 CURVE SMOOTH",
"163 426 OFFCURVE",
"159 429 OFFCURVE",
"152 429 CURVE SMOOTH",
"142 429 OFFCURVE",
"135 424 OFFCURVE",
"134 413 CURVE SMOOTH",
"124 327 LINE"
);
},
{
closed = 1;
nodes = (
"55 327 LINE",
"63 346 OFFCURVE",
"70 360 OFFCURVE",
"74 373 CURVE SMOOTH",
"82 398 OFFCURVE",
"88 412 OFFCURVE",
"88 419 CURVE SMOOTH",
"88 426 OFFCURVE",
"85 429 OFFCURVE",
"79 429 CURVE SMOOTH",
"70 429 OFFCURVE",
"61 421 OFFCURVE",
"60 412 CURVE SMOOTH",
"50 327 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 213;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = ogonek;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"144 -101 OFFCURVE",
"158 -97.667 OFFCURVE",
"176 -91 CURVE SMOOTH",
"196 -85 OFFCURVE",
"206 -79 OFFCURVE",
"206 -73 CURVE SMOOTH",
"206 -69 OFFCURVE",
"203.667 -67 OFFCURVE",
"199 -67 CURVE",
"178 -75 LINE SMOOTH",
"164 -80.333 OFFCURVE",
"154.333 -83 OFFCURVE",
"149 -83 CURVE SMOOTH",
"129 -83 OFFCURVE",
"119 -73.667 OFFCURVE",
"119 -55 CURVE SMOOTH",
"119 -37 OFFCURVE",
"126.333 -17.667 OFFCURVE",
"141 3 CURVE",
"139 5 LINE",
"129 5 OFFCURVE",
"119.333 -5.667 OFFCURVE",
"110 -27 CURVE SMOOTH",
"101.333 -45 OFFCURVE",
"97 -60.333 OFFCURVE",
"97 -73 CURVE SMOOTH",
"97 -91.667 OFFCURVE",
"109.333 -101 OFFCURVE",
"134 -101 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 951 6 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 13 181 13 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01211 4 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 222;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = caron;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"102 214 OFFCURVE",
"110 214 OFFCURVE",
"126 216 CURVE",
"224 285 LINE",
"225 286 LINE",
"225 288.667 OFFCURVE",
"222.667 289.333 OFFCURVE",
"218 288 CURVE",
"213.333 288 OFFCURVE",
"209.667 287 OFFCURVE",
"207 285 CURVE",
"121 238 LINE",
"91 285 LINE SMOOTH",
"89 288 OFFCURVE",
"87 289 OFFCURVE",
"83 289 CURVE SMOOTH",
"82 289 OFFCURVE",
"80 289 OFFCURVE",
"79 289 CURVE",
"77.667 287.667 OFFCURVE",
"77.333 286.333 OFFCURVE",
"78 285 CURVE SMOOTH",
"102 216 LINE"
);
}
);
width = 258;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = _229;
lastChange = "2021-05-18 10:20:52 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"263 276 OFFCURVE",
"284 294 OFFCURVE",
"302 329 CURVE",
"303 330 OFFCURVE",
"300 332 OFFCURVE",
"292 332 CURVE SMOOTH",
"290 332 OFFCURVE",
"289 332 OFFCURVE",
"288 331 CURVE",
"280 315 OFFCURVE",
"269 307 OFFCURVE",
"253 307 CURVE SMOOTH",
"244 307 OFFCURVE",
"230 311 OFFCURVE",
"211 319 CURVE SMOOTH",
"191 327 OFFCURVE",
"176 331 OFFCURVE",
"166 331 CURVE SMOOTH",
"144 331 OFFCURVE",
"124 315 OFFCURVE",
"105 281 CURVE",
"104 280 OFFCURVE",
"108 278 OFFCURVE",
"115 278 CURVE SMOOTH",
"118 278 OFFCURVE",
"120 279 OFFCURVE",
"121 280 CURVE SMOOTH",
"129 295 OFFCURVE",
"140 302 OFFCURVE",
"153 302 CURVE SMOOTH",
"165 302 OFFCURVE",
"179 297 OFFCURVE",
"196 289 CURVE SMOOTH",
"214 281 OFFCURVE",
"229 276 OFFCURVE",
"240 276 CURVE SMOOTH"
);
}
);
width = 323;
}
);
note = _229;
},
{
glyphname = divide;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"259 193 LINE",
"259 212 LINE",
"25 213 LINE",
"24 212 LINE",
"24 193 LINE",
"258 192 LINE"
);
},
{
closed = 1;
nodes = (
"163.333 60 OFFCURVE",
"174 70.333 OFFCURVE",
"174 91 CURVE SMOOTH",
"174 111 OFFCURVE",
"163.333 121 OFFCURVE",
"142 121 CURVE SMOOTH",
"120.667 121 OFFCURVE",
"110 111 OFFCURVE",
"110 91 CURVE SMOOTH",
"110 70.333 OFFCURVE",
"120.667 60 OFFCURVE",
"142 60 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"175.333 277 OFFCURVE",
"186 287.333 OFFCURVE",
"186 308 CURVE SMOOTH",
"186 328.667 OFFCURVE",
"175.333 339 OFFCURVE",
"154 339 CURVE SMOOTH",
"132.667 339 OFFCURVE",
"122 328.667 OFFCURVE",
"122 308 CURVE SMOOTH",
"122 287.333 OFFCURVE",
"132.667 277 OFFCURVE",
"154 277 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 952 12 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 12 74 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 12 25 12 41 12 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0124 12 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\01258 4 74 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 4 121 4 137 4 153 4 169 4 185 4 201 4 217 4 233 4 249 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 4 25 4 41 4 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0120 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01214 10 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0126 2 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 948 17 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 283;
}
);
note = divide;
unicode = 00F7;
},
{
color = 8;
glyphname = periodcentered;
lastChange = "2021-05-18 17:04:34 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"294 251 OFFCURVE",
"329 286 OFFCURVE",
"329 326 CURVE SMOOTH",
"329 362 OFFCURVE",
"300.667 389 OFFCURVE",
"266 389 CURVE SMOOTH",
"226 389 OFFCURVE",
"191 354 OFFCURVE",
"191 314 CURVE SMOOTH",
"191 278 OFFCURVE",
"218 251 OFFCURVE",
"254 251 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 3 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 9 22 9 38 9 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 9 69 9 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0126 0 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 467;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = underscore;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"316 -12 LINE",
"315 0 LINE",
"313 2 LINE",
"2 2 LINE",
"0 0 LINE",
"1 -12 LINE",
"315 -14 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 305;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = guilsinglleft;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"152 22 LINE",
"157 31 LINE",
"158 157 LINE",
"236 212 LINE SMOOTH",
"256.667 226.667 OFFCURVE",
"272.833 239.167 OFFCURVE",
"284.5 249.5 CURVE SMOOTH",
"296.167 259.833 OFFCURVE",
"303.667 268 OFFCURVE",
"307 274 CURVE",
"307 281 LINE",
"300 283 LINE SMOOTH",
"297.333 283.667 OFFCURVE",
"231.667 244.333 OFFCURVE",
"103 165 CURVE",
"119 93 LINE SMOOTH",
"125.667 62.333 OFFCURVE",
"131.333 38 OFFCURVE",
"138 22 CURVE",
"146 19 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 336;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"40 20 LINE",
"229 138 LINE",
"212.333 219.333 OFFCURVE",
"201.333 266.667 OFFCURVE",
"196 280 CURVE",
"187 283 LINE",
"180 280 LINE",
"175 271 LINE",
"175 146 LINE",
"99 91 LINE SMOOTH",
"49.667 55 OFFCURVE",
"25 33 OFFCURVE",
"25 25 CURVE",
"26 21 LINE",
"33 19 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 275;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = fi;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"93.667 -210 OFFCURVE",
"98 -209 OFFCURVE",
"98 -207 CURVE SMOOTH",
"98 -206.333 OFFCURVE",
"95.5 -204.5 OFFCURVE",
"90.5 -201.5 CURVE SMOOTH",
"85.5 -198.5 OFFCURVE",
"81.333 -195.667 OFFCURVE",
"78 -193 CURVE SMOOTH",
"62.667 -177.667 OFFCURVE",
"55 -147 OFFCURVE",
"55 -101 CURVE SMOOTH",
"55 -74.333 OFFCURVE",
"58.333 -36.333 OFFCURVE",
"65 17 CURVE SMOOTH",
"76.333 99.667 OFFCURVE",
"91.333 164.333 OFFCURVE",
"110 211 CURVE",
"154.5 210.5 LINE SMOOTH",
"174.833 210.167 OFFCURVE",
"193.667 210.667 OFFCURVE",
"211 212 CURVE",
"195 159 LINE SMOOTH",
"185.667 124.333 OFFCURVE",
"180.667 99.333 OFFCURVE",
"178 82 CURVE SMOOTH",
"177.333 77.333 OFFCURVE",
"177 72.833 OFFCURVE",
"177 68.5 CURVE SMOOTH",
"177 57 LINE SMOOTH",
"177 19.667 OFFCURVE",
"187.667 1 OFFCURVE",
"209 1 CURVE SMOOTH",
"223.667 1 OFFCURVE",
"242.333 9.333 OFFCURVE",
"265 26 CURVE SMOOTH",
"295.667 48.667 OFFCURVE",
"316.667 68.667 OFFCURVE",
"328 86 CURVE",
"329.333 89.333 OFFCURVE",
"329 91.333 OFFCURVE",
"327 92 CURVE",
"325.667 93.333 OFFCURVE",
"323.667 93 OFFCURVE",
"321 91 CURVE SMOOTH",
"260 40 LINE SMOOTH",
"246.667 28.667 OFFCURVE",
"236 23 OFFCURVE",
"228 23 CURVE SMOOTH",
"217.333 23 OFFCURVE",
"212 33.333 OFFCURVE",
"212 54 CURVE SMOOTH",
"212 60.667 OFFCURVE",
"212.667 66.667 OFFCURVE",
"214 76 CURVE SMOOTH",
"217.333 104.667 OFFCURVE",
"221 127.333 OFFCURVE",
"225 144 CURVE SMOOTH",
"229 160.667 OFFCURVE",
"231.667 169.333 OFFCURVE",
"233 170 CURVE",
"239.667 170.667 OFFCURVE",
"245.667 178 OFFCURVE",
"251 192 CURVE SMOOTH",
"256.333 202.667 OFFCURVE",
"261 220.333 OFFCURVE",
"261 227 CURVE SMOOTH",
"261 227.667 OFFCURVE",
"260.833 228.167 OFFCURVE",
"260.5 228.5 CURVE SMOOTH",
"260 230 LINE SMOOTH",
"260 231.333 OFFCURVE",
"259 232 OFFCURVE",
"257 232 CURVE SMOOTH",
"117 234 LINE",
"133 280.667 OFFCURVE",
"156.333 331.333 OFFCURVE",
"187 382 CURVE SMOOTH",
"228.333 452 OFFCURVE",
"264 487.333 OFFCURVE",
"294 488 CURVE SMOOTH",
"311.333 489.333 OFFCURVE",
"320 481.667 OFFCURVE",
"320 465 CURVE SMOOTH",
"320 461 OFFCURVE",
"319.333 457.333 OFFCURVE",
"318 452 CURVE",
"327.333 456 OFFCURVE",
"332 464 OFFCURVE",
"332 476 CURVE SMOOTH",
"332 492 OFFCURVE",
"324 502.667 OFFCURVE",
"308 508 CURVE SMOOTH",
"300.667 510 OFFCURVE",
"293.333 511 OFFCURVE",
"286 511 CURVE SMOOTH",
"242.667 511 OFFCURVE",
"200 473.333 OFFCURVE",
"158 398 CURVE SMOOTH",
"140 366 OFFCURVE",
"116 311 OFFCURVE",
"86 233 CURVE",
"79.025 233 OFFCURVE",
"59.594 229 OFFCURVE",
"49 229 CURVE SMOOTH",
"45.667 229 OFFCURVE",
"44 227.333 OFFCURVE",
"44 224 CURVE SMOOTH",
"44 216 OFFCURVE",
"54 206 OFFCURVE",
"71 206 CURVE SMOOTH",
"74 206 OFFCURVE",
"77 206 OFFCURVE",
"80 207 CURVE",
"66.667 168.333 OFFCURVE",
"54 121 OFFCURVE",
"42 61 CURVE SMOOTH",
"26 -13 OFFCURVE",
"18 -72.667 OFFCURVE",
"18 -118 CURVE SMOOTH",
"18 -132.5 LINE SMOOTH",
"18 -136.833 OFFCURVE",
"18.333 -141.333 OFFCURVE",
"19 -146 CURVE SMOOTH",
"21 -165.333 OFFCURVE",
"29.667 -181.667 OFFCURVE",
"45 -195 CURVE SMOOTH",
"57.667 -205 OFFCURVE",
"71 -210 OFFCURVE",
"85 -210 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"270 310 OFFCURVE",
"272 311 OFFCURVE",
"274 311 CURVE SMOOTH",
"279.333 313 OFFCURVE",
"286.333 318.667 OFFCURVE",
"295 328 CURVE SMOOTH",
"303.667 337.333 OFFCURVE",
"308 344 OFFCURVE",
"308 348 CURVE SMOOTH",
"308 350.667 OFFCURVE",
"306 352 OFFCURVE",
"302 352 CURVE SMOOTH",
"286.667 352 OFFCURVE",
"267.333 342.333 OFFCURVE",
"244 323 CURVE SMOOTH",
"243.333 322.333 OFFCURVE",
"243 321.333 OFFCURVE",
"243 320 CURVE SMOOTH",
"243 316 OFFCURVE",
"257 310 OFFCURVE",
"268 310 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 950 35 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 21 118 21 134 21 150 21 166 21 182 21 198 21 214 21 230 21 246 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 21 22 21 38 21 54 21 70 21 86 21 102 21 118 21 134 21 150 21 166 21 182 21 198 21 214 21 230 21 246 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 21 22 21 38 21 54 21 70 21 86 21 102 21 118 21 134 21 150 21 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 21 181 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01254 947 65 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 45 119 45 135 45 151 45 167 45 183 45 199 45 215 45 231 45 247 45 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 45 23 45 39 45 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 45 70 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01213 4 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01240 4 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 293;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"93.667 -210 OFFCURVE",
"98 -209 OFFCURVE",
"98 -207 CURVE SMOOTH",
"98 -206.333 OFFCURVE",
"95.5 -204.5 OFFCURVE",
"90.5 -201.5 CURVE SMOOTH",
"85.5 -198.5 OFFCURVE",
"81.333 -195.667 OFFCURVE",
"78 -193 CURVE SMOOTH",
"62.667 -177.667 OFFCURVE",
"55 -147 OFFCURVE",
"55 -101 CURVE SMOOTH",
"55 -74.333 OFFCURVE",
"58.333 -36.333 OFFCURVE",
"65 17 CURVE SMOOTH",
"76.333 99.667 OFFCURVE",
"91.333 164.333 OFFCURVE",
"110 211 CURVE",
"134.667 211 OFFCURVE",
"163 215 OFFCURVE",
"195 223 CURVE SMOOTH",
"207 225.667 OFFCURVE",
"213 228.333 OFFCURVE",
"213 231 CURVE SMOOTH",
"213 233 OFFCURVE",
"210.333 234 OFFCURVE",
"205 234 CURVE SMOOTH",
"117 234 LINE",
"133 280.667 OFFCURVE",
"156.333 331.333 OFFCURVE",
"187 382 CURVE SMOOTH",
"228.333 452 OFFCURVE",
"264 487.333 OFFCURVE",
"294 488 CURVE SMOOTH",
"320 489 LINE",
"323 492 OFFCURVE",
"324 494 OFFCURVE",
"324 496 CURVE SMOOTH",
"324 501 OFFCURVE",
"319 505 OFFCURVE",
"308 508 CURVE SMOOTH",
"300.667 510 OFFCURVE",
"293.333 511 OFFCURVE",
"286 511 CURVE SMOOTH",
"242.667 511 OFFCURVE",
"200 473.333 OFFCURVE",
"158 398 CURVE SMOOTH",
"140 366 OFFCURVE",
"116 311 OFFCURVE",
"86 233 CURVE",
"79.025 233 OFFCURVE",
"59.594 229 OFFCURVE",
"49 229 CURVE SMOOTH",
"45.667 229 OFFCURVE",
"44 227.333 OFFCURVE",
"44 224 CURVE SMOOTH",
"44 216 OFFCURVE",
"54 206 OFFCURVE",
"71 206 CURVE SMOOTH",
"74 206 OFFCURVE",
"77 206 OFFCURVE",
"80 207 CURVE",
"66.667 168.333 OFFCURVE",
"54 121 OFFCURVE",
"42 61 CURVE SMOOTH",
"26 -13 OFFCURVE",
"18 -72.667 OFFCURVE",
"18 -118 CURVE SMOOTH",
"18 -132.5 LINE SMOOTH",
"18 -136.833 OFFCURVE",
"18.333 -141.333 OFFCURVE",
"19 -146 CURVE SMOOTH",
"21 -165.333 OFFCURVE",
"29.667 -181.667 OFFCURVE",
"45 -195 CURVE SMOOTH",
"57.667 -205 OFFCURVE",
"71 -210 OFFCURVE",
"85 -210 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"271.333 -5 OFFCURVE",
"294.333 2.667 OFFCURVE",
"323 18 CURVE SMOOTH",
"347.667 31.333 OFFCURVE",
"366 45 OFFCURVE",
"378 59 CURVE SMOOTH",
"382 63.667 OFFCURVE",
"384 69.667 OFFCURVE",
"384 77 CURVE SMOOTH",
"384 79.667 OFFCURVE",
"383.333 81 OFFCURVE",
"382 81 CURVE SMOOTH",
"379.333 81 OFFCURVE",
"375.667 78 OFFCURVE",
"371 72 CURVE SMOOTH",
"359 56.667 OFFCURVE",
"342.333 43 OFFCURVE",
"321 31 CURVE SMOOTH",
"299.667 19 OFFCURVE",
"281.333 13 OFFCURVE",
"266 13 CURVE SMOOTH",
"246 13 OFFCURVE",
"236 27.667 OFFCURVE",
"236 57 CURVE SMOOTH",
"236 87.667 OFFCURVE",
"243.667 129 OFFCURVE",
"259 181 CURVE",
"319 241 OFFCURVE",
"360.333 285.667 OFFCURVE",
"387 319 CURVE SMOOTH",
"434 381 OFFCURVE",
"458 437 OFFCURVE",
"458 487 CURVE SMOOTH",
"458 510 OFFCURVE",
"447 521 OFFCURVE",
"425 521 CURVE SMOOTH",
"409 521 OFFCURVE",
"393.667 515 OFFCURVE",
"379 503 CURVE SMOOTH",
"313 447.667 OFFCURVE",
"260.333 337 OFFCURVE",
"221 171 CURVE",
"209 157.667 OFFCURVE",
"203 148.333 OFFCURVE",
"203 143 CURVE SMOOTH",
"203 140 OFFCURVE",
"205 138 OFFCURVE",
"210 138 CURVE SMOOTH",
"211 138 OFFCURVE",
"212 138 OFFCURVE",
"213 138 CURVE",
"207 108.667 OFFCURVE",
"204 84.333 OFFCURVE",
"204 65 CURVE SMOOTH",
"204 18.333 OFFCURVE",
"220.667 -5 OFFCURVE",
"254 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"272.667 243 OFFCURVE",
"291.333 291.333 OFFCURVE",
"318 350 CURVE SMOOTH",
"347.333 414 OFFCURVE",
"371.333 455.333 OFFCURVE",
"390 478 CURVE SMOOTH",
"404.667 496.667 OFFCURVE",
"417.667 506 OFFCURVE",
"429 506 CURVE SMOOTH",
"438 506 OFFCURVE",
"443 498 OFFCURVE",
"443 482 CURVE SMOOTH",
"443 481 OFFCURVE",
"443 480 OFFCURVE",
"443 479 CURVE SMOOTH",
"441.667 443.667 OFFCURVE",
"417.667 393.667 OFFCURVE",
"371 329 CURVE SMOOTH",
"334.333 278.333 OFFCURVE",
"298 236.333 OFFCURVE",
"262 203 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012106 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 80 186 80 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 80 121 80 137 80 153 80 169 80 185 80 201 80 217 80 233 80 249 80 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 80 25 80 41 80 57 80 73 80 89 80 105 80 121 80 137 80 153 80 169 80 185 80 201 80 217 80 233 80 249 80 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 80 25 80 41 80 57 80 73 80 89 80 105 80 121 80 137 80 153 80 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01262 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 32 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01218 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 18 181 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01237 32 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01282 80 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01290 949 1 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0127 78 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01237 78 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01272 78 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01282 78 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012102 78 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 332;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = summation;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"371 0 LINE",
"345 31 LINE",
"78 25 LINE",
"281 226 LINE",
"131 411 LINE",
"353 402 LINE",
"371 433 LINE",
"53 433 LINE",
"232 214 LINE",
"21 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0125 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0123 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 400;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = product;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"296.667 -23 OFFCURVE",
"305 -21.333 OFFCURVE",
"315 -18 CURVE SMOOTH",
"329.667 -14 OFFCURVE",
"351.333 5.667 OFFCURVE",
"380 41 CURVE SMOOTH",
"406.667 77.667 OFFCURVE",
"420 103 OFFCURVE",
"420 117 CURVE SMOOTH",
"420 117.667 OFFCURVE",
"419 118.667 OFFCURVE",
"417 120 CURVE",
"414.333 120 OFFCURVE",
"411.333 116.333 OFFCURVE",
"408 109 CURVE SMOOTH",
"380 57.667 OFFCURVE",
"358.333 26.333 OFFCURVE",
"343 15 CURVE SMOOTH",
"325 1 OFFCURVE",
"310 -6 OFFCURVE",
"298 -6 CURVE SMOOTH",
"279.333 -6 OFFCURVE",
"270 13 OFFCURVE",
"270 51 CURVE SMOOTH",
"270 81.667 OFFCURVE",
"274.333 116 OFFCURVE",
"285 156 CURVE SMOOTH",
"329 356 LINE",
"373 353.333 OFFCURVE",
"410 366 OFFCURVE",
"440 394 CURVE SMOOTH",
"448 400.667 OFFCURVE",
"452 407.667 OFFCURVE",
"452 415 CURVE SMOOTH",
"452 419 OFFCURVE",
"450.333 421 OFFCURVE",
"447 421 CURVE",
"413 397.667 OFFCURVE",
"384.667 386 OFFCURVE",
"362 386 CURVE SMOOTH",
"340 386 OFFCURVE",
"307.333 392.667 OFFCURVE",
"264 406 CURVE SMOOTH",
"222 420 OFFCURVE",
"189.667 427 OFFCURVE",
"167 427 CURVE SMOOTH",
"124.333 427 OFFCURVE",
"82.667 407.667 OFFCURVE",
"42 369 CURVE SMOOTH",
"35.333 362.333 OFFCURVE",
"32 355.333 OFFCURVE",
"32 348 CURVE SMOOTH",
"32 345.333 OFFCURVE",
"33.667 344 OFFCURVE",
"37 344 CURVE SMOOTH",
"38.333 344 OFFCURVE",
"40.667 345 OFFCURVE",
"44 347 CURVE",
"75.333 374.333 OFFCURVE",
"112.333 388 OFFCURVE",
"155 388 CURVE SMOOTH",
"158 388 LINE",
"158 307.564 OFFCURVE",
"137.408 132.338 OFFCURVE",
"126 81 CURVE",
"115 49 LINE SMOOTH",
"108.333 31.667 OFFCURVE",
"105 20.333 OFFCURVE",
"105 15 CURVE SMOOTH",
"105 12.333 OFFCURVE",
"108 11 OFFCURVE",
"114 11 CURVE SMOOTH",
"117.333 11 OFFCURVE",
"120 12.333 OFFCURVE",
"122 15 CURVE",
"160.157 88.378 OFFCURVE",
"191.479 279.121 OFFCURVE",
"194 385 CURVE",
"215.333 379.667 OFFCURVE",
"233.833 375.333 OFFCURVE",
"249.5 372 CURVE SMOOTH",
"265.167 368.667 OFFCURVE",
"278.333 365.333 OFFCURVE",
"289 362 CURVE",
"267.93 301.423 OFFCURVE",
"241 126.441 OFFCURVE",
"241 48 CURVE SMOOTH",
"241 0.667 OFFCURVE",
"257.333 -23 OFFCURVE",
"290 -23 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 951 30 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012170 30 186 30 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01214 948 28 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01266 949 55 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 495;
}
);
note = product;
unicode = 220F;
},
{
glyphname = integral;
lastChange = "2021-05-11 10:01:37 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"91.333 -125 OFFCURVE",
"111.333 -92.333 OFFCURVE",
"130 -27 CURVE SMOOTH",
"227 327 LINE SMOOTH",
"243 384.333 OFFCURVE",
"261.667 404 OFFCURVE",
"295 404 CURVE SMOOTH",
"309 404 OFFCURVE",
"323 400.667 OFFCURVE",
"337 394 CURVE",
"337 418 LINE",
"319 425.333 OFFCURVE",
"301 429 OFFCURVE",
"283 429 CURVE SMOOTH",
"230.333 429 OFFCURVE",
"195.667 393.667 OFFCURVE",
"179 323 CURVE SMOOTH",
"96 -26 LINE SMOOTH",
"82.667 -79.333 OFFCURVE",
"62 -106 OFFCURVE",
"34 -106 CURVE SMOOTH",
"20.667 -106 OFFCURVE",
"7 -102.667 OFFCURVE",
"-7 -96 CURVE",
"-21 -114 LINE",
"-1 -121.333 OFFCURVE",
"17.333 -125 OFFCURVE",
"34 -125 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01219 947 2 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 356;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = oslash;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"13.667 -94 OFFCURVE",
"15.333 -92.667 OFFCURVE",
"18 -90 CURVE SMOOTH",
"32.667 -74 OFFCURVE",
"50.667 -48.667 OFFCURVE",
"72 -10 CURVE",
"77.333 -11.333 OFFCURVE",
"81.667 -12 OFFCURVE",
"85 -12 CURVE SMOOTH",
"115 -12 OFFCURVE",
"142.333 10.333 OFFCURVE",
"167 55 CURVE SMOOTH",
"194.333 102.333 OFFCURVE",
"206.333 138.667 OFFCURVE",
"203 164 CURVE",
"209 161 OFFCURVE",
"217 160 OFFCURVE",
"228 160 CURVE SMOOTH",
"232 160 OFFCURVE",
"236 160 OFFCURVE",
"240 160 CURVE SMOOTH",
"257.333 161.333 OFFCURVE",
"271.667 164.333 OFFCURVE",
"285 171 CURVE SMOOTH",
"291 174.333 OFFCURVE",
"294.333 177.333 OFFCURVE",
"295 180 CURVE SMOOTH",
"296.333 183.333 OFFCURVE",
"295.667 185 OFFCURVE",
"293 185 CURVE SMOOTH",
"287.667 185 OFFCURVE",
"279.667 184.333 OFFCURVE",
"269 183 CURVE SMOOTH",
"258.333 181.667 OFFCURVE",
"250.333 181 OFFCURVE",
"245 181 CURVE SMOOTH",
"228.333 181 OFFCURVE",
"215.667 186.333 OFFCURVE",
"207 197 CURVE",
"206.333 207 OFFCURVE",
"202 216.333 OFFCURVE",
"194 225 CURVE",
"196 228 LINE SMOOTH",
"228.667 284 OFFCURVE",
"251.667 312 OFFCURVE",
"265 312 CURVE SMOOTH",
"267 312 OFFCURVE",
"269.5 310.833 OFFCURVE",
"272.5 308.5 CURVE SMOOTH",
"275.5 306.167 OFFCURVE",
"277.667 305 OFFCURVE",
"279 305 CURVE SMOOTH",
"280.333 305 OFFCURVE",
"281 306.333 OFFCURVE",
"281 309 CURVE SMOOTH",
"281 313.667 OFFCURVE",
"279.667 317.333 OFFCURVE",
"277 320 CURVE SMOOTH",
"271.667 324.667 OFFCURVE",
"265.333 327 OFFCURVE",
"258 327 CURVE SMOOTH",
"248 327 OFFCURVE",
"237.167 320 OFFCURVE",
"225.5 306 CURVE SMOOTH",
"213.833 292 OFFCURVE",
"199.333 269.333 OFFCURVE",
"182 238 CURVE",
"170 248 OFFCURVE",
"158 253 OFFCURVE",
"146 253 CURVE SMOOTH",
"138.667 253 OFFCURVE",
"133 250.667 OFFCURVE",
"129 246 CURVE",
"93 242.667 OFFCURVE",
"62.667 203.667 OFFCURVE",
"38 129 CURVE SMOOTH",
"31.333 109 OFFCURVE",
"28 89.333 OFFCURVE",
"28 70 CURVE SMOOTH",
"28 35.333 OFFCURVE",
"40.333 9.333 OFFCURVE",
"59 -4 CURVE",
"44.333 -32 OFFCURVE",
"30.333 -59 OFFCURVE",
"13 -83 CURVE SMOOTH",
"11 -85 OFFCURVE",
"10 -87.667 OFFCURVE",
"10 -91 CURVE SMOOTH",
"10 -93 OFFCURVE",
"11 -94 OFFCURVE",
"13 -94 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"87 8 OFFCURVE",
"84 8.333 OFFCURVE",
"82 9 CURVE",
"90.667 24.333 OFFCURVE",
"98.667 39.667 OFFCURVE",
"106 55 CURVE SMOOTH",
"166 174 LINE",
"170 172 OFFCURVE",
"175.667 170.333 OFFCURVE",
"183 169 CURVE",
"184.333 159.667 OFFCURVE",
"181.667 142.667 OFFCURVE",
"175 120 CURVE SMOOTH",
"168.333 93.333 OFFCURVE",
"157.667 72.333 OFFCURVE",
"147 55 CURVE SMOOTH",
"127 23.667 OFFCURVE",
"108.333 8 OFFCURVE",
"91 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"67 26.667 OFFCURVE",
"65 37 OFFCURVE",
"65 51 CURVE SMOOTH",
"65 74.333 OFFCURVE",
"72.667 105 OFFCURVE",
"88 143 CURVE SMOOTH",
"104.667 183.667 OFFCURVE",
"122 206.667 OFFCURVE",
"140 212 CURVE",
"142 199.333 OFFCURVE",
"146.333 189.667 OFFCURVE",
"153 183 CURVE",
"144.333 166.333 OFFCURVE",
"135.5 148.5 OFFCURVE",
"126.5 129.5 CURVE SMOOTH",
"96 67 LINE",
"71 20 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01264 950 47 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 64 22 64 38 64 54 64 70 64 86 64 102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 64 22 64 38 64 54 64 70 64 86 64 102 64 118 64 134 64 150 64 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 64 181 64 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01226 37 58 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01241 37 58 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01266 37 58 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 235;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = radical;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"210.562 31.82 OFFCURVE",
"248.193 95.214 OFFCURVE",
"281.5 152 CURVE SMOOTH",
"348 264.5 LINE SMOOTH",
"386.354 328.957 OFFCURVE",
"447.171 430.456 OFFCURVE",
"478.5 484 CURVE SMOOTH",
"521 556 LINE",
"518.333 558.667 OFFCURVE",
"512 561 OFFCURVE",
"508 561 CURVE SMOOTH",
"505.333 561 OFFCURVE",
"503.333 559.667 OFFCURVE",
"502 557 CURVE SMOOTH",
"458 494.333 OFFCURVE",
"400.5 406.5 OFFCURVE",
"346.5 320.5 CURVE SMOOTH",
"292.5 234.5 OFFCURVE",
"242 151 OFFCURVE",
"210 95 CURVE",
"196.765 114.852 OFFCURVE",
"175.863 234.964 OFFCURVE",
"160 254 CURVE",
"158 253 LINE",
"158 249.784 OFFCURVE",
"59 158.965 OFFCURVE",
"59 153 CURVE",
"58 150 OFFCURVE",
"62 145 OFFCURVE",
"64 145 CURVE SMOOTH",
"65 145 OFFCURVE",
"66 146 OFFCURVE",
"66 146 CURVE",
"78 154 OFFCURVE",
"91.333 165.333 OFFCURVE",
"106 180 CURVE SMOOTH",
"120.667 194.667 OFFCURVE",
"134.333 206.667 OFFCURVE",
"147 216 CURVE",
"148 218 LINE",
"199 12 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0125 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 527;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = florin;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-98.691 -370 OFFCURVE",
"-28.696 -216.241 OFFCURVE",
"19 -97 CURVE SMOOTH",
"45.533 -33.321 OFFCURVE",
"118.842 149.526 OFFCURVE",
"146 231 CURVE",
"164.667 238.333 OFFCURVE",
"214.667 243 OFFCURVE",
"296 245 CURVE",
"303 249 LINE",
"304.333 249 OFFCURVE",
"305 250 OFFCURVE",
"305 252 CURVE",
"306.333 256 OFFCURVE",
"304.667 259.167 OFFCURVE",
"300 261.5 CURVE SMOOTH",
"295.333 263.833 OFFCURVE",
"286.667 265.667 OFFCURVE",
"274 267 CURVE SMOOTH",
"266 268 OFFCURVE",
"254 269 OFFCURVE",
"240 269 CURVE SMOOTH",
"232 269 OFFCURVE",
"224 268 OFFCURVE",
"216 268 CURVE SMOOTH",
"201.333 266.667 OFFCURVE",
"184 267.667 OFFCURVE",
"164 269 CURVE",
"201.346 366.673 OFFCURVE",
"285.143 532.525 OFFCURVE",
"380 612 CURVE SMOOTH",
"400.667 628.667 OFFCURVE",
"420.333 637 OFFCURVE",
"439 637 CURVE SMOOTH",
"472 637 OFFCURVE",
"488 613 OFFCURVE",
"488 566 CURVE SMOOTH",
"488 560 OFFCURVE",
"488 554 OFFCURVE",
"487 547 CURVE SMOOTH",
"485 523 OFFCURVE",
"487 511 OFFCURVE",
"493 511 CURVE SMOOTH",
"501 511 OFFCURVE",
"509.333 521.333 OFFCURVE",
"512 536 CURVE",
"517.333 546.667 OFFCURVE",
"518.667 557 OFFCURVE",
"520 565 CURVE SMOOTH",
"522.667 591.667 OFFCURVE",
"515.667 613.333 OFFCURVE",
"497 632 CURVE",
"477 648 OFFCURVE",
"454.333 656 OFFCURVE",
"429 656 CURVE SMOOTH",
"383.667 656 OFFCURVE",
"336.667 641.667 OFFCURVE",
"294 591 CURVE",
"218 487 OFFCURVE",
"170.333 379.333 OFFCURVE",
"121 266 CURVE",
"89 260 OFFCURVE",
"64 254 OFFCURVE",
"46 248 CURVE SMOOTH",
"28 242 OFFCURVE",
"18.667 236 OFFCURVE",
"18 230 CURVE SMOOTH",
"17.333 226.667 OFFCURVE",
"21.333 224.333 OFFCURVE",
"30 223 CURVE SMOOTH",
"42 220.333 OFFCURVE",
"66.333 224 OFFCURVE",
"101 228 CURVE",
"93.341 207.576 OFFCURVE",
"75.217 154.346 OFFCURVE",
"60 112.5 CURVE SMOOTH",
"41.333 61.167 OFFCURVE",
"18.333 3 OFFCURVE",
"-7 -49 CURVE SMOOTH",
"-68.333 -174.333 OFFCURVE",
"-125.333 -266 OFFCURVE",
"-164 -302 CURVE SMOOTH",
"-194.667 -331.333 OFFCURVE",
"-225 -348 OFFCURVE",
"-249 -348 CURVE SMOOTH",
"-270.333 -348 OFFCURVE",
"-284.333 -328.333 OFFCURVE",
"-291 -299 CURVE",
"-293 -265 LINE SMOOTH",
"-293 -244.333 OFFCURVE",
"-295.667 -234 OFFCURVE",
"-301 -234 CURVE SMOOTH",
"-313 -234 OFFCURVE",
"-320.667 -249.667 OFFCURVE",
"-324 -281 CURVE SMOOTH",
"-326 -307.667 OFFCURVE",
"-319 -329 OFFCURVE",
"-303 -345 CURVE SMOOTH",
"-287 -363.667 OFFCURVE",
"-266.667 -370 OFFCURVE",
"-240 -370 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01254 947 41 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 947 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 245;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = Adieresis;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 545, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Aring;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 552, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Ccedilla;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 58, -97}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 553;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Eacute;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 354, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ntilde;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 433, 270}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 686;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = Odieresis;
lastChange = "2021-05-11 11:11:42 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 293, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Udieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 398, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = aacute;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 113, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = agrave;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 60, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = acircumflex;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 15, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = adieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 67, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = atilde;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 60, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = aring;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 74, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = ccedilla;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -118, -13}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 199;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = eacute;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 68, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = egrave;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 15, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = ecircumflex;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -30, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 22, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = iacute;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -3, -51}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 136;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = igrave;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -56, -51}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 136;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = icircumflex;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -101, -51}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 136;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -49, -51}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 136;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = oacute;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 60, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = ntilde;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 3, -36}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 253;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = ograve;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 7, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ocircumflex;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -38, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = odieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 14, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = otilde;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 7, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = uacute;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 108, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ugrave;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 55, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = ucircumflex;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 10, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 62, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = Agrave;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 538, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Atilde;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 538, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = Otilde;
lastChange = "2021-05-11 11:11:56 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 286, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = OE;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"618.333 -170 OFFCURVE",
"649.333 -155.667 OFFCURVE",
"674 -127 CURVE SMOOTH",
"702 -96.333 OFFCURVE",
"716 -55.667 OFFCURVE",
"716 -5 CURVE SMOOTH",
"716 -1.667 OFFCURVE",
"716 1.333 OFFCURVE",
"716 4 CURVE SMOOTH",
"715 13 LINE",
"739.667 27.667 OFFCURVE",
"761.667 44.667 OFFCURVE",
"781 64 CURVE SMOOTH",
"804.333 88.667 OFFCURVE",
"816 112 OFFCURVE",
"816 134 CURVE SMOOTH",
"816 165.333 OFFCURVE",
"797 181 OFFCURVE",
"759 181 CURVE SMOOTH",
"725.667 181 OFFCURVE",
"687.667 167 OFFCURVE",
"645 139 CURVE",
"603.667 178.333 OFFCURVE",
"559.667 198.667 OFFCURVE",
"513 200 CURVE SMOOTH",
"510.333 200 OFFCURVE",
"509 198.667 OFFCURVE",
"509 196 CURVE SMOOTH",
"509 193.333 OFFCURVE",
"510.333 192 OFFCURVE",
"513 192 CURVE SMOOTH",
"557 190.667 OFFCURVE",
"598 171 OFFCURVE",
"636 133 CURVE",
"605.333 111.667 OFFCURVE",
"572.667 81.667 OFFCURVE",
"538 43 CURVE SMOOTH",
"537.333 42.333 OFFCURVE",
"536.333 39.667 OFFCURVE",
"535 35 CURVE SMOOTH",
"533.667 31 OFFCURVE",
"533.667 29 OFFCURVE",
"535 29 CURVE SMOOTH",
"535.667 29 OFFCURVE",
"537.667 30.667 OFFCURVE",
"541 34 CURVE SMOOTH",
"571.667 70 OFFCURVE",
"606.667 99.667 OFFCURVE",
"646 123 CURVE",
"674 91 OFFCURVE",
"691.333 58.333 OFFCURVE",
"698 25 CURVE",
"648.667 -5 OFFCURVE",
"598.333 -20 OFFCURVE",
"547 -20 CURVE SMOOTH",
"496.333 -20 OFFCURVE",
"455.667 -5.667 OFFCURVE",
"425 23 CURVE",
"422.333 41.667 OFFCURVE",
"421 62.333 OFFCURVE",
"421 85 CURVE SMOOTH",
"421 149 OFFCURVE",
"437 213.667 OFFCURVE",
"469 279 CURVE",
"555.667 289 OFFCURVE",
"643 294 OFFCURVE",
"731 294 CURVE SMOOTH",
"742.333 294 OFFCURVE",
"748 296.333 OFFCURVE",
"748 301 CURVE SMOOTH",
"748 305 OFFCURVE",
"744.333 307 OFFCURVE",
"737 307 CURVE SMOOTH",
"561.5 306.5 LINE SMOOTH",
"519.167 306.167 OFFCURVE",
"493 305.667 OFFCURVE",
"483 305 CURVE",
"535.667 396.333 OFFCURVE",
"607.667 454.667 OFFCURVE",
"699 480 CURVE SMOOTH",
"701.667 480.667 OFFCURVE",
"702.333 482.333 OFFCURVE",
"701 485 CURVE SMOOTH",
"700.333 487.667 OFFCURVE",
"698.667 488.667 OFFCURVE",
"696 488 CURVE SMOOTH",
"593.333 459.333 OFFCURVE",
"515.333 398 OFFCURVE",
"462 304 CURVE",
"418 300 LINE",
"454 363.333 OFFCURVE",
"497.333 413.333 OFFCURVE",
"548 450 CURVE SMOOTH",
"605.333 491.333 OFFCURVE",
"667.333 512 OFFCURVE",
"734 512 CURVE SMOOTH",
"776.667 512 OFFCURVE",
"805 504.333 OFFCURVE",
"819 489 CURVE",
"791 461 OFFCURVE",
"779 436 OFFCURVE",
"779 414 CURVE SMOOTH",
"779 399 OFFCURVE",
"786 392 OFFCURVE",
"801 392 CURVE SMOOTH",
"825 392 OFFCURVE",
"841.667 404 OFFCURVE",
"851 428 CURVE SMOOTH",
"853.667 434 OFFCURVE",
"855 441.667 OFFCURVE",
"855 451 CURVE SMOOTH",
"855 468.333 OFFCURVE",
"849.667 483.667 OFFCURVE",
"839 497 CURVE",
"853 515 OFFCURVE",
"868 530.333 OFFCURVE",
"884 543 CURVE SMOOTH",
"886 545 OFFCURVE",
"887 547 OFFCURVE",
"887 549 CURVE SMOOTH",
"887 551 OFFCURVE",
"885 553 OFFCURVE",
"881 553 CURVE SMOOTH",
"878 553 OFFCURVE",
"876 552 OFFCURVE",
"874 550 CURVE SMOOTH",
"862.667 541.333 OFFCURVE",
"848.333 526.333 OFFCURVE",
"831 505 CURVE",
"809.667 525 OFFCURVE",
"775.667 535 OFFCURVE",
"729 535 CURVE SMOOTH",
"672.333 535 OFFCURVE",
"616.667 520.333 OFFCURVE",
"562 491 CURVE",
"530.568 511.206 OFFCURVE",
"468.714 530.821 OFFCURVE",
"448 536 CURVE",
"396 598 OFFCURVE",
"341.333 629 OFFCURVE",
"284 629 CURVE SMOOTH",
"263.333 629 OFFCURVE",
"244 624.333 OFFCURVE",
"226 615 CURVE SMOOTH",
"169.333 587.667 OFFCURVE",
"142.667 537 OFFCURVE",
"146 463 CURVE",
"84 413.667 OFFCURVE",
"53 358.667 OFFCURVE",
"53 298 CURVE SMOOTH",
"53 262.667 OFFCURVE",
"57 228 OFFCURVE",
"65 194 CURVE",
"58.333 170 OFFCURVE",
"55 147 OFFCURVE",
"55 125 CURVE SMOOTH",
"55 25 OFFCURVE",
"111.333 -25.667 OFFCURVE",
"224 -27 CURVE SMOOTH",
"260.844 -27 OFFCURVE",
"339.198 -17.401 OFFCURVE",
"380 9 CURVE",
"392 -1 OFFCURVE",
"405 -9.667 OFFCURVE",
"419 -17 CURVE",
"432.333 -66.333 OFFCURVE",
"454.667 -104.667 OFFCURVE",
"486 -132 CURVE SMOOTH",
"515.333 -157.333 OFFCURVE",
"547 -170 OFFCURVE",
"581 -170 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 11 OFFCURVE",
"76 72 OFFCURVE",
"76 136 CURVE SMOOTH",
"76 141 OFFCURVE",
"76 146 OFFCURVE",
"77 151 CURVE",
"97 95.667 OFFCURVE",
"126.667 50 OFFCURVE",
"166 14 CURVE"
);
},
{
closed = 1;
nodes = (
"81.333 290.333 OFFCURVE",
"89 328 OFFCURVE",
"105 362 CURVE SMOOTH",
"117 386.667 OFFCURVE",
"132.333 409.333 OFFCURVE",
"151 430 CURVE",
"155 408.667 OFFCURVE",
"160 390.667 OFFCURVE",
"168 376 CURVE",
"128 336 OFFCURVE",
"100.667 293 OFFCURVE",
"82 249 CURVE"
);
},
{
closed = 1;
nodes = (
"547.333 -160 OFFCURVE",
"519.667 -149 OFFCURVE",
"495 -127 CURVE SMOOTH",
"467.667 -101.667 OFFCURVE",
"447.667 -67.333 OFFCURVE",
"435 -24 CURVE",
"463 -35.333 OFFCURVE",
"493.333 -41 OFFCURVE",
"526 -41 CURVE SMOOTH",
"586.667 -41 OFFCURVE",
"644.667 -25.667 OFFCURVE",
"700 5 CURVE",
"700.667 3 OFFCURVE",
"701 -0.333 OFFCURVE",
"701 -5 CURVE SMOOTH",
"701 -96.104 OFFCURVE",
"650.025 -160 OFFCURVE",
"578 -160 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"384.667 71.667 OFFCURVE",
"373 108.333 OFFCURVE",
"373 151 CURVE SMOOTH",
"373 187 OFFCURVE",
"381.667 224 OFFCURVE",
"399 262 CURVE SMOOTH",
"402 269 LINE",
"409.333 270.333 OFFCURVE",
"416.833 271.5 OFFCURVE",
"424.5 272.5 CURVE SMOOTH",
"448 276 LINE",
"420 216 OFFCURVE",
"406 153.667 OFFCURVE",
"406 89 CURVE SMOOTH",
"406 71.667 OFFCURVE",
"406.667 55.667 OFFCURVE",
"408 41 CURVE"
);
},
{
closed = 1;
nodes = (
"212 8.667 OFFCURVE",
"199.667 9.667 OFFCURVE",
"189 11 CURVE",
"135.667 56.333 OFFCURVE",
"102 119 OFFCURVE",
"88 199 CURVE",
"105.333 253.667 OFFCURVE",
"136.667 305.667 OFFCURVE",
"182 355 CURVE",
"216.667 310.333 OFFCURVE",
"258.333 288 OFFCURVE",
"307 288 CURVE SMOOTH",
"347.667 288 OFFCURVE",
"377.333 310 OFFCURVE",
"396 354 CURVE SMOOTH",
"397 357 OFFCURVE",
"395 360 OFFCURVE",
"390 360 CURVE SMOOTH",
"388 360 OFFCURVE",
"387 359 OFFCURVE",
"387 357 CURVE SMOOTH",
"371 316.333 OFFCURVE",
"344 296 OFFCURVE",
"306 296 CURVE SMOOTH",
"260 296 OFFCURVE",
"221.333 318.333 OFFCURVE",
"190 363 CURVE",
"254.667 430.333 OFFCURVE",
"315.667 464 OFFCURVE",
"373 464 CURVE SMOOTH",
"382.333 464 OFFCURVE",
"387 466.333 OFFCURVE",
"387 471 CURVE SMOOTH",
"387 475.667 OFFCURVE",
"382.667 478 OFFCURVE",
"374 478 CURVE SMOOTH",
"307.333 478 OFFCURVE",
"242 447 OFFCURVE",
"178 385 CURVE",
"170 401 OFFCURVE",
"164 419 OFFCURVE",
"160 439 CURVE",
"220 498.333 OFFCURVE",
"297.667 528 OFFCURVE",
"393 528 CURVE SMOOTH",
"409.667 528 OFFCURVE",
"424.333 526.667 OFFCURVE",
"437 524 CURVE",
"467.566 510.9 OFFCURVE",
"511.384 502.616 OFFCURVE",
"538 476 CURVE",
"531.333 472 OFFCURVE",
"523.667 467.333 OFFCURVE",
"517 462 CURVE SMOOTH",
"450.333 415.333 OFFCURVE",
"400.667 358.333 OFFCURVE",
"368 291 CURVE",
"348 287 LINE SMOOTH",
"334.667 283 OFFCURVE",
"328 274 OFFCURVE",
"328 260 CURVE SMOOTH",
"328 256 OFFCURVE",
"330 254 OFFCURVE",
"333 254 CURVE SMOOTH",
"334 254 OFFCURVE",
"334 254 OFFCURVE",
"335 254 CURVE",
"341.667 256.667 OFFCURVE",
"346.333 257.667 OFFCURVE",
"353 259 CURVE",
"336.333 219 OFFCURVE",
"328 179.667 OFFCURVE",
"328 141 CURVE SMOOTH",
"328 98.333 OFFCURVE",
"337.333 63.333 OFFCURVE",
"356 36 CURVE",
"321.333 17.333 OFFCURVE",
"265.333 12.667 OFFCURVE",
"224 10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"702.333 66.333 OFFCURVE",
"684 98 OFFCURVE",
"656 128 CURVE",
"698.667 152 OFFCURVE",
"738.333 169 OFFCURVE",
"765 169 CURVE SMOOTH",
"786.333 169 OFFCURVE",
"797 160.667 OFFCURVE",
"797 144 CURVE SMOOTH",
"797 131.333 OFFCURVE",
"791.667 117.667 OFFCURVE",
"781 103 CURVE SMOOTH",
"763 77 OFFCURVE",
"739.667 53.667 OFFCURVE",
"711 33 CURVE"
);
},
{
closed = 1;
nodes = (
"156 537 OFFCURVE",
"180.333 582.333 OFFCURVE",
"231 607 CURVE SMOOTH",
"245.667 615 OFFCURVE",
"261 618 OFFCURVE",
"277 618 CURVE SMOOTH",
"325 618 OFFCURVE",
"373.667 592 OFFCURVE",
"423 540 CURVE",
"412.333 541.333 OFFCURVE",
"403.667 542 OFFCURVE",
"393 542 CURVE SMOOTH",
"303 542 OFFCURVE",
"224.667 518.333 OFFCURVE",
"158 471 CURVE"
);
},
{
closed = 1;
nodes = (
"801 402 OFFCURVE",
"799 405 OFFCURVE",
"799 412 CURVE SMOOTH",
"799 413 OFFCURVE",
"799 414 OFFCURVE",
"799 415 CURVE SMOOTH",
"801 432.333 OFFCURVE",
"810 453.667 OFFCURVE",
"826 479 CURVE",
"832 468 OFFCURVE",
"835 458 OFFCURVE",
"835 447 CURVE SMOOTH",
"835 437 OFFCURVE",
"832 428 OFFCURVE",
"828 418 CURVE SMOOTH",
"823.333 407.333 OFFCURVE",
"816 402 OFFCURVE",
"806 402 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012229 950 127 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01284 952 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01264 127 84 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012134 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012169 127 84 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012195 84 87 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012218 127 84 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 229 118 229 134 229 150 229 166 229 182 229 198 229 214 229 230 229 246 229 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 229 22 229 38 229 54 229 70 229 86 229 102 229 118 229 134 229 150 229 166 229 182 229 198 229 214 229 230 229 246 229 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 229 22 229 38 229 54 229 70 229 86 229 102 229 118 229 134 229 150 229 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 229 181 229 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01289 4 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01227 149 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012204 949 60 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012109 193 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01276 215 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012155 171 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012149 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01246 149 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012204 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012204 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012159 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01271 204 159 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012171 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012241 949 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012171 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012137 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012137 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012153 171 155 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012169 171 155 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012180 4 89 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012191 193 109 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012204 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012195 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012195 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012202 204 159 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012209 193 109 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012218 193 109 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012223 215 76 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012234 204 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012238 215 76 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012243 193 109 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012250 204 159 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 901;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = oe;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"115 -12 OFFCURVE",
"142.333 10.333 OFFCURVE",
"167 55 CURVE",
"167 56 LINE SMOOTH",
"172.333 5.333 OFFCURVE",
"199.667 -12 OFFCURVE",
"237 -12 CURVE SMOOTH",
"263.667 -12 OFFCURVE",
"293.667 -2.333 OFFCURVE",
"327 17 CURVE SMOOTH",
"357 34.333 OFFCURVE",
"379 52 OFFCURVE",
"393 70 CURVE SMOOTH",
"397 74 OFFCURVE",
"399 78 OFFCURVE",
"399 80 CURVE SMOOTH",
"399 81 OFFCURVE",
"399 82 OFFCURVE",
"398 83 CURVE SMOOTH",
"396 86.333 OFFCURVE",
"393.333 85.667 OFFCURVE",
"390 81 CURVE",
"350 39 OFFCURVE",
"308.667 14.333 OFFCURVE",
"266 7 CURVE SMOOTH",
"262 6 OFFCURVE",
"258 6 OFFCURVE",
"254 6 CURVE SMOOTH",
"244 6 OFFCURVE",
"235 9 OFFCURVE",
"227 16 CURVE SMOOTH",
"215 26 OFFCURVE",
"209 42 OFFCURVE",
"209 64 CURVE SMOOTH",
"209 82 OFFCURVE",
"213 101 OFFCURVE",
"220 120 CURVE",
"260 125.333 OFFCURVE",
"288.667 127 OFFCURVE",
"306 127 CURVE",
"296 113 OFFCURVE",
"291 106.333 OFFCURVE",
"291 107 CURVE SMOOTH",
"291 105.667 OFFCURVE",
"291.667 105 OFFCURVE",
"293 105 CURVE SMOOTH",
"300.333 105 OFFCURVE",
"311.333 113.333 OFFCURVE",
"326 130 CURVE",
"350.667 134.667 OFFCURVE",
"363 139 OFFCURVE",
"363 143 CURVE",
"362.333 143.667 OFFCURVE",
"360.333 144 OFFCURVE",
"357 144 CURVE SMOOTH",
"337 144 LINE",
"351.667 163.333 OFFCURVE",
"359 182 OFFCURVE",
"359 200 CURVE SMOOTH",
"359 232 OFFCURVE",
"326.667 249 OFFCURVE",
"296 249 CURVE SMOOTH",
"266.667 249 OFFCURVE",
"238.333 230.333 OFFCURVE",
"211 193 CURVE SMOOTH",
"205 185 LINE",
"207 197 LINE",
"204.323 223.774 OFFCURVE",
"172.058 253 OFFCURVE",
"146 253 CURVE SMOOTH",
"138.667 253 OFFCURVE",
"133 250.667 OFFCURVE",
"129 246 CURVE",
"93 242.667 OFFCURVE",
"62.667 203.667 OFFCURVE",
"38 129 CURVE SMOOTH",
"31.333 109 OFFCURVE",
"28 89.333 OFFCURVE",
"28 70 CURVE SMOOTH",
"28 22 OFFCURVE",
"51.667 -12 OFFCURVE",
"85 -12 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"73.667 8 OFFCURVE",
"65 22.333 OFFCURVE",
"65 51 CURVE SMOOTH",
"65 74.333 OFFCURVE",
"72.667 105 OFFCURVE",
"88 143 CURVE SMOOTH",
"104.667 183.667 OFFCURVE",
"122 206.667 OFFCURVE",
"140 212 CURVE",
"144 187.333 OFFCURVE",
"158.333 173 OFFCURVE",
"183 169 CURVE",
"184.333 161 OFFCURVE",
"183.333 148.333 OFFCURVE",
"178 131 CURVE SMOOTH",
"174 118.333 OFFCURVE",
"171 106.667 OFFCURVE",
"169 96 CURVE SMOOTH",
"167.667 86.667 OFFCURVE",
"167 79.333 OFFCURVE",
"167 70 CURVE SMOOTH",
"167 56 LINE",
"194.333 102 OFFCURVE",
"206.333 138 OFFCURVE",
"203 164 CURVE",
"205 185 LINE",
"193.667 167.667 OFFCURVE",
"184.667 149.667 OFFCURVE",
"178 131 CURVE SMOOTH",
"175 120 LINE SMOOTH",
"168.333 93.333 OFFCURVE",
"157.667 72.333 OFFCURVE",
"147 55 CURVE SMOOTH",
"127 23.667 OFFCURVE",
"108.333 8 OFFCURVE",
"91 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"239.333 159.667 OFFCURVE",
"254.333 177.333 OFFCURVE",
"273 196 CURVE SMOOTH",
"289 212 OFFCURVE",
"303.667 220 OFFCURVE",
"317 220 CURVE SMOOTH",
"327.667 220 OFFCURVE",
"333 213 OFFCURVE",
"333 199 CURVE SMOOTH",
"333 193.667 OFFCURVE",
"332 186.667 OFFCURVE",
"330 178 CURVE SMOOTH",
"328 169.333 OFFCURVE",
"323.333 157.667 OFFCURVE",
"316 143 CURVE",
"265.5 142 LINE SMOOTH",
"251.167 142 OFFCURVE",
"239.333 141.667 OFFCURVE",
"230 141 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 950 13 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 65 118 65 134 65 150 65 166 65 182 65 198 65 214 65 230 65 246 65 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 65 22 65 38 65 54 65 70 65 86 65 102 65 118 65 134 65 150 65 166 65 182 65 198 65 214 65 230 65 246 65 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 65 22 65 38 65 54 65 70 65 86 65 102 65 118 65 134 65 150 65 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 65 181 65 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01267 948 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0128 4 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01244 4 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01278 4 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01297 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 374;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = ydieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -11, -58}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 242;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = Ydieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 393, 284}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = Acircumflex;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 493, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Ecircumflex;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 256, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Aacute;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 591, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Edieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 308, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Egrave;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 301, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Iacute;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 310, 252}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 441;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Icircumflex;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 212, 252}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 441;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idieresis;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 264, 252}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 441;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Igrave;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 257, 252}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 441;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Oacute;
lastChange = "2021-05-11 11:11:56 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 339, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
lastChange = "2021-05-11 11:11:56 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 241, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Ograve;
lastChange = "2021-05-11 11:11:56 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 286, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Uacute;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 444, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ugrave;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 391, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = Ucircumflex;
lastChange = "2021-05-11 11:05:27 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 346, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Abreve;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 569, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 0102;
},
{
glyphname = Abreveacute;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb.case;
transform = "{1, 0, 0, 1, 569, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EAE;
},
{
glyphname = Abrevedotbelow;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 361, -43}";
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 569, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EB6;
},
{
glyphname = Abrevegrave;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb.case;
transform = "{1, 0, 0, 1, 569, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EB0;
},
{
glyphname = Abrevehookabove;
lastChange = "2021-05-14 17:39:10 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 569, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EB2;
},
{
glyphname = Abrevetilde;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb.case;
transform = "{1, 0, 0, 1, 569, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EB4;
},
{
glyphname = Acircumflexacute;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 493, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EA4;
},
{
glyphname = Acircumflexdotbelow;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 361, -43}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 493, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EAC;
},
{
glyphname = Acircumflexgrave;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 493, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EA6;
},
{
glyphname = Acircumflexhookabove;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 493, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EA8;
},
{
glyphname = Acircumflextilde;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 493, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EAA;
},
{
glyphname = Adotbelow;
lastChange = "2021-05-11 10:35:54 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 361, -43}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EA0;
},
{
glyphname = Ahookabove;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 564, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 1EA2;
},
{
glyphname = Amacron;
lastChange = "2021-05-14 17:39:13 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 483, 292}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 0100;
},
{
glyphname = Aogonek;
lastChange = "2021-05-11 10:35:54 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 580, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 769;
}
);
unicode = 0104;
},
{
glyphname = Cacute;
lastChange = "2021-05-11 10:36:08 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 317, 259}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 553;
}
);
unicode = 0106;
},
{
glyphname = Ccaron;
lastChange = "2021-05-11 10:36:18 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 258, 259}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 553;
}
);
unicode = 010C;
},
{
glyphname = Eth;
lastChange = "2020-01-02 21:32:11 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = hyphen;
transform = "{1, 0, 0, 1, 105, 82}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 724;
}
);
unicode = 00D0;
},
{
glyphname = Dcaron;
lastChange = "2021-05-11 10:36:26 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 343, 287}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 724;
}
);
unicode = 010E;
},
{
glyphname = Dcroat;
lastChange = "2021-05-11 10:35:14 +0000";
layers = (
{
components = (
{
name = Eth;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 724;
}
);
unicode = 0110;
},
{
glyphname = Ecaron;
lastChange = "2021-05-11 10:36:45 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 295, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 011A;
},
{
glyphname = Ecircumflexacute;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 256, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 1EBE;
},
{
glyphname = Ecircumflexdotbelow;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 198, -175}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 256, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 1EC6;
},
{
glyphname = Ecircumflexgrave;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 256, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 1EC0;
},
{
glyphname = Ecircumflexhookabove;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 256, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 1EC2;
},
{
glyphname = Ecircumflextilde;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 256, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 1EC4;
},
{
glyphname = Edotaccent;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 378, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 0116;
},
{
glyphname = Edotbelow;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 198, -175}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 1EB8;
},
{
glyphname = Ehookabove;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 327, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 1EBA;
},
{
glyphname = Emacron;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 246, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 0112;
},
{
glyphname = Eogonek;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 145, -172}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 0118;
},
{
glyphname = Etilde;
lastChange = "2021-05-11 10:36:59 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 301, 257}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 522;
}
);
unicode = 1EBC;
},
{
glyphname = Gcommaaccent;
lastChange = "2021-05-11 10:37:15 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 11, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 572;
}
);
unicode = 0122;
},
{
color = 1;
glyphname = IJ;
lastChange = "2021-05-18 10:46:05 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = "{-12, 15}";
type = Stem;
},
{
horizontal = 1;
place = "{381, 19}";
type = Stem;
},
{
horizontal = 1;
place = "{387, 18}";
type = Stem;
},
{
horizontal = 1;
place = "{403, 13}";
type = Stem;
},
{
horizontal = 1;
place = "{408, 13}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"450 -292 OFFCURVE",
"506 -275 OFFCURVE",
"571 -234 CURVE SMOOTH",
"671 -172 OFFCURVE",
"756 -10 OFFCURVE",
"815 154 CURVE",
"833 157 OFFCURVE",
"851 159 OFFCURVE",
"869 160 CURVE SMOOTH",
"880 161 OFFCURVE",
"887 164 OFFCURVE",
"887 167 CURVE SMOOTH",
"887 169 OFFCURVE",
"882 171 OFFCURVE",
"872 171 CURVE SMOOTH",
"869 171 OFFCURVE",
"866 171 OFFCURVE",
"863 171 CURVE SMOOTH",
"819 168 LINE",
"861 285 OFFCURVE",
"888 402 OFFCURVE",
"898 483 CURVE",
"898 483 OFFCURVE",
"952 482 OFFCURVE",
"979 482 CURVE SMOOTH",
"993 482 OFFCURVE",
"1002 480 OFFCURVE",
"1006 480 CURVE SMOOTH",
"1010 480 OFFCURVE",
"1011 481 OFFCURVE",
"1010 488 CURVE SMOOTH",
"1007 503 OFFCURVE",
"946 504 OFFCURVE",
"902 506 CURVE SMOOTH",
"900 506 OFFCURVE",
"902 516 OFFCURVE",
"900 521 CURVE SMOOTH",
"893 536 OFFCURVE",
"863 505 OFFCURVE",
"862 505 CURVE SMOOTH",
"842 503 LINE SMOOTH",
"797 500 OFFCURVE",
"738 494 OFFCURVE",
"706 485 CURVE SMOOTH",
"687 479 OFFCURVE",
"670 473 OFFCURVE",
"654 466 CURVE",
"634 477 OFFCURVE",
"614 481 OFFCURVE",
"595 481 CURVE SMOOTH",
"566 481 OFFCURVE",
"538 471 OFFCURVE",
"519 458 CURVE SMOOTH",
"471 426 OFFCURVE",
"448 373 OFFCURVE",
"448 320 CURVE SMOOTH",
"448 239 OFFCURVE",
"501 159 OFFCURVE",
"593 159 CURVE SMOOTH",
"600 159 OFFCURVE",
"603 160 OFFCURVE",
"603 161 CURVE SMOOTH",
"603 163 OFFCURVE",
"599 165 OFFCURVE",
"589 165 CURVE SMOOTH",
"507 168 OFFCURVE",
"462 246 OFFCURVE",
"462 323 CURVE SMOOTH",
"462 374 OFFCURVE",
"481 424 OFFCURVE",
"523 451 CURVE SMOOTH",
"541 463 OFFCURVE",
"564 472 OFFCURVE",
"589 472 CURVE SMOOTH",
"605 472 OFFCURVE",
"623 468 OFFCURVE",
"640 459 CURVE",
"575 426 OFFCURVE",
"543 382 OFFCURVE",
"543 340 CURVE SMOOTH",
"543 286 OFFCURVE",
"597 236 OFFCURVE",
"702 216 CURVE SMOOTH",
"710 215 OFFCURVE",
"718 221 OFFCURVE",
"718 225 CURVE SMOOTH",
"718 226 OFFCURVE",
"716 228 OFFCURVE",
"713 228 CURVE SMOOTH",
"641 234 OFFCURVE",
"578 287 OFFCURVE",
"578 344 CURVE SMOOTH",
"578 379 OFFCURVE",
"602 416 OFFCURVE",
"662 444 CURVE",
"671 436 OFFCURVE",
"680 426 OFFCURVE",
"689 415 CURVE SMOOTH",
"720 373 OFFCURVE",
"734 318 OFFCURVE",
"734 257 CURVE SMOOTH",
"734 223 OFFCURVE",
"730 188 OFFCURVE",
"722 152 CURVE",
"596 124 OFFCURVE",
"499 73 OFFCURVE",
"429 14 CURVE",
"423 19 OFFCURVE",
"416 24 OFFCURVE",
"409 27 CURVE SMOOTH",
"404 29 OFFCURVE",
"400 25 OFFCURVE",
"404 22 CURVE SMOOTH",
"412 17 OFFCURVE",
"418 12 OFFCURVE",
"423 8 CURVE",
"418 4 LINE",
"405 -8 LINE",
"391 -5 LINE SMOOTH",
"351 5 OFFCURVE",
"306 13 OFFCURVE",
"261 18 CURVE",
"286 57 OFFCURVE",
"308 107 OFFCURVE",
"327 161 CURVE",
"362 183 OFFCURVE",
"389 217 OFFCURVE",
"400 262 CURVE SMOOTH",
"401 267 OFFCURVE",
"394 271 OFFCURVE",
"393 266 CURVE SMOOTH",
"386 229 OFFCURVE",
"363 198 OFFCURVE",
"332 176 CURVE",
"368 285 OFFCURVE",
"391 408 OFFCURVE",
"402 483 CURVE",
"426 483 OFFCURVE",
"466 482 OFFCURVE",
"484 482 CURVE SMOOTH",
"498 482 OFFCURVE",
"507 480 OFFCURVE",
"511 480 CURVE SMOOTH",
"515 480 OFFCURVE",
"516 481 OFFCURVE",
"515 488 CURVE SMOOTH",
"511 503 OFFCURVE",
"451 504 OFFCURVE",
"406 506 CURVE",
"405 521 OFFCURVE",
"401 526 OFFCURVE",
"395 526 CURVE SMOOTH",
"383 526 OFFCURVE",
"366 505 OFFCURVE",
"366 505 CURVE",
"339 503 OFFCURVE",
"312 505 OFFCURVE",
"288 504 CURVE",
"263 566 OFFCURVE",
"214 596 OFFCURVE",
"164 596 CURVE SMOOTH",
"85 596 OFFCURVE",
"3 523 OFFCURVE",
"3 384 CURVE SMOOTH",
"3 368 OFFCURVE",
"5 350 OFFCURVE",
"7 332 CURVE SMOOTH",
"27 184 OFFCURVE",
"134 123 OFFCURVE",
"232 130 CURVE",
"218 92 OFFCURVE",
"202 56 OFFCURVE",
"183 23 CURVE",
"180 24 OFFCURVE",
"176 24 OFFCURVE",
"173 24 CURVE SMOOTH",
"132 24 OFFCURVE",
"1 23 OFFCURVE",
"1 -40 CURVE SMOOTH",
"1 -62 OFFCURVE",
"26 -80 OFFCURVE",
"42 -91 CURVE SMOOTH",
"46 -93 OFFCURVE",
"50 -94 OFFCURVE",
"54 -94 CURVE SMOOTH",
"58 -94 OFFCURVE",
"61 -93 OFFCURVE",
"61 -91 CURVE SMOOTH",
"61 -90 OFFCURVE",
"60 -89 OFFCURVE",
"58 -88 CURVE SMOOTH",
"47 -81 OFFCURVE",
"28 -61 OFFCURVE",
"28 -47 CURVE SMOOTH",
"28 -7 OFFCURVE",
"126 -1 OFFCURVE",
"169 0 CURVE",
"161 -13 OFFCURVE",
"152 -25 OFFCURVE",
"143 -36 CURVE",
"131 -33 OFFCURVE",
"123 -27 OFFCURVE",
"118 -23 CURVE SMOOTH",
"107 -15 OFFCURVE",
"107 -7 OFFCURVE",
"102 -7 CURVE SMOOTH",
"102 -7 OFFCURVE",
"101 -7 OFFCURVE",
"101 -7 CURVE SMOOTH",
"86 -8 OFFCURVE",
"105 -33 OFFCURVE",
"135 -46 CURVE",
"114 -71 OFFCURVE",
"91 -90 OFFCURVE",
"67 -103 CURVE SMOOTH",
"50 -112 OFFCURVE",
"31 -119 OFFCURVE",
"14 -119 CURVE SMOOTH",
"-1 -119 OFFCURVE",
"-13 -114 OFFCURVE",
"-22 -103 CURVE SMOOTH",
"-25 -99 OFFCURVE",
"-31 -104 OFFCURVE",
"-28 -109 CURVE SMOOTH",
"-20 -122 OFFCURVE",
"-5 -127 OFFCURVE",
"11 -127 CURVE SMOOTH",
"29 -127 OFFCURVE",
"50 -121 OFFCURVE",
"67 -112 CURVE SMOOTH",
"95 -98 OFFCURVE",
"120 -77 OFFCURVE",
"144 -50 CURVE",
"152 -53 OFFCURVE",
"161 -55 OFFCURVE",
"169 -55 CURVE SMOOTH",
"179 -55 OFFCURVE",
"188 -53 OFFCURVE",
"196 -48 CURVE SMOOTH",
"215 -38 OFFCURVE",
"231 -22 OFFCURVE",
"247 -2 CURVE",
"295 -5 OFFCURVE",
"343 -12 OFFCURVE",
"385 -20 CURVE",
"387 -20 OFFCURVE",
"389 -20 OFFCURVE",
"392 -21 CURVE",
"332 -83 OFFCURVE",
"305 -145 OFFCURVE",
"305 -195 CURVE SMOOTH",
"305 -252 OFFCURVE",
"342 -292 OFFCURVE",
"407 -292 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165 -25 OFFCURVE",
"174 -13 OFFCURVE",
"182 0 CURVE",
"183 0 LINE SMOOTH",
"193 0 OFFCURVE",
"203 0 OFFCURVE",
"214 -1 CURVE",
"199 -19 OFFCURVE",
"183 -31 OFFCURVE",
"166 -35 CURVE SMOOTH",
"162 -36 OFFCURVE",
"159 -37 OFFCURVE",
"155 -37 CURVE"
);
},
{
closed = 1;
nodes = (
"218 22 OFFCURVE",
"208 23 OFFCURVE",
"197 23 CURVE",
"217 57 OFFCURVE",
"235 93 OFFCURVE",
"249 132 CURVE",
"261 134 OFFCURVE",
"272 136 OFFCURVE",
"284 140 CURVE",
"268 94 OFFCURVE",
"249 52 OFFCURVE",
"229 21 CURVE"
);
},
{
closed = 1;
nodes = (
"354 -273 OFFCURVE",
"326 -247 OFFCURVE",
"326 -204 CURVE SMOOTH",
"326 -160 OFFCURVE",
"354 -99 OFFCURVE",
"420 -29 CURVE",
"421 -27 OFFCURVE",
"423 -25 OFFCURVE",
"425 -23 CURVE",
"438 -21 OFFCURVE",
"443 -16 OFFCURVE",
"443 -9 CURVE SMOOTH",
"443 -7 OFFCURVE",
"443 -6 OFFCURVE",
"443 -5 CURVE",
"511 57 OFFCURVE",
"608 106 OFFCURVE",
"718 135 CURVE",
"671 -49 OFFCURVE",
"531 -235 OFFCURVE",
"387 -235 CURVE SMOOTH",
"379 -235 OFFCURVE",
"371 -234 OFFCURVE",
"363 -233 CURVE",
"358 -233 OFFCURVE",
"357 -241 OFFCURVE",
"362 -241 CURVE",
"370 -242 OFFCURVE",
"378 -243 OFFCURVE",
"387 -243 CURVE SMOOTH",
"536 -243 OFFCURVE",
"683 -51 OFFCURVE",
"731 139 CURVE",
"744 142 OFFCURVE",
"758 145 OFFCURVE",
"772 147 CURVE",
"719 -3 OFFCURVE",
"645 -151 OFFCURVE",
"558 -212 CURVE SMOOTH",
"496 -255 OFFCURVE",
"442 -273 OFFCURVE",
"402 -273 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"144 131 OFFCURVE",
"44 183 OFFCURVE",
"23 331 CURVE SMOOTH",
"20 350 OFFCURVE",
"19 368 OFFCURVE",
"19 385 CURVE SMOOTH",
"19 514 OFFCURVE",
"91 587 OFFCURVE",
"160 587 CURVE SMOOTH",
"202 587 OFFCURVE",
"243 560 OFFCURVE",
"265 502 CURVE",
"136 488 OFFCURVE",
"56 437 OFFCURVE",
"56 383 CURVE SMOOTH",
"56 345 OFFCURVE",
"97 304 OFFCURVE",
"193 276 CURVE SMOOTH",
"200 274 OFFCURVE",
"207 278 OFFCURVE",
"207 282 CURVE SMOOTH",
"207 283 OFFCURVE",
"205 284 OFFCURVE",
"203 285 CURVE SMOOTH",
"129 298 OFFCURVE",
"91 334 OFFCURVE",
"91 371 CURVE SMOOTH",
"91 418 OFFCURVE",
"151 468 OFFCURVE",
"272 480 CURVE",
"275 466 OFFCURVE",
"278 451 OFFCURVE",
"280 434 CURVE SMOOTH",
"281 421 OFFCURVE",
"282 407 OFFCURVE",
"282 393 CURVE SMOOTH",
"282 318 OFFCURVE",
"265 226 OFFCURVE",
"235 140 CURVE"
);
},
{
closed = 1;
nodes = (
"286 231 OFFCURVE",
"305 324 OFFCURVE",
"305 399 CURVE SMOOTH",
"305 410 OFFCURVE",
"305 422 OFFCURVE",
"304 432 CURVE SMOOTH",
"302 450 OFFCURVE",
"299 467 OFFCURVE",
"295 482 CURVE",
"313 483 OFFCURVE",
"333 483 OFFCURVE",
"354 482 CURVE",
"353 418 OFFCURVE",
"328 273 OFFCURVE",
"288 153 CURVE",
"277 148 OFFCURVE",
"265 145 OFFCURVE",
"254 143 CURVE"
);
},
{
closed = 1;
nodes = (
"743 192 OFFCURVE",
"748 228 OFFCURVE",
"748 263 CURVE SMOOTH",
"748 324 OFFCURVE",
"734 380 OFFCURVE",
"702 422 CURVE SMOOTH",
"694 433 OFFCURVE",
"685 442 OFFCURVE",
"677 450 CURVE",
"695 457 OFFCURVE",
"717 464 OFFCURVE",
"741 470 CURVE SMOOTH",
"771 477 OFFCURVE",
"838 480 OFFCURVE",
"851 481 CURVE",
"844 405 OFFCURVE",
"817 284 OFFCURVE",
"777 162 CURVE",
"735 155 LINE"
);
}
);
width = 862;
}
);
note = IJ;
unicode = 0132;
},
{
glyphname = Idotbelow;
lastChange = "2021-05-11 10:37:35 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 88, -55}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 441;
}
);
unicode = 1ECA;
},
{
glyphname = Ihookabove;
lastChange = "2021-05-11 10:37:37 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 283, 252}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 441;
}
);
unicode = 1EC8;
},
{
glyphname = Imacron;
lastChange = "2021-05-11 10:37:37 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 202, 252}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 441;
}
);
unicode = 012A;
},
{
glyphname = Iogonek;
lastChange = "2021-05-11 10:37:53 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 34, -51}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 441;
}
);
unicode = 012E;
},
{
glyphname = Itilde;
lastChange = "2021-05-11 10:37:37 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 257, 252}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 441;
}
);
unicode = 0128;
},
{
glyphname = Jcircumflex;
lastChange = "2021-05-18 10:47:30 +0000";
layers = (
{
components = (
{
name = J;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 263, 251}";
}
);
hints = (
{
horizontal = 1;
place = "{387, 18}";
type = Stem;
},
{
horizontal = 1;
place = "{408, 13}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 421;
}
);
note = Jcircumflex;
unicode = 0134;
},
{
glyphname = Kcommaaccent;
lastChange = "2021-05-11 10:37:59 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 123, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 655;
}
);
unicode = 0136;
},
{
glyphname = Lacute;
lastChange = "2021-05-11 10:38:11 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 394, 311}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 433;
}
);
unicode = 0139;
},
{
glyphname = Lcaron;
lastChange = "2021-05-11 10:38:14 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 464, 311}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 433;
}
);
unicode = 013D;
},
{
glyphname = Lcommaaccent;
lastChange = "2021-05-11 10:38:14 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 53, -44}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 433;
}
);
unicode = 013B;
},
{
color = 1;
glyphname = Ldotaccent;
lastChange = "2021-05-18 10:46:05 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = "{48, 18}";
type = Stem;
},
{
horizontal = 1;
place = "{478, 15}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"562 -54 OFFCURVE",
"617 -38 OFFCURVE",
"635 12 CURVE SMOOTH",
"637 18 OFFCURVE",
"636 21 OFFCURVE",
"634 21 CURVE SMOOTH",
"631 21 OFFCURVE",
"628 18 OFFCURVE",
"626 13 CURVE SMOOTH",
"614 -19 OFFCURVE",
"580 -28 OFFCURVE",
"553 -28 CURVE SMOOTH",
"548 -28 OFFCURVE",
"543 -27 OFFCURVE",
"539 -27 CURVE SMOOTH",
"426 -15 OFFCURVE",
"269 80 OFFCURVE",
"269 80 CURVE",
"275 92 OFFCURVE",
"296 139 OFFCURVE",
"309 183 CURVE",
"414 214 OFFCURVE",
"487 288 OFFCURVE",
"520 356 CURVE SMOOTH",
"539 395 OFFCURVE",
"548 436 OFFCURVE",
"548 471 CURVE SMOOTH",
"548 536 OFFCURVE",
"520 585 OFFCURVE",
"480 585 CURVE SMOOTH",
"449 585 OFFCURVE",
"411 557 OFFCURVE",
"372 485 CURVE SMOOTH",
"335 419 OFFCURVE",
"314 319 OFFCURVE",
"301 251 CURVE",
"289 248 OFFCURVE",
"278 246 OFFCURVE",
"266 246 CURVE",
"281 307 OFFCURVE",
"288 365 OFFCURVE",
"288 403 CURVE SMOOTH",
"288 530 OFFCURVE",
"236 585 OFFCURVE",
"183 585 CURVE SMOOTH",
"171 585 OFFCURVE",
"159 582 OFFCURVE",
"147 576 CURVE SMOOTH",
"96 550 OFFCURVE",
"70 493 OFFCURVE",
"70 432 CURVE SMOOTH",
"70 392 OFFCURVE",
"81 350 OFFCURVE",
"105 315 CURVE",
"96 296 OFFCURVE",
"92 279 OFFCURVE",
"92 263 CURVE SMOOTH",
"92 205 OFFCURVE",
"145 167 OFFCURVE",
"233 171 CURVE",
"226 151 OFFCURVE",
"218 130 OFFCURVE",
"210 113 CURVE",
"176 130 OFFCURVE",
"131 150 OFFCURVE",
"101 156 CURVE SMOOTH",
"91 158 OFFCURVE",
"82 159 OFFCURVE",
"74 159 CURVE SMOOTH",
"21 159 OFFCURVE",
"-6 126 OFFCURVE",
"-6 89 CURVE SMOOTH",
"-6 47 OFFCURVE",
"29 -1 OFFCURVE",
"102 -14 CURVE SMOOTH",
"113 -16 OFFCURVE",
"123 -17 OFFCURVE",
"133 -17 CURVE SMOOTH",
"186 -17 OFFCURVE",
"227 12 OFFCURVE",
"259 61 CURVE",
"259 61 OFFCURVE",
"416 -54 OFFCURVE",
"518 -54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"58 -4 OFFCURVE",
"26 33 OFFCURVE",
"26 67 CURVE SMOOTH",
"26 96 OFFCURVE",
"50 123 OFFCURVE",
"97 123 CURVE SMOOTH",
"105 123 OFFCURVE",
"114 123 OFFCURVE",
"123 121 CURVE SMOOTH",
"144 117 OFFCURVE",
"174 104 OFFCURVE",
"199 93 CURVE",
"175 51 OFFCURVE",
"144 24 OFFCURVE",
"104 26 CURVE SMOOTH",
"99 26 OFFCURVE",
"99 18 OFFCURVE",
"105 18 CURVE SMOOTH",
"147 16 OFFCURVE",
"181 45 OFFCURVE",
"208 89 CURVE",
"228 79 OFFCURVE",
"243 71 OFFCURVE",
"243 71 CURVE",
"243 71 OFFCURVE",
"211 -4 OFFCURVE",
"124 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"253 90 OFFCURVE",
"239 98 OFFCURVE",
"219 108 CURVE",
"228 127 OFFCURVE",
"237 150 OFFCURVE",
"245 172 CURVE",
"258 174 OFFCURVE",
"271 176 OFFCURVE",
"285 179 CURVE",
"274 144 OFFCURVE",
"266 115 OFFCURVE",
"253 90 CURVE"
);
},
{
closed = 1;
nodes = (
"178 190 OFFCURVE",
"112 229 OFFCURVE",
"119 297 CURVE",
"149 263 OFFCURVE",
"193 240 OFFCURVE",
"251 238 CURVE",
"247 222 OFFCURVE",
"243 206 OFFCURVE",
"238 190 CURVE"
);
},
{
closed = 1;
nodes = (
"256 206 OFFCURVE",
"260 222 OFFCURVE",
"264 238 CURVE",
"276 238 OFFCURVE",
"287 239 OFFCURVE",
"299 242 CURVE",
"290 196 LINE",
"276 193 OFFCURVE",
"263 191 OFFCURVE",
"251 190 CURVE"
);
},
{
closed = 1;
nodes = (
"414 106 OFFCURVE",
"422 109 OFFCURVE",
"428 115 CURVE SMOOTH",
"434 120 OFFCURVE",
"437 127 OFFCURVE",
"437 135 CURVE SMOOTH",
"437 144 OFFCURVE",
"434 151 OFFCURVE",
"428 157 CURVE SMOOTH",
"422 163 OFFCURVE",
"414 166 OFFCURVE",
"405 166 CURVE SMOOTH",
"396 166 OFFCURVE",
"389 163 OFFCURVE",
"383 157 CURVE SMOOTH",
"376 151 OFFCURVE",
"373 144 OFFCURVE",
"373 135 CURVE SMOOTH",
"373 127 OFFCURVE",
"376 120 OFFCURVE",
"383 115 CURVE SMOOTH",
"389 109 OFFCURVE",
"396 106 OFFCURVE",
"405 106 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"203 247 OFFCURVE",
"150 272 OFFCURVE",
"122 315 CURVE",
"129 336 OFFCURVE",
"143 357 OFFCURVE",
"165 375 CURVE SMOOTH",
"170 379 OFFCURVE",
"160 378 OFFCURVE",
"157 376 CURVE SMOOTH",
"139 364 OFFCURVE",
"124 348 OFFCURVE",
"114 331 CURVE",
"94 372 OFFCURVE",
"86 409 OFFCURVE",
"86 442 CURVE SMOOTH",
"86 523 OFFCURVE",
"134 576 OFFCURVE",
"181 576 CURVE SMOOTH",
"227 576 OFFCURVE",
"272 527 OFFCURVE",
"272 403 CURVE SMOOTH",
"272 367 OFFCURVE",
"266 308 OFFCURVE",
"253 246 CURVE"
);
},
{
closed = 1;
nodes = (
"332 253 LINE",
"371 271 OFFCURVE",
"407 305 OFFCURVE",
"434 360 CURVE",
"437 364 OFFCURVE",
"429 368 OFFCURVE",
"427 363 CURVE SMOOTH",
"403 314 OFFCURVE",
"370 282 OFFCURVE",
"335 264 CURVE",
"344 293 OFFCURVE",
"353 320 OFFCURVE",
"363 347 CURVE SMOOTH",
"421 504 OFFCURVE",
"468 561 OFFCURVE",
"496 561 CURVE SMOOTH",
"515 561 OFFCURVE",
"526 535 OFFCURVE",
"526 497 CURVE SMOOTH",
"526 461 OFFCURVE",
"516 413 OFFCURVE",
"495 367 CURVE SMOOTH",
"464 296 OFFCURVE",
"406 228 OFFCURVE",
"315 203 CURVE"
);
}
);
width = 433;
}
);
note = Ldotaccent;
unicode = 013F;
},
{
glyphname = Lslash;
lastChange = "2020-01-02 21:44:25 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = hyphen;
transform = "{0.99407, 0.08697, -0.04733, 0.54102, 146, 65}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 433;
}
);
unicode = 0141;
},
{
glyphname = Nacute;
lastChange = "2021-05-11 10:38:28 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 486, 270}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 686;
}
);
unicode = 0143;
},
{
glyphname = Ncaron;
lastChange = "2021-05-11 10:38:30 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 427, 270}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 686;
}
);
unicode = 0147;
},
{
glyphname = Ncommaaccent;
lastChange = "2021-05-11 10:38:30 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 229, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 686;
}
);
unicode = 0145;
},
{
glyphname = Eng;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"264 -402 OFFCURVE",
"332 -368 OFFCURVE",
"384 -324 CURVE SMOOTH",
"457 -262 OFFCURVE",
"537 -139 OFFCURVE",
"586 99 CURVE",
"605 50 OFFCURVE",
"626 25 OFFCURVE",
"649 25 CURVE SMOOTH",
"674 25 OFFCURVE",
"687 45 OFFCURVE",
"687 85 CURVE SMOOTH",
"687 117 OFFCURVE",
"676 148 OFFCURVE",
"654 178 CURVE SMOOTH",
"643 193 OFFCURVE",
"631 206 OFFCURVE",
"616 218 CURVE",
"639 311 OFFCURVE",
"661 380 OFFCURVE",
"682 423 CURVE SMOOTH",
"715 489 OFFCURVE",
"756 522 OFFCURVE",
"806 522 CURVE SMOOTH",
"824 522 OFFCURVE",
"841 515 OFFCURVE",
"856 502 CURVE SMOOTH",
"868 491 OFFCURVE",
"875 481 OFFCURVE",
"878 471 CURVE SMOOTH",
"879 466 OFFCURVE",
"881 465 OFFCURVE",
"884 466 CURVE SMOOTH",
"887 467 OFFCURVE",
"887 470 OFFCURVE",
"886 475 CURVE SMOOTH",
"881 494 OFFCURVE",
"872 511 OFFCURVE",
"861 524 CURVE SMOOTH",
"844 544 OFFCURVE",
"822 554 OFFCURVE",
"796 554 CURVE SMOOTH",
"741 554 OFFCURVE",
"697 518 OFFCURVE",
"664 446 CURVE SMOOTH",
"645 403 OFFCURVE",
"624 331 OFFCURVE",
"603 228 CURVE",
"588 239 OFFCURVE",
"574 246 OFFCURVE",
"559 253 CURVE",
"543 346 OFFCURVE",
"525 416 OFFCURVE",
"505 464 CURVE SMOOTH",
"474 537 OFFCURVE",
"433 574 OFFCURVE",
"384 574 CURVE SMOOTH",
"359 574 OFFCURVE",
"339 566 OFFCURVE",
"324 549 CURVE",
"276 550 OFFCURVE",
"229 536 OFFCURVE",
"183 505 CURVE SMOOTH",
"136 475 OFFCURVE",
"100 435 OFFCURVE",
"75 386 CURVE SMOOTH",
"58 353 OFFCURVE",
"50 317 OFFCURVE",
"50 278 CURVE SMOOTH",
"50 209 OFFCURVE",
"75 176 OFFCURVE",
"125 180 CURVE SMOOTH",
"146 181 OFFCURVE",
"170 194 OFFCURVE",
"197 219 CURVE SMOOTH",
"220 240 OFFCURVE",
"235 258 OFFCURVE",
"242 275 CURVE SMOOTH",
"243 279 OFFCURVE",
"243 282 OFFCURVE",
"242 284 CURVE",
"240 285 OFFCURVE",
"238 283 OFFCURVE",
"235 280 CURVE",
"202 227 OFFCURVE",
"168 200 OFFCURVE",
"133 200 CURVE SMOOTH",
"96 200 OFFCURVE",
"77 226 OFFCURVE",
"77 278 CURVE SMOOTH",
"77 309 OFFCURVE",
"83 341 OFFCURVE",
"96 372 CURVE SMOOTH",
"117 424 OFFCURVE",
"147 464 OFFCURVE",
"187 493 CURVE SMOOTH",
"223 519 OFFCURVE",
"259 532 OFFCURVE",
"295 532 CURVE SMOOTH",
"300 532 OFFCURVE",
"305 531 OFFCURVE",
"310 531 CURVE",
"299 510 OFFCURVE",
"293 488 OFFCURVE",
"293 464 CURVE SMOOTH",
"293 432 OFFCURVE",
"302 404 OFFCURVE",
"320 379 CURVE",
"321 376 OFFCURVE",
"323 376 OFFCURVE",
"326 378 CURVE SMOOTH",
"328 379 OFFCURVE",
"328 380 OFFCURVE",
"327 383 CURVE",
"310 408 OFFCURVE",
"301 435 OFFCURVE",
"301 464 CURVE SMOOTH",
"301 489 OFFCURVE",
"307 511 OFFCURVE",
"319 530 CURVE",
"381 519 OFFCURVE",
"424 474 OFFCURVE",
"449 395 CURVE",
"445 356 OFFCURVE",
"434 313 OFFCURVE",
"416 265 CURVE",
"364 254 OFFCURVE",
"317 229 OFFCURVE",
"276 190 CURVE SMOOTH",
"251 166 OFFCURVE",
"238 140 OFFCURVE",
"238 112 CURVE SMOOTH",
"238 79 OFFCURVE",
"253 55 OFFCURVE",
"283 39 CURVE",
"211 -42 OFFCURVE",
"139 -83 OFFCURVE",
"66 -83 CURVE SMOOTH",
"33 -83 OFFCURVE",
"12 -54 OFFCURVE",
"12 -21 CURVE SMOOTH",
"12 -12 OFFCURVE",
"15 -1 OFFCURVE",
"20 13 CURVE SMOOTH",
"25 27 OFFCURVE",
"28 34 OFFCURVE",
"28 34 CURVE",
"28 36 OFFCURVE",
"27 37 OFFCURVE",
"26 37 CURVE SMOOTH",
"24 37 OFFCURVE",
"23 36 OFFCURVE",
"22 34 CURVE",
"5 13 OFFCURVE",
"-3 -9 OFFCURVE",
"-3 -32 CURVE SMOOTH",
"-3 -71 OFFCURVE",
"23 -95 OFFCURVE",
"62 -95 CURVE SMOOTH",
"122 -95 OFFCURVE",
"180 -72 OFFCURVE",
"237 -25 CURVE SMOOTH",
"258 -8 OFFCURVE",
"279 11 OFFCURVE",
"298 32 CURVE",
"306 29 OFFCURVE",
"315 28 OFFCURVE",
"326 28 CURVE SMOOTH",
"352 28 OFFCURVE",
"376 38 OFFCURVE",
"399 59 CURVE SMOOTH",
"401 61 OFFCURVE",
"401 63 OFFCURVE",
"399 65 CURVE",
"398 67 OFFCURVE",
"396 67 OFFCURVE",
"394 65 CURVE SMOOTH",
"373 46 OFFCURVE",
"350 36 OFFCURVE",
"326 36 CURVE SMOOTH",
"318 36 OFFCURVE",
"311 37 OFFCURVE",
"304 39 CURVE",
"361 102 OFFCURVE",
"406 175 OFFCURVE",
"437 257 CURVE",
"451 260 OFFCURVE",
"465 261 OFFCURVE",
"479 260 CURVE",
"492 182 OFFCURVE",
"516 86 OFFCURVE",
"539 24 CURVE",
"483 -168 OFFCURVE",
"412 -273 OFFCURVE",
"351 -322 CURVE SMOOTH",
"299 -364 OFFCURVE",
"254 -384 OFFCURVE",
"216 -384 CURVE SMOOTH",
"174 -384 OFFCURVE",
"147 -368 OFFCURVE",
"147 -328 CURVE SMOOTH",
"147 -286 OFFCURVE",
"169 -237 OFFCURVE",
"214 -181 CURVE SMOOTH",
"241 -148 OFFCURVE",
"280 -126 OFFCURVE",
"325 -108 CURVE SMOOTH",
"336 -104 OFFCURVE",
"342 -100 OFFCURVE",
"342 -98 CURVE SMOOTH",
"342 -97 OFFCURVE",
"341 -96 OFFCURVE",
"338 -96 CURVE SMOOTH",
"335 -96 OFFCURVE",
"329 -97 OFFCURVE",
"322 -99 CURVE",
"280 -114 OFFCURVE",
"226 -138 OFFCURVE",
"195 -165 CURVE SMOOTH",
"161 -197 OFFCURVE",
"132 -231 OFFCURVE",
"120 -271 CURVE SMOOTH",
"116 -284 OFFCURVE",
"114 -296 OFFCURVE",
"114 -308 CURVE SMOOTH",
"114 -362 OFFCURVE",
"156 -402 OFFCURVE",
"206 -402 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"264 59 OFFCURVE",
"252 80 OFFCURVE",
"252 107 CURVE SMOOTH",
"252 133 OFFCURVE",
"264 158 OFFCURVE",
"288 181 CURVE SMOOTH",
"324 215 OFFCURVE",
"365 239 OFFCURVE",
"411 252 CURVE",
"380 174 OFFCURVE",
"339 105 OFFCURVE",
"288 45 CURVE"
);
},
{
closed = 1;
nodes = (
"548 103 OFFCURVE",
"532 165 OFFCURVE",
"514 257 CURVE",
"528 255 OFFCURVE",
"540 252 OFFCURVE",
"551 247 CURVE",
"554 236 OFFCURVE",
"555 228 OFFCURVE",
"556 219 CURVE SMOOTH",
"563 180 OFFCURVE",
"570 147 OFFCURVE",
"579 119 CURVE",
"574 99 OFFCURVE",
"568 83 OFFCURVE",
"563 71 CURVE"
);
},
{
closed = 1;
nodes = (
"628 33 OFFCURVE",
"608 59 OFFCURVE",
"590 112 CURVE",
"601 155 OFFCURVE",
"609 188 OFFCURVE",
"614 209 CURVE",
"626 198 OFFCURVE",
"637 186 OFFCURVE",
"648 173 CURVE SMOOTH",
"669 144 OFFCURVE",
"679 115 OFFCURVE",
"679 86 CURVE SMOOTH",
"679 51 OFFCURVE",
"669 33 OFFCURVE",
"650 33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"576 159 OFFCURVE",
"569 187 OFFCURVE",
"564 220 CURVE SMOOTH",
"560 243 LINE",
"575 236 OFFCURVE",
"588 229 OFFCURVE",
"601 220 CURVE",
"593 179 OFFCURVE",
"587 151 OFFCURVE",
"583 134 CURVE"
);
},
{
closed = 1;
nodes = (
"452 298 OFFCURVE",
"460 327 OFFCURVE",
"465 354 CURVE",
"478 270 LINE",
"465 271 OFFCURVE",
"453 270 OFFCURVE",
"441 269 CURVE"
);
},
{
closed = 1;
nodes = (
"537 261 OFFCURVE",
"525 264 OFFCURVE",
"512 266 CURVE",
"499 331 OFFCURVE",
"489 378 OFFCURVE",
"481 407 CURVE SMOOTH",
"457 493 OFFCURVE",
"408 540 OFFCURVE",
"334 548 CURVE",
"346 560 OFFCURVE",
"361 565 OFFCURVE",
"379 565 CURVE SMOOTH",
"419 565 OFFCURVE",
"456 529 OFFCURVE",
"489 457 CURVE SMOOTH",
"513 404 OFFCURVE",
"533 338 OFFCURVE",
"549 257 CURVE"
);
}
);
width = 686;
}
);
unicode = 014A;
},
{
glyphname = Ocircumflexacute;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 241, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1ED0;
},
{
glyphname = Ocircumflexdotbelow;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 92, -26}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 241, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1ED8;
},
{
glyphname = Ocircumflexgrave;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 241, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1ED2;
},
{
glyphname = Ocircumflexhookabove;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 241, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1ED4;
},
{
glyphname = Ocircumflextilde;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 241, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1ED6;
},
{
glyphname = Odotbelow;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 92, -26}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1ECC;
},
{
glyphname = Ohookabove;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 312, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1ECE;
},
{
glyphname = Ohorn;
lastChange = "2021-05-11 11:05:06 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 411, 160}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 01A0;
},
{
glyphname = Ohornacute;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 339, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1EDA;
},
{
glyphname = Ohorndotbelow;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 92, -26}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1EE2;
},
{
glyphname = Ohorngrave;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 286, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1EDC;
},
{
glyphname = Ohornhookabove;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 312, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1EDE;
},
{
glyphname = Ohorntilde;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 286, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 1EE0;
},
{
glyphname = Ohungarumlaut;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 220, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 0150;
},
{
glyphname = Omacron;
lastChange = "2021-05-11 11:11:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 231, 265}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 534;
}
);
unicode = 014C;
},
{
glyphname = Thorn;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"86 -247 OFFCURVE",
"89 -245 OFFCURVE",
"89 -242 CURVE SMOOTH",
"89 -238 OFFCURVE",
"85 -235 OFFCURVE",
"76 -234 CURVE SMOOTH",
"53 -229 OFFCURVE",
"41 -209 OFFCURVE",
"41 -175 CURVE SMOOTH",
"41 -171 OFFCURVE",
"44 -148 OFFCURVE",
"49 -107 CURVE SMOOTH",
"56 -54 OFFCURVE",
"59 14 OFFCURVE",
"106 168 CURVE SMOOTH",
"149 314 OFFCURVE",
"203 438 OFFCURVE",
"206 436 CURVE SMOOTH",
"221 429 OFFCURVE",
"243 409 OFFCURVE",
"258 376 CURVE SMOOTH",
"272 345 OFFCURVE",
"275 311 OFFCURVE",
"276 289 CURVE",
"251 266 OFFCURVE",
"220 241 OFFCURVE",
"208 230 CURVE SMOOTH",
"195 217 OFFCURVE",
"188 211 OFFCURVE",
"187 210 CURVE SMOOTH",
"166 183 OFFCURVE",
"155 157 OFFCURVE",
"155 133 CURVE SMOOTH",
"155 111 OFFCURVE",
"165 100 OFFCURVE",
"185 100 CURVE SMOOTH",
"191 100 OFFCURVE",
"198 101 OFFCURVE",
"206 103 CURVE SMOOTH",
"272 121 OFFCURVE",
"308 180 OFFCURVE",
"312 281 CURVE",
"367 318 LINE SMOOTH",
"374 322 OFFCURVE",
"378 327 OFFCURVE",
"381 332 CURVE SMOOTH",
"385 339 OFFCURVE",
"383 342 OFFCURVE",
"379 342 CURVE SMOOTH",
"382 342 OFFCURVE",
"371 334 OFFCURVE",
"346 315 CURVE SMOOTH",
"332 305 OFFCURVE",
"322 300 OFFCURVE",
"316 300 CURVE SMOOTH",
"312 300 OFFCURVE",
"310 302 OFFCURVE",
"310 307 CURVE",
"301 375 OFFCURVE",
"276 445 OFFCURVE",
"216 464 CURVE",
"220 479 OFFCURVE",
"225 493 OFFCURVE",
"229 509 CURVE SMOOTH",
"241 555 LINE SMOOTH",
"245 570 OFFCURVE",
"227 593 OFFCURVE",
"191 605 CURVE SMOOTH",
"187 606 OFFCURVE",
"183 607 OFFCURVE",
"180 607 CURVE SMOOTH",
"176 607 OFFCURVE",
"174 605 OFFCURVE",
"174 600 CURVE",
"178 596 LINE",
"190 580 OFFCURVE",
"195 568 OFFCURVE",
"194 558 CURVE SMOOTH",
"190 528 OFFCURVE",
"181 481 OFFCURVE",
"171 457 CURVE",
"81 181 OFFCURVE",
"21 -2 OFFCURVE",
"3 -94 CURVE SMOOTH",
"1 -105 OFFCURVE",
"0 -117 OFFCURVE",
"0 -130 CURVE SMOOTH",
"0 -187 OFFCURVE",
"24 -238 OFFCURVE",
"61 -244 CURVE SMOOTH",
"70 -246 OFFCURVE",
"76 -247 OFFCURVE",
"81 -247 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"176 113 OFFCURVE",
"169 120 OFFCURVE",
"169 132 CURVE SMOOTH",
"169 142 OFFCURVE",
"174 154 OFFCURVE",
"182 169 CURVE SMOOTH",
"196 192 OFFCURVE",
"234 236 OFFCURVE",
"275 274 CURVE",
"275 268 LINE",
"280 248 OFFCURVE",
"265 214 OFFCURVE",
"253 181 CURVE SMOOTH",
"238 135 OFFCURVE",
"217 113 OFFCURVE",
"188 113 CURVE SMOOTH"
);
}
);
width = 383;
}
);
unicode = 00DE;
},
{
glyphname = Racute;
lastChange = "2021-05-11 11:09:24 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 444, 290}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 688;
}
);
unicode = 0154;
},
{
glyphname = Rcaron;
lastChange = "2021-05-11 11:09:29 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 385, 290}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 688;
}
);
unicode = 0158;
},
{
glyphname = Rcommaaccent;
lastChange = "2021-05-11 11:09:30 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 189, -58}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 688;
}
);
unicode = 0156;
},
{
glyphname = Sacute;
lastChange = "2021-05-11 11:08:59 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 330, 285}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 520;
}
);
unicode = 015A;
},
{
glyphname = Scaron;
lastChange = "2021-05-11 11:09:11 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 271, 285}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 520;
}
);
unicode = 0160;
},
{
glyphname = Scedilla;
lastChange = "2021-05-11 11:09:11 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 45, -178}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 520;
}
);
unicode = 015E;
},
{
glyphname = Germandbls;
lastChange = "2021-05-11 10:08:02 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = S;
transform = "{1, 0, 0, 1, 520, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 1040;
}
);
unicode = 1E9E;
},
{
glyphname = Tbar;
lastChange = "2020-01-02 21:52:08 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = hyphen;
transform = "{1.11335, 0, 0, 0.74112, 284, 217}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 464;
}
);
unicode = 0166;
},
{
glyphname = Tcaron;
lastChange = "2021-05-11 10:39:06 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 439, 260}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 464;
}
);
unicode = 0164;
},
{
glyphname = Tcedilla;
lastChange = "2021-05-11 10:39:16 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -10, -67}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 464;
}
);
unicode = 0162;
},
{
glyphname = Udotbelow;
lastChange = "2021-05-11 10:39:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 317, -57}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EE4;
},
{
glyphname = Uhookabove;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 417, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EE6;
},
{
glyphname = Uhorn;
lastChange = "2021-05-11 11:04:54 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 586, 255}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 01AF;
},
{
glyphname = Uhornacute;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 444, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EE8;
},
{
glyphname = Uhorndotbelow;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 317, -57}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EF0;
},
{
glyphname = Uhorngrave;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 391, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EEA;
},
{
glyphname = Uhornhookabove;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 417, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EEC;
},
{
glyphname = Uhorntilde;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 391, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EEE;
},
{
glyphname = Uhungarumlaut;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 325, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 0170;
},
{
glyphname = Umacron;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 336, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 016A;
},
{
glyphname = Uogonek;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 484, -31}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 0172;
},
{
glyphname = Uring;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 405, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 016E;
},
{
glyphname = Utilde;
lastChange = "2021-05-11 10:39:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 391, 291}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 0168;
},
{
glyphname = Wacute;
lastChange = "2021-05-11 10:39:42 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 444, 294}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 816;
}
);
unicode = 1E82;
},
{
glyphname = Wcircumflex;
lastChange = "2021-05-11 10:39:46 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 346, 294}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 816;
}
);
unicode = 0174;
},
{
glyphname = Wdieresis;
lastChange = "2021-05-11 10:39:46 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 398, 294}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 816;
}
);
unicode = 1E84;
},
{
glyphname = Wgrave;
lastChange = "2021-05-11 10:39:46 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 391, 294}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 816;
}
);
unicode = 1E80;
},
{
glyphname = Yacute;
lastChange = "2021-05-11 10:35:14 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 439, 284}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 00DD;
},
{
glyphname = Ycircumflex;
lastChange = "2021-05-11 10:35:14 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 341, 284}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 0176;
},
{
glyphname = Ydotbelow;
lastChange = "2021-05-11 10:39:54 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 560, -16}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EF4;
},
{
glyphname = Ygrave;
lastChange = "2021-05-11 10:35:14 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 386, 284}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EF2;
},
{
glyphname = Yhookabove;
lastChange = "2021-05-11 10:35:14 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 412, 284}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EF6;
},
{
glyphname = Ytilde;
lastChange = "2021-05-11 10:35:14 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 386, 284}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 707;
}
);
unicode = 1EF8;
},
{
glyphname = Zacute;
lastChange = "2021-05-11 10:35:14 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 315, 219}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 546;
}
);
unicode = 0179;
},
{
glyphname = Zcaron;
lastChange = "2021-05-11 10:35:14 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 256, 219}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 546;
}
);
unicode = 017D;
},
{
glyphname = Zdotaccent;
lastChange = "2021-05-11 10:35:14 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 339, 219}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 546;
}
);
unicode = 017B;
},
{
glyphname = abreve;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 91, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 0103;
},
{
glyphname = abreveacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 91, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EAF;
},
{
glyphname = abrevedotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 15, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 91, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EB7;
},
{
glyphname = abrevegrave;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 91, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EB1;
},
{
glyphname = abrevehookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 91, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EB3;
},
{
glyphname = abrevetilde;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 91, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EB5;
},
{
glyphname = acircumflexacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 15, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EA5;
},
{
glyphname = acircumflexdotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 15, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 15, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EAD;
},
{
glyphname = acircumflexgrave;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 15, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EA7;
},
{
glyphname = acircumflexhookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 15, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EA9;
},
{
glyphname = acircumflextilde;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 15, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EAB;
},
{
glyphname = adotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 15, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EA1;
},
{
glyphname = ahookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 86, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 1EA3;
},
{
glyphname = amacron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 5, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 0101;
},
{
glyphname = aogonek;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 82, -1}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 269;
}
);
unicode = 0105;
},
{
glyphname = cacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 56, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 199;
}
);
unicode = 0107;
},
{
glyphname = ccaron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -3, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 199;
}
);
unicode = 010D;
},
{
glyphname = eth;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"132 -3 OFFCURVE",
"169 20 OFFCURVE",
"202 65 CURVE SMOOTH",
"249 131 OFFCURVE",
"273 211 OFFCURVE",
"273 304 CURVE SMOOTH",
"273 357 OFFCURVE",
"262 401 OFFCURVE",
"242 436 CURVE SMOOTH",
"218 480 OFFCURVE",
"181 502 OFFCURVE",
"132 502 CURVE SMOOTH",
"102 502 OFFCURVE",
"87 495 OFFCURVE",
"87 485 CURVE SMOOTH",
"87 481 OFFCURVE",
"91 479 OFFCURVE",
"96 479 CURVE SMOOTH",
"100 479 OFFCURVE",
"105 480 OFFCURVE",
"110 481 CURVE SMOOTH",
"116 482 OFFCURVE",
"121 482 OFFCURVE",
"124 482 CURVE SMOOTH",
"164 482 OFFCURVE",
"195 457 OFFCURVE",
"218 407 CURVE SMOOTH",
"235 366 OFFCURVE",
"245 323 OFFCURVE",
"245 277 CURVE SMOOTH",
"245 236 OFFCURVE",
"238 199 OFFCURVE",
"224 164 CURVE",
"230 183 OFFCURVE",
"233 200 OFFCURVE",
"233 213 CURVE SMOOTH",
"233 244 OFFCURVE",
"220 260 OFFCURVE",
"195 260 CURVE SMOOTH",
"166 260 OFFCURVE",
"136 244 OFFCURVE",
"105 214 CURVE SMOOTH",
"63 174 OFFCURVE",
"42 127 OFFCURVE",
"42 73 CURVE SMOOTH",
"42 22 OFFCURVE",
"58 -3 OFFCURVE",
"92 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"83 2 OFFCURVE",
"76 14 OFFCURVE",
"76 37 CURVE SMOOTH",
"76 90 OFFCURVE",
"94 143 OFFCURVE",
"131 195 CURVE SMOOTH",
"154 228 OFFCURVE",
"175 244 OFFCURVE",
"195 244 CURVE SMOOTH",
"212 244 OFFCURVE",
"221 231 OFFCURVE",
"221 204 CURVE SMOOTH",
"221 178 OFFCURVE",
"213 152 OFFCURVE",
"199 125 CURVE SMOOTH",
"156 42 OFFCURVE",
"122 2 OFFCURVE",
"94 2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"156 382 OFFCURVE",
"161 384 OFFCURVE",
"169 387 CURVE SMOOTH",
"196 399 OFFCURVE",
"217 412 OFFCURVE",
"235 422 CURVE SMOOTH",
"253 432 OFFCURVE",
"270 439 OFFCURVE",
"283 445 CURVE SMOOTH",
"295 451 OFFCURVE",
"301 456 OFFCURVE",
"301 459 CURVE SMOOTH",
"301 459 OFFCURVE",
"301 460 OFFCURVE",
"301 460 CURVE SMOOTH",
"299 464 OFFCURVE",
"291 463 OFFCURVE",
"276 458 CURVE SMOOTH",
"240 446 OFFCURVE",
"213 439 OFFCURVE",
"199 433 CURVE SMOOTH",
"184 427 OFFCURVE",
"172 420 OFFCURVE",
"165 414 CURVE SMOOTH",
"152 403 OFFCURVE",
"146 394 OFFCURVE",
"146 388 CURVE SMOOTH",
"146 384 OFFCURVE",
"148 382 OFFCURVE",
"152 382 CURVE SMOOTH"
);
}
);
width = 245;
}
);
unicode = 00F0;
},
{
glyphname = dcaron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 248, 167}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 306;
}
);
unicode = 010F;
},
{
glyphname = dcroat;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"251.333 -5 OFFCURVE",
"278.333 6.333 OFFCURVE",
"309 29 CURVE SMOOTH",
"341 52.333 OFFCURVE",
"354.667 68.333 OFFCURVE",
"350 77 CURVE",
"349.333 77.667 OFFCURVE",
"337.333 69.333 OFFCURVE",
"314 52 CURVE SMOOTH",
"287.333 32.667 OFFCURVE",
"267.333 23 OFFCURVE",
"254 23 CURVE SMOOTH",
"250 23 OFFCURVE",
"246 23.667 OFFCURVE",
"242 25 CURVE",
"232.667 30.333 OFFCURVE",
"228 48.667 OFFCURVE",
"228 80 CURVE SMOOTH",
"228 123.333 OFFCURVE",
"234.667 164 OFFCURVE",
"248 202 CURVE",
"251 200 OFFCURVE",
"254 199 OFFCURVE",
"256 199 CURVE SMOOTH",
"259 199 OFFCURVE",
"261 202 OFFCURVE",
"261 206 CURVE SMOOTH",
"261 208.667 OFFCURVE",
"259.333 214 OFFCURVE",
"256 222 CURVE",
"258 226 LINE SMOOTH",
"300.667 324.667 OFFCURVE",
"330.333 389.333 OFFCURVE",
"349 424 CURVE",
"351 440.667 OFFCURVE",
"348 449 OFFCURVE",
"340 449 CURVE SMOOTH",
"320.667 449 OFFCURVE",
"300 416.333 OFFCURVE",
"278 351 CURVE SMOOTH",
"255.333 289 OFFCURVE",
"242 253.667 OFFCURVE",
"238 245 CURVE",
"224.667 251 OFFCURVE",
"211.667 254 OFFCURVE",
"199 254 CURVE SMOOTH",
"158.333 254 OFFCURVE",
"118 228 OFFCURVE",
"78 176 CURVE SMOOTH",
"41.333 127.333 OFFCURVE",
"23 82.667 OFFCURVE",
"23 42 CURVE SMOOTH",
"23 15.333 OFFCURVE",
"33.667 0 OFFCURVE",
"55 -4 CURVE SMOOTH",
"73 -6.667 OFFCURVE",
"103.333 16.333 OFFCURVE",
"146 65 CURVE SMOOTH",
"185.333 109.667 OFFCURVE",
"205 133.333 OFFCURVE",
"205 136 CURVE",
"198.333 103.333 OFFCURVE",
"195 74.667 OFFCURVE",
"195 50 CURVE SMOOTH",
"195 20.667 OFFCURVE",
"200.667 3.333 OFFCURVE",
"212 -2 CURVE SMOOTH",
"216.667 -4 OFFCURVE",
"222 -5 OFFCURVE",
"228 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"57 17 OFFCURVE",
"54 21.333 OFFCURVE",
"54 30 CURVE SMOOTH",
"54 40.667 OFFCURVE",
"57.333 54 OFFCURVE",
"64 70 CURVE SMOOTH",
"78 104 OFFCURVE",
"101 139 OFFCURVE",
"133 175 CURVE SMOOTH",
"168.333 214.333 OFFCURVE",
"196 234 OFFCURVE",
"216 234 CURVE SMOOTH",
"222 234 OFFCURVE",
"227 232 OFFCURVE",
"231 228 CURVE SMOOTH",
"233.667 225.333 OFFCURVE",
"218.667 200 OFFCURVE",
"186 152 CURVE SMOOTH",
"151.333 101.333 OFFCURVE",
"122 62.667 OFFCURVE",
"98 40 CURVE SMOOTH",
"81.333 24.667 OFFCURVE",
"69.667 17 OFFCURVE",
"63 17 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"247.62 332.781 OFFCURVE",
"276.615 334.782 OFFCURVE",
"301.381 336.65 CURVE SMOOTH",
"362.994 341.052 LINE SMOOTH",
"381.115 341.586 OFFCURVE",
"390.176 343.987 OFFCURVE",
"390.176 348.256 CURVE SMOOTH",
"390.176 352.525 OFFCURVE",
"381.115 355.46 OFFCURVE",
"362.994 357.061 CURVE SMOOTH",
"318.294 361.863 OFFCURVE",
"287.186 364.265 OFFCURVE",
"269.668 364.265 CURVE SMOOTH",
"250.339 364.265 OFFCURVE",
"235.237 362.664 OFFCURVE",
"224.364 359.462 CURVE SMOOTH",
"200.807 351.991 OFFCURVE",
"189.028 344.521 OFFCURVE",
"189.028 337.05 CURVE SMOOTH",
"189 333 OFFCURVE",
"196 331 OFFCURVE",
"210 331 CURVE SMOOTH",
"211 331 OFFCURVE",
"213 331 OFFCURVE",
"214.398 330.647 CURVE SMOOTH"
);
}
);
width = 306;
}
);
unicode = 0111;
},
{
glyphname = ecaron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 9, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 011B;
},
{
glyphname = ecircumflexacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, -30, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 1EBF;
},
{
glyphname = ecircumflexdotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 4, -8}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -30, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 1EC7;
},
{
glyphname = ecircumflexgrave;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, -30, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 1EC1;
},
{
glyphname = ecircumflexhookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, -30, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 1EC3;
},
{
glyphname = ecircumflextilde;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, -30, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 1EC5;
},
{
glyphname = edotaccent;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 92, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 0117;
},
{
glyphname = edotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 4, -8}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 1EB9;
},
{
glyphname = ehookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 41, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 1EBB;
},
{
glyphname = emacron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -40, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 0113;
},
{
glyphname = eogonek;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -58, -9}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 0119;
},
{
glyphname = etilde;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 15, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 225;
}
);
unicode = 1EBD;
},
{
glyphname = gcommaaccent;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 4, -20}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 258;
}
);
unicode = 0123;
},
{
glyphname = hbar;
lastChange = "2021-05-18 10:52:34 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = "{324, 33}";
type = Stem;
},
{
horizontal = 1;
place = "{432, 13}";
type = Stem;
},
{
place = "{245, 15}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"455 568 OFFCURVE",
"395 589 OFFCURVE",
"339 577 CURVE SMOOTH",
"307 570 OFFCURVE",
"274 555 OFFCURVE",
"245 532 CURVE SMOOTH",
"190 491 OFFCURVE",
"143 425 OFFCURVE",
"107 356 CURVE",
"50 356 LINE",
"36 324 LINE",
"92 324 LINE",
"78 294 OFFCURVE",
"66 263 OFFCURVE",
"58 235 CURVE",
"38 229 OFFCURVE",
"8 214 OFFCURVE",
"7 192 CURVE SMOOTH",
"6 176 OFFCURVE",
"16 178 OFFCURVE",
"18 192 CURVE SMOOTH",
"19 202 OFFCURVE",
"28 211 OFFCURVE",
"51 217 CURVE",
"36 178 OFFCURVE",
"12 38 OFFCURVE",
"14 0 CURVE SMOOTH",
"14 -10 OFFCURVE",
"47 7 OFFCURVE",
"50 50 CURVE",
"79 87 OFFCURVE",
"129 152 OFFCURVE",
"129 147 CURVE",
"128 146 OFFCURVE",
"109 21 OFFCURVE",
"148 2 CURVE SMOOTH",
"201 -25 OFFCURVE",
"281 89 OFFCURVE",
"284 97 CURVE",
"284 97 OFFCURVE",
"282 106 OFFCURVE",
"279 103 CURVE SMOOTH",
"274 98 OFFCURVE",
"247 59 OFFCURVE",
"218 38 CURVE SMOOTH",
"176 7 OFFCURVE",
"164 29 OFFCURVE",
"164 88 CURVE SMOOTH",
"164 116 OFFCURVE",
"170 158 OFFCURVE",
"176 196 CURVE SMOOTH",
"184 243 OFFCURVE",
"141 203 OFFCURVE",
"135 177 CURVE",
"103 134 OFFCURVE",
"76 104 OFFCURVE",
"52 67 CURVE",
"59 112 OFFCURVE",
"72 189 OFFCURVE",
"86 227 CURVE",
"199 263 OFFCURVE",
"340 307 OFFCURVE",
"427 374 CURVE SMOOTH",
"473 409 OFFCURVE",
"496 461 OFFCURVE",
"477 512 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"205 356 LINE",
"132 356 LINE",
"168 442 OFFCURVE",
"222 525 OFFCURVE",
"335 547 CURVE SMOOTH",
"380 556 OFFCURVE",
"449 551 OFFCURVE",
"468 501 CURVE SMOOTH",
"483 462 OFFCURVE",
"451 424 OFFCURVE",
"420 400 CURVE SMOOTH",
"351 348 OFFCURVE",
"176 268 OFFCURVE",
"90 244 CURVE",
"119 324 LINE",
"191 324 LINE"
);
}
);
width = 242;
}
);
note = hbar;
unicode = 0127;
},
{
glyphname = idotless;
lastChange = "2021-05-11 10:34:53 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{68, 0}";
},
{
name = ogonek;
position = "{67, 10}";
},
{
name = top;
position = "{83, 223}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"76.667 1 OFFCURVE",
"95.333 9.333 OFFCURVE",
"118 26 CURVE SMOOTH",
"148 48 OFFCURVE",
"168.667 68 OFFCURVE",
"180 86 CURVE",
"180.667 88.667 OFFCURVE",
"180.667 90.667 OFFCURVE",
"180 92 CURVE",
"178 93.333 OFFCURVE",
"175.667 93 OFFCURVE",
"173 91 CURVE SMOOTH",
"149 69.667 OFFCURVE",
"129.333 53.333 OFFCURVE",
"112 40 CURVE SMOOTH",
"98.667 28.667 OFFCURVE",
"88 23 OFFCURVE",
"80 23 CURVE SMOOTH",
"69.333 23 OFFCURVE",
"64 33.333 OFFCURVE",
"64 54 CURVE SMOOTH",
"64 60.667 OFFCURVE",
"64.667 66.667 OFFCURVE",
"66 76 CURVE SMOOTH",
"74 132 OFFCURVE",
"79 160.667 OFFCURVE",
"81 162 CURVE",
"87.667 162.667 OFFCURVE",
"93.667 170 OFFCURVE",
"99 184 CURVE SMOOTH",
"103.667 194 OFFCURVE",
"106 203.333 OFFCURVE",
"106 212 CURVE",
"107.333 219.333 OFFCURVE",
"99.667 223 OFFCURVE",
"83 223 CURVE SMOOTH",
"70.333 223 OFFCURVE",
"63.667 220.667 OFFCURVE",
"63 216 CURVE",
"47 159 LINE SMOOTH",
"37 124 OFFCURVE",
"32.667 99.333 OFFCURVE",
"30 82 CURVE SMOOTH",
"29.333 77.333 OFFCURVE",
"29 72.833 OFFCURVE",
"29 68.5 CURVE SMOOTH",
"29 57 LINE SMOOTH",
"29 19.667 OFFCURVE",
"40 1 OFFCURVE",
"62 1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012946 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 953 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 15 23 15 39 15 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 15 70 15 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 136;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = idotbelow;
lastChange = "2021-05-11 10:35:00 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 142;
}
);
unicode = 1ECB;
},
{
glyphname = ihookabove;
lastChange = "2021-05-11 10:35:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -30, -51}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 136;
}
);
unicode = 1EC9;
},
{
color = 1;
glyphname = ij;
lastChange = "2021-05-18 10:46:05 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = "{-167, 11}";
type = Stem;
},
{
horizontal = 1;
place = "{290, 39}";
type = Stem;
},
{
place = "{142, 49}";
type = Stem;
},
{
place = "{239, 15}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"70 -191 OFFCURVE",
"109 -157 OFFCURVE",
"129 -125 CURVE SMOOTH",
"173 -53 OFFCURVE",
"187 69 OFFCURVE",
"206 154 CURVE",
"230 158 OFFCURVE",
"234 229 OFFCURVE",
"234 221 CURVE SMOOTH",
"234 225 OFFCURVE",
"217 231 OFFCURVE",
"205 231 CURVE SMOOTH",
"200 231 OFFCURVE",
"196 230 OFFCURVE",
"195 227 CURVE SMOOTH",
"193 221 OFFCURVE",
"185 161 OFFCURVE",
"168 89 CURVE",
"155 75 OFFCURVE",
"125 53 OFFCURVE",
"109 40 CURVE SMOOTH",
"95 28 OFFCURVE",
"84 24 OFFCURVE",
"77 24 CURVE SMOOTH",
"65 24 OFFCURVE",
"61 36 OFFCURVE",
"61 53 CURVE SMOOTH",
"61 60 OFFCURVE",
"62 68 OFFCURVE",
"63 76 CURVE SMOOTH",
"68 117 OFFCURVE",
"73 161 OFFCURVE",
"78 162 CURVE SMOOTH",
"93 165 OFFCURVE",
"103 202 OFFCURVE",
"103 212 CURVE SMOOTH",
"103 220 OFFCURVE",
"91 223 OFFCURVE",
"80 223 CURVE SMOOTH",
"70 223 OFFCURVE",
"61 221 OFFCURVE",
"60 216 CURVE SMOOTH",
"56 202 OFFCURVE",
"31 122 OFFCURVE",
"27 82 CURVE SMOOTH",
"26 73 OFFCURVE",
"26 64 OFFCURVE",
"26 57 CURVE SMOOTH",
"26 18 OFFCURVE",
"38 1 OFFCURVE",
"58 1 CURVE SMOOTH",
"73 1 OFFCURVE",
"92 10 OFFCURVE",
"114 26 CURVE SMOOTH",
"133 40 OFFCURVE",
"152 57 OFFCURVE",
"164 70 CURVE",
"145 -10 OFFCURVE",
"115 -102 OFFCURVE",
"75 -149 CURVE SMOOTH",
"58 -169 OFFCURVE",
"41 -180 OFFCURVE",
"20 -180 CURVE SMOOTH",
"-2 -180 OFFCURVE",
"-13 -163 OFFCURVE",
"-13 -151 CURVE SMOOTH",
"-13 -146 OFFCURVE",
"-15 -141 OFFCURVE",
"-17 -141 CURVE SMOOTH",
"-20 -141 OFFCURVE",
"-23 -147 OFFCURVE",
"-23 -162 CURVE SMOOTH",
"-23 -174 OFFCURVE",
"-19 -183 OFFCURVE",
"-10 -185 CURVE SMOOTH",
"1 -189 OFFCURVE",
"12 -191 OFFCURVE",
"23 -191 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 265 OFFCURVE",
"109 266 OFFCURVE",
"111 266 CURVE SMOOTH",
"125 270 OFFCURVE",
"145 297 OFFCURVE",
"145 303 CURVE SMOOTH",
"145 313 OFFCURVE",
"112 304 OFFCURVE",
"81 278 CURVE SMOOTH",
"75 273 OFFCURVE",
"92 265 OFFCURVE",
"105 265 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"239 265 OFFCURVE",
"241 266 OFFCURVE",
"243 266 CURVE SMOOTH",
"257 270 OFFCURVE",
"278 297 OFFCURVE",
"278 303 CURVE SMOOTH",
"278 313 OFFCURVE",
"245 304 OFFCURVE",
"213 278 CURVE SMOOTH",
"207 273 OFFCURVE",
"225 265 OFFCURVE",
"237 265 CURVE SMOOTH"
);
}
);
width = 272;
}
);
note = ij;
unicode = 0133;
},
{
glyphname = imacron;
lastChange = "2021-05-11 10:35:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -111, -51}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 136;
}
);
unicode = 012B;
},
{
glyphname = iogonek;
lastChange = "2021-05-11 10:35:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 21, -51}";
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -72, 5}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 136;
}
);
unicode = 012F;
},
{
glyphname = itilde;
lastChange = "2021-05-11 10:35:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -56, -51}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 136;
}
);
unicode = 0129;
},
{
glyphname = jdotless;
lastChange = "2021-05-18 10:48:22 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{69, -500}";
},
{
name = top;
position = "{105, 230}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-47.667 -191 OFFCURVE",
"-12.333 -169 OFFCURVE",
"15 -125 CURVE SMOOTH",
"33.667 -95 OFFCURVE",
"49.667 -50 OFFCURVE",
"63 10 CURVE SMOOTH",
"68.333 34 OFFCURVE",
"73.333 58 OFFCURVE",
"78 82 CURVE SMOOTH",
"92 154 LINE",
"100.667 156 OFFCURVE",
"107.667 166 OFFCURVE",
"113 184 CURVE SMOOTH",
"114.333 190 OFFCURVE",
"115 196 OFFCURVE",
"116.5 202 CURVE SMOOTH",
"120 220 LINE",
"121.333 222 OFFCURVE",
"118.5 224.333 OFFCURVE",
"111.5 227 CURVE SMOOTH",
"104.5 229.667 OFFCURVE",
"97.667 231 OFFCURVE",
"91 231 CURVE SMOOTH",
"85 231 OFFCURVE",
"82 230 OFFCURVE",
"81 227 CURVE SMOOTH",
"67 156.5 LINE SMOOTH",
"62 133 OFFCURVE",
"57.333 109.333 OFFCURVE",
"52 86 CURVE SMOOTH",
"34.667 10.667 OFFCURVE",
"16.667 -48.333 OFFCURVE",
"-2 -91 CURVE SMOOTH",
"-30 -150 OFFCURVE",
"-60 -180 OFFCURVE",
"-93 -180 CURVE SMOOTH",
"-117 -180 OFFCURVE",
"-127 -137 OFFCURVE",
"-131 -141 CURVE",
"-133.667 -141 OFFCURVE",
"-135.333 -144.333 OFFCURVE",
"-136 -151 CURVE SMOOTH",
"-138.667 -169.667 OFFCURVE",
"-134.667 -181 OFFCURVE",
"-124 -185 CURVE SMOOTH",
"-113.333 -189 OFFCURVE",
"-102.333 -191 OFFCURVE",
"-91 -191 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0129 25 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 138;
}
);
note = j;
unicode = 0237;
},
{
glyphname = jcircumflex;
lastChange = "2021-05-18 10:48:26 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -79, -44}";
}
);
hints = (
{
horizontal = 1;
place = "{-167, 11}";
type = Stem;
},
{
place = "{97, 15}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 138;
}
);
note = jcircumflex;
unicode = 0135;
},
{
glyphname = kcommaaccent;
lastChange = "2021-05-14 17:38:46 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -101, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 207;
}
);
unicode = 0137;
},
{
glyphname = kgreenlandic;
lastChange = "2021-05-18 10:52:56 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = "{401, 13}";
type = Stem;
},
{
place = "{39, 23}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"227 412 OFFCURVE",
"189 412 OFFCURVE",
"154 394 CURVE SMOOTH",
"94 363 OFFCURVE",
"43 292 OFFCURVE",
"28 208 CURVE SMOOTH",
"19 159 OFFCURVE",
"3 61 OFFCURVE",
"3 22 CURVE",
"10 19 OFFCURVE",
"37 -20 OFFCURVE",
"37 6 CURVE SMOOTH",
"37 11 LINE",
"43 51 OFFCURVE",
"59 88 OFFCURVE",
"82 122 CURVE",
"100 85 OFFCURVE",
"128 46 OFFCURVE",
"135 37 CURVE SMOOTH",
"159 7 OFFCURVE",
"169 7 OFFCURVE",
"187 0 CURVE SMOOTH",
"209 -8 OFFCURVE",
"257 3 OFFCURVE",
"244 5 CURVE SMOOTH",
"196 16 OFFCURVE",
"124 85 OFFCURVE",
"94 139 CURVE",
"114 165 OFFCURVE",
"136 189 OFFCURVE",
"156 209 CURVE SMOOTH",
"210 260 OFFCURVE",
"261 283 OFFCURVE",
"271 265 CURVE SMOOTH",
"274 260 OFFCURVE",
"282 265 OFFCURVE",
"279 270 CURVE SMOOTH",
"263 299 OFFCURVE",
"192 289 OFFCURVE",
"141 240 CURVE SMOOTH",
"121 220 OFFCURVE",
"100 193 OFFCURVE",
"82 163 CURVE",
"82 164 LINE",
"71 196 OFFCURVE",
"63 177 OFFCURVE",
"68 156 CURVE SMOOTH",
"69 153 OFFCURVE",
"70 148 OFFCURVE",
"72 144 CURVE",
"59 121 OFFCURVE",
"49 96 OFFCURVE",
"41 71 CURVE",
"58 220 OFFCURVE",
"95 384 OFFCURVE",
"189 385 CURVE SMOOTH",
"214 386 OFFCURVE",
"232 378 OFFCURVE",
"244 367 CURVE SMOOTH",
"248 364 OFFCURVE",
"262 359 OFFCURVE",
"250 377 CURVE SMOOTH"
);
}
);
width = 207;
}
);
note = kgreenlandic;
unicode = 0138;
},
{
glyphname = lacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 163, 247}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 166;
}
);
unicode = 013A;
},
{
glyphname = lcaron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 178, 228}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 166;
}
);
unicode = 013E;
},
{
glyphname = lcommaaccent;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -122, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 166;
}
);
unicode = 013C;
},
{
color = 1;
glyphname = ldot;
lastChange = "2021-05-18 10:46:05 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{83, 0}";
},
{
name = center;
position = "{83, 477}";
},
{
name = top;
position = "{249, 521}";
},
{
name = topright;
position = "{321, 502}";
}
);
components = (
{
name = l;
},
{
name = periodcentered;
transform = "{0.4363, 0, 0, 0.4363, 88, 49}";
}
);
hints = (
{
horizontal = 1;
place = "{-5, 13}";
type = Stem;
},
{
horizontal = 1;
place = "{423, 13}";
type = Stem;
},
{
horizontal = 1;
place = "{-20, 60}";
type = Stem;
},
{
place = "{61, 64}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 166;
}
);
note = ldot;
unicode = 0140;
},
{
glyphname = lslash;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"95 -5 OFFCURVE",
"118 3 OFFCURVE",
"147 18 CURVE SMOOTH",
"172 31 OFFCURVE",
"190 45 OFFCURVE",
"202 59 CURVE SMOOTH",
"206 64 OFFCURVE",
"208 70 OFFCURVE",
"208 77 CURVE SMOOTH",
"208 80 OFFCURVE",
"207 81 OFFCURVE",
"206 81 CURVE SMOOTH",
"203 81 OFFCURVE",
"200 78 OFFCURVE",
"195 72 CURVE SMOOTH",
"183 57 OFFCURVE",
"166 43 OFFCURVE",
"145 31 CURVE SMOOTH",
"124 19 OFFCURVE",
"105 13 OFFCURVE",
"90 13 CURVE SMOOTH",
"70 13 OFFCURVE",
"60 28 OFFCURVE",
"60 57 CURVE SMOOTH",
"60 88 OFFCURVE",
"68 129 OFFCURVE",
"83 181 CURVE",
"143 241 OFFCURVE",
"184 286 OFFCURVE",
"211 319 CURVE SMOOTH",
"258 381 OFFCURVE",
"282 439 OFFCURVE",
"282 488 CURVE SMOOTH",
"282 510 OFFCURVE",
"271 521 OFFCURVE",
"249 521 CURVE SMOOTH",
"233 521 OFFCURVE",
"218 515 OFFCURVE",
"203 503 CURVE SMOOTH",
"137 448 OFFCURVE",
"84 337 OFFCURVE",
"45 171 CURVE",
"33 158 OFFCURVE",
"27 148 OFFCURVE",
"27 143 CURVE SMOOTH",
"27 140 OFFCURVE",
"29 138 OFFCURVE",
"34 138 CURVE SMOOTH",
"35 138 OFFCURVE",
"36 138 OFFCURVE",
"37 138 CURVE",
"31 109 OFFCURVE",
"28 84 OFFCURVE",
"28 65 CURVE SMOOTH",
"28 18 OFFCURVE",
"45 -5 OFFCURVE",
"78 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-21 71 OFFCURVE",
"-14 71 OFFCURVE",
"2 78 CURVE SMOOTH",
"30 87 OFFCURVE",
"54 100 OFFCURVE",
"74 109 CURVE SMOOTH",
"93 119 OFFCURVE",
"111 125 OFFCURVE",
"125 131 CURVE SMOOTH",
"140 137 OFFCURVE",
"147 141 OFFCURVE",
"146 144 CURVE SMOOTH",
"145 148 OFFCURVE",
"136 147 OFFCURVE",
"120 142 CURVE SMOOTH",
"82 131 OFFCURVE",
"55 125 OFFCURVE",
"40 119 CURVE SMOOTH",
"23 113 OFFCURVE",
"10 107 OFFCURVE",
"3 101 CURVE SMOOTH",
"-12 88 OFFCURVE",
"-21 80 OFFCURVE",
"-21 75 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"97 243 OFFCURVE",
"115 291 OFFCURVE",
"142 350 CURVE SMOOTH",
"171 414 OFFCURVE",
"195 455 OFFCURVE",
"214 478 CURVE SMOOTH",
"229 497 OFFCURVE",
"242 506 OFFCURVE",
"253 506 CURVE SMOOTH",
"262 506 OFFCURVE",
"267 498 OFFCURVE",
"267 483 CURVE SMOOTH",
"267 482 OFFCURVE",
"267 481 OFFCURVE",
"267 479 CURVE SMOOTH",
"266 444 OFFCURVE",
"242 394 OFFCURVE",
"195 329 CURVE SMOOTH",
"158 278 OFFCURVE",
"122 236 OFFCURVE",
"86 203 CURVE"
);
}
);
width = 166;
}
);
unicode = 0142;
},
{
glyphname = nacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 56, -36}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 253;
}
);
unicode = 0144;
},
{
glyphname = ncaron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -3, -36}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 253;
}
);
unicode = 0148;
},
{
glyphname = ncommaaccent;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -109, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 253;
}
);
unicode = 0146;
},
{
glyphname = eng;
lastChange = "2021-05-11 10:01:47 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"86 -146 OFFCURVE",
"121 -124 OFFCURVE",
"149 -80 CURVE SMOOTH",
"168 -50 OFFCURVE",
"186 16 OFFCURVE",
"209 123 CURVE SMOOTH",
"213 140 OFFCURVE",
"220 163 OFFCURVE",
"230 192 CURVE SMOOTH",
"236 207 OFFCURVE",
"238 218 OFFCURVE",
"238 225 CURVE SMOOTH",
"238 234 OFFCURVE",
"231 238 OFFCURVE",
"213 238 CURVE SMOOTH",
"203 238 OFFCURVE",
"197 236 OFFCURVE",
"194 231 CURVE SMOOTH",
"149 161 OFFCURVE",
"107 108 OFFCURVE",
"67 71 CURVE",
"72 96 OFFCURVE",
"78 121 OFFCURVE",
"83 144 CURVE SMOOTH",
"88 167 OFFCURVE",
"92 190 OFFCURVE",
"96 213 CURVE SMOOTH",
"98 224 OFFCURVE",
"94 230 OFFCURVE",
"84 230 CURVE SMOOTH",
"67 230 OFFCURVE",
"45 212 OFFCURVE",
"45 195 CURVE SMOOTH",
"45 187 OFFCURVE",
"47 178 OFFCURVE",
"47 169 CURVE SMOOTH",
"47 143 OFFCURVE",
"42 111 OFFCURVE",
"33 72 CURVE SMOOTH",
"17 10 LINE SMOOTH",
"15 4 OFFCURVE",
"17 1 OFFCURVE",
"23 1 CURVE SMOOTH",
"40 1 OFFCURVE",
"52 12 OFFCURVE",
"60 33 CURVE SMOOTH",
"64 43 OFFCURVE",
"83 68 OFFCURVE",
"116 108 CURVE SMOOTH",
"186 188 LINE",
"170 103 OFFCURVE",
"155 7 OFFCURVE",
"132 -46 CURVE SMOOTH",
"106 -105 OFFCURVE",
"75 -135 OFFCURVE",
"41 -135 CURVE SMOOTH",
"18 -135 OFFCURVE",
"7 -92 OFFCURVE",
"3 -96 CURVE",
"0 -96 OFFCURVE",
"-1 -99 OFFCURVE",
"-2 -106 CURVE SMOOTH",
"-5 -125 OFFCURVE",
"-1 -136 OFFCURVE",
"10 -140 CURVE SMOOTH",
"21 -144 OFFCURVE",
"32 -146 OFFCURVE",
"43 -146 CURVE SMOOTH"
);
}
);
width = 253;
}
);
unicode = 014B;
},
{
glyphname = ocircumflexacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, -38, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1ED1;
},
{
glyphname = ocircumflexdotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 0, -5}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -38, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1ED9;
},
{
glyphname = ocircumflexgrave;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, -38, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1ED3;
},
{
glyphname = ocircumflexhookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, -38, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1ED5;
},
{
glyphname = ocircumflextilde;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, -38, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1ED7;
},
{
glyphname = odotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 0, -5}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1ECD;
},
{
glyphname = ohookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 33, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1ECF;
},
{
glyphname = ohorn;
lastChange = "2021-05-11 10:54:41 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 70, -41}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 01A1;
},
{
glyphname = ohornacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 60, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1EDB;
},
{
glyphname = ohorndotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 0, -5}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1EE3;
},
{
glyphname = ohorngrave;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 7, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1EDD;
},
{
glyphname = ohornhookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 33, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1EDF;
},
{
glyphname = ohorntilde;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 7, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 1EE1;
},
{
glyphname = ohungarumlaut;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, -59, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 0151;
},
{
glyphname = omacron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -48, -21}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 235;
}
);
unicode = 014D;
},
{
glyphname = thorn;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"27 -247 OFFCURVE",
"29 -246 OFFCURVE",
"29 -244 CURVE SMOOTH",
"29 -241 OFFCURVE",
"26 -239 OFFCURVE",
"19 -238 CURVE SMOOTH",
"2 -235 OFFCURVE",
"-7 -221 OFFCURVE",
"-7 -197 CURVE SMOOTH",
"-7 -194 OFFCURVE",
"-5 -178 OFFCURVE",
"-1 -149 CURVE SMOOTH",
"4 -112 OFFCURVE",
"24 -40 OFFCURVE",
"59 68 CURVE SMOOTH",
"92 171 OFFCURVE",
"110 221 OFFCURVE",
"112 220 CURVE SMOOTH",
"123 215 OFFCURVE",
"135 201 OFFCURVE",
"146 178 CURVE SMOOTH",
"157 156 OFFCURVE",
"162 138 OFFCURVE",
"162 123 CURVE",
"143 107 OFFCURVE",
"128 95 OFFCURVE",
"119 87 CURVE SMOOTH",
"103 73 LINE",
"87 54 OFFCURVE",
"79 36 OFFCURVE",
"79 19 CURVE SMOOTH",
"79 4 OFFCURVE",
"87 -4 OFFCURVE",
"102 -4 CURVE SMOOTH",
"106 -4 OFFCURVE",
"111 -3 OFFCURVE",
"117 -2 CURVE SMOOTH",
"167 11 OFFCURVE",
"194 52 OFFCURVE",
"197 123 CURVE",
"239 149 LINE SMOOTH",
"244 152 OFFCURVE",
"247 155 OFFCURVE",
"249 159 CURVE SMOOTH",
"252 164 OFFCURVE",
"251 166 OFFCURVE",
"248 166 CURVE SMOOTH",
"250 166 OFFCURVE",
"242 160 OFFCURVE",
"223 147 CURVE SMOOTH",
"212 140 OFFCURVE",
"205 136 OFFCURVE",
"200 136 CURVE SMOOTH",
"197 136 OFFCURVE",
"196 138 OFFCURVE",
"196 141 CURVE",
"189 189 OFFCURVE",
"165 226 OFFCURVE",
"125 251 CURVE",
"128 262 OFFCURVE",
"179 410 OFFCURVE",
"182 421 CURVE SMOOTH",
"191 453 LINE SMOOTH",
"194 464 OFFCURVE",
"180 479 OFFCURVE",
"153 488 CURVE SMOOTH",
"150 489 OFFCURVE",
"147 490 OFFCURVE",
"145 490 CURVE SMOOTH",
"142 490 OFFCURVE",
"140 488 OFFCURVE",
"140 485 CURVE",
"143 482 LINE SMOOTH",
"152 473 OFFCURVE",
"155 464 OFFCURVE",
"155 458 CURVE SMOOTH",
"155 457 OFFCURVE",
"155 456 OFFCURVE",
"155 455 CURVE SMOOTH",
"152 434 OFFCURVE",
"146 416 OFFCURVE",
"92 261 CURVE",
"80 258 OFFCURVE",
"72 250 OFFCURVE",
"69 238 CURVE",
"68 236 OFFCURVE",
"72 233 OFFCURVE",
"81 228 CURVE",
"18 53 OFFCURVE",
"-21 -70 OFFCURVE",
"-36 -140 CURVE SMOOTH",
"-37 -148 OFFCURVE",
"-38 -156 OFFCURVE",
"-38 -165 CURVE SMOOTH",
"-38 -205 OFFCURVE",
"-20 -241 OFFCURVE",
"8 -245 CURVE SMOOTH",
"14 -246 OFFCURVE",
"19 -247 OFFCURVE",
"23 -247 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 17 OFFCURVE",
"101 21 OFFCURVE",
"101 29 CURVE SMOOTH",
"101 35 OFFCURVE",
"104 43 OFFCURVE",
"109 52 CURVE SMOOTH",
"118 67 OFFCURVE",
"135 85 OFFCURVE",
"162 109 CURVE",
"163 105 OFFCURVE",
"163 101 OFFCURVE",
"163 96 CURVE SMOOTH",
"163 86 OFFCURVE",
"161 74 OFFCURVE",
"156 60 CURVE SMOOTH",
"146 31 OFFCURVE",
"132 17 OFFCURVE",
"113 17 CURVE SMOOTH"
);
}
);
width = 226;
}
);
unicode = 00FE;
},
{
glyphname = racute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -3, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 165;
}
);
unicode = 0155;
},
{
glyphname = rcaron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -62, -25}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 165;
}
);
unicode = 0159;
},
{
glyphname = rcommaaccent;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -188, -2}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 165;
}
);
unicode = 0157;
},
{
glyphname = sacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 50, -17}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 198;
}
);
unicode = 015B;
},
{
glyphname = scaron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -9, -17}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 198;
}
);
unicode = 0161;
},
{
glyphname = scedilla;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -127, -13}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 198;
}
);
unicode = 015F;
},
{
glyphname = tbar;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"97 -5 OFFCURVE",
"127 8 OFFCURVE",
"163 34 CURVE SMOOTH",
"198 58 OFFCURVE",
"215 75 OFFCURVE",
"215 84 CURVE",
"214 87 OFFCURVE",
"213 88 OFFCURVE",
"212 88 CURVE SMOOTH",
"209 88 OFFCURVE",
"200 82 OFFCURVE",
"187 71 CURVE SMOOTH",
"170 58 OFFCURVE",
"158 49 OFFCURVE",
"150 44 CURVE SMOOTH",
"117 26 OFFCURVE",
"94 17 OFFCURVE",
"83 17 CURVE SMOOTH",
"68 17 OFFCURVE",
"61 27 OFFCURVE",
"61 47 CURVE SMOOTH",
"61 56 OFFCURVE",
"67 86 OFFCURVE",
"79 135 CURVE SMOOTH",
"92 190 OFFCURVE",
"103 218 OFFCURVE",
"110 218 CURVE",
"113 219 OFFCURVE",
"119 220 OFFCURVE",
"129 221 CURVE SMOOTH",
"139 222 OFFCURVE",
"153 224 OFFCURVE",
"170 225 CURVE SMOOTH",
"202 228 OFFCURVE",
"218 230 OFFCURVE",
"218 233 CURVE SMOOTH",
"217 239 OFFCURVE",
"198 242 OFFCURVE",
"161 242 CURVE SMOOTH",
"148 242 OFFCURVE",
"133 242 OFFCURVE",
"116 241 CURVE",
"165 339 LINE",
"166 340 OFFCURVE",
"166 342 OFFCURVE",
"166 345 CURVE SMOOTH",
"166 361 OFFCURVE",
"149 384 OFFCURVE",
"138 384 CURVE SMOOTH",
"133 384 OFFCURVE",
"131 382 OFFCURVE",
"130 378 CURVE SMOOTH",
"110 322 OFFCURVE",
"95 276 OFFCURVE",
"84 241 CURVE",
"37 238 OFFCURVE",
"12 235 OFFCURVE",
"7 233 CURVE SMOOTH",
"1 231 OFFCURVE",
"-2 226 OFFCURVE",
"-2 218 CURVE SMOOTH",
"-2 211 OFFCURVE",
"0 208 OFFCURVE",
"2 208 CURVE SMOOTH",
"2 208 OFFCURVE",
"3 208 OFFCURVE",
"3 208 CURVE SMOOTH",
"38 214 OFFCURVE",
"62 217 OFFCURVE",
"77 217 CURVE",
"72 204 LINE SMOOTH",
"69 195 OFFCURVE",
"65 181 OFFCURVE",
"58 164 CURVE SMOOTH",
"43 123 OFFCURVE",
"35 94 OFFCURVE",
"32 78 CURVE SMOOTH",
"29 61 OFFCURVE",
"27 48 OFFCURVE",
"27 37 CURVE SMOOTH",
"27 20 OFFCURVE",
"31 9 OFFCURVE",
"39 3 CURVE SMOOTH",
"44 -1 OFFCURVE",
"56 -5 OFFCURVE",
"74 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"8 159 OFFCURVE",
"12 159 OFFCURVE",
"15 159 CURVE SMOOTH",
"43 161 OFFCURVE",
"67 161 OFFCURVE",
"88 162 CURVE SMOOTH",
"108 163 OFFCURVE",
"126 164 OFFCURVE",
"139 164 CURVE SMOOTH",
"154 164 OFFCURVE",
"162 166 OFFCURVE",
"162 168 CURVE SMOOTH",
"162 170 OFFCURVE",
"154 171 OFFCURVE",
"139 172 CURVE SMOOTH",
"102 174 OFFCURVE",
"76 176 OFFCURVE",
"61 176 CURVE SMOOTH",
"45 176 OFFCURVE",
"33 175 OFFCURVE",
"23 174 CURVE SMOOTH",
"4 172 OFFCURVE",
"-6 166 OFFCURVE",
"-6 162 CURVE SMOOTH",
"-6 160 OFFCURVE",
"-2 159 OFFCURVE",
"6 159 CURVE SMOOTH"
);
}
);
width = 167;
}
);
unicode = 0167;
},
{
glyphname = tcaron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 84, 95}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 167;
}
);
unicode = 0165;
},
{
glyphname = tcedilla;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -97, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 167;
}
);
unicode = 0163;
},
{
glyphname = udotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 1EE5;
},
{
glyphname = uhookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 81, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 1EE7;
},
{
glyphname = uhorn;
lastChange = "2021-05-11 10:54:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 125, -115}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 01B0;
},
{
glyphname = uhornacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 108, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 1EE9;
},
{
glyphname = uhorndotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 1EF1;
},
{
glyphname = uhorngrave;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 55, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 1EEB;
},
{
glyphname = uhornhookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 81, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 1EED;
},
{
glyphname = uhorntilde;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 55, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 1EEF;
},
{
glyphname = uhungarumlaut;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, -11, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 0171;
},
{
glyphname = umacron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 0, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 016B;
},
{
glyphname = uogonek;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 105, 0}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 0173;
},
{
glyphname = uring;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 69, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 016F;
},
{
glyphname = utilde;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 55, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 281;
}
);
unicode = 0169;
},
{
glyphname = wacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 133, -43}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 407;
}
);
unicode = 1E83;
},
{
glyphname = wcircumflex;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 35, -43}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 407;
}
);
unicode = 0175;
},
{
glyphname = wdieresis;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 87, -43}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 407;
}
);
unicode = 1E85;
},
{
glyphname = wgrave;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 80, -43}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 407;
}
);
unicode = 1E81;
},
{
glyphname = yacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 35, -58}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 242;
}
);
unicode = 00FD;
},
{
glyphname = ycircumflex;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -63, -58}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 242;
}
);
unicode = 0177;
},
{
glyphname = ydotbelow;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 134, -15}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 242;
}
);
unicode = 1EF5;
},
{
glyphname = ygrave;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -18, -58}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 242;
}
);
unicode = 1EF3;
},
{
glyphname = yhookabove;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 8, -58}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 242;
}
);
unicode = 1EF7;
},
{
glyphname = ytilde;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -18, -58}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 242;
}
);
unicode = 1EF9;
},
{
glyphname = zacute;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 80, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 216;
}
);
unicode = 017A;
},
{
glyphname = zcaron;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 21, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 216;
}
);
unicode = 017E;
},
{
glyphname = zdotaccent;
lastChange = "2021-05-11 10:34:36 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 104, -34}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 216;
}
);
unicode = 017C;
},
{
color = 4;
glyphname = Omega;
lastChange = "2021-05-18 10:46:26 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"364 -8 OFFCURVE",
"366 -7 OFFCURVE",
"368 -6 CURVE",
"368 -5 LINE SMOOTH",
"368 -4.333 OFFCURVE",
"368.333 -4 OFFCURVE",
"369 -4 CURVE",
"378 2 OFFCURVE",
"388 4 OFFCURVE",
"397 4 CURVE SMOOTH",
"420 4 OFFCURVE",
"443 -8 OFFCURVE",
"473 -8 CURVE SMOOTH",
"499.667 -8 OFFCURVE",
"527 4 OFFCURVE",
"547 60 CURVE SMOOTH",
"548 65 OFFCURVE",
"549 69 OFFCURVE",
"549 72 CURVE SMOOTH",
"549 76 OFFCURVE",
"548 78 OFFCURVE",
"546 78 CURVE SMOOTH",
"543 78 OFFCURVE",
"538 72 OFFCURVE",
"534 62 CURVE SMOOTH",
"520.667 27.333 OFFCURVE",
"502.667 17 OFFCURVE",
"480 17 CURVE SMOOTH",
"466.667 17 OFFCURVE",
"452.833 19.333 OFFCURVE",
"438.5 24 CURVE SMOOTH",
"424.167 28.667 OFFCURVE",
"410.333 31.667 OFFCURVE",
"397 33 CURVE",
"410.333 54.333 OFFCURVE",
"425.167 76.833 OFFCURVE",
"441.5 100.5 CURVE SMOOTH",
"457.833 124.167 OFFCURVE",
"471.667 148.667 OFFCURVE",
"483 174 CURVE SMOOTH",
"500.333 210 OFFCURVE",
"516.333 263.667 OFFCURVE",
"527 305 CURVE SMOOTH",
"533.667 337 OFFCURVE",
"537 368.667 OFFCURVE",
"537 398 CURVE SMOOTH",
"537 484.667 OFFCURVE",
"506.667 549.667 OFFCURVE",
"460 587 CURVE SMOOTH",
"429.333 612.333 OFFCURVE",
"389 625 OFFCURVE",
"349 625 CURVE SMOOTH",
"274.333 625 OFFCURVE",
"196.667 584 OFFCURVE",
"150 516 CURVE SMOOTH",
"115.333 465.333 OFFCURVE",
"104 406 OFFCURVE",
"104 342 CURVE SMOOTH",
"104 230.386 OFFCURVE",
"146.411 109.384 OFFCURVE",
"202 26 CURVE",
"184.736 26 OFFCURVE",
"99.046 55 OFFCURVE",
"67 55 CURVE SMOOTH",
"37 55 OFFCURVE",
"15 45 OFFCURVE",
"15 16 CURVE SMOOTH",
"15 3 OFFCURVE",
"23 -5 OFFCURVE",
"29 -5 CURVE SMOOTH",
"31 -5 OFFCURVE",
"33 -3 OFFCURVE",
"33 1 CURVE SMOOTH",
"33 7.667 OFFCURVE",
"34.667 21.333 OFFCURVE",
"44 24 CURVE SMOOTH",
"50 25 OFFCURVE",
"56 26 OFFCURVE",
"62 26 CURVE SMOOTH",
"101 26 OFFCURVE",
"143 7 OFFCURVE",
"184 7 CURVE SMOOTH",
"195 7 OFFCURVE",
"206 8 OFFCURVE",
"217 12 CURVE",
"223 16 OFFCURVE",
"226 21 OFFCURVE",
"226 27 CURVE SMOOTH",
"226 31 OFFCURVE",
"224 36 OFFCURVE",
"221 40 CURVE SMOOTH",
"173.517 109.828 OFFCURVE",
"143 229.576 OFFCURVE",
"143 326 CURVE SMOOTH",
"143 378 OFFCURVE",
"151.333 426 OFFCURVE",
"170 462 CURVE SMOOTH",
"207.333 532.667 OFFCURVE",
"272.667 566 OFFCURVE",
"334 566 CURVE SMOOTH",
"403.793 566 OFFCURVE",
"467.959 522.742 OFFCURVE",
"486 448 CURVE SMOOTH",
"491.333 425.333 OFFCURVE",
"494 401.667 OFFCURVE",
"494 375 CURVE SMOOTH",
"494 250.584 OFFCURVE",
"431.298 82.52 OFFCURVE",
"353 21 CURVE",
"352 17 OFFCURVE",
"351 13 OFFCURVE",
"351 10 CURVE SMOOTH",
"351 0 OFFCURVE",
"355 -8 OFFCURVE",
"362 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01297 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012170 75 186 75 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 75 121 75 137 75 153 75 169 75 185 75 201 75 217 75 233 75 249 75 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 75 25 75 41 75 57 75 73 75 89 75 105 75 121 75 137 75 153 75 169 75 185 75 201 75 217 75 233 75 249 75 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0129 75 25 75 41 75 57 75 73 75 89 75 105 75 121 75 137 75 153 75 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01221 26 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01289 950 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 10 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012165 89 181 89 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01247 26 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01298 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01250 947 59 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01232 83 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 632;
}
);
note = uni03A9;
unicode = 03A9;
},
{
glyphname = foursuperior;
lastChange = "2021-05-11 10:45:21 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"123 227 LINE SMOOTH",
"125 230 OFFCURVE",
"127 234 OFFCURVE",
"129 239 CURVE SMOOTH",
"150 283 LINE SMOOTH",
"173 332 OFFCURVE",
"190 366 OFFCURVE",
"201 386 CURVE",
"205 386 OFFCURVE",
"208 386 OFFCURVE",
"210 387 CURVE",
"217 387 LINE SMOOTH",
"224 387 OFFCURVE",
"233 386 OFFCURVE",
"242 384 CURVE SMOOTH",
"262 380 LINE",
"264 382 LINE",
"264 380 LINE",
"269 380 OFFCURVE",
"272 383 OFFCURVE",
"272 388 CURVE SMOOTH",
"272 393 OFFCURVE",
"255 399 OFFCURVE",
"221 406 CURVE SMOOTH",
"215 408 LINE",
"215 413 OFFCURVE",
"230 439 OFFCURVE",
"259 486 CURVE SMOOTH",
"290 534 OFFCURVE",
"308 561 OFFCURVE",
"313 566 CURVE",
"313 578 LINE SMOOTH",
"313 600 OFFCURVE",
"307 611 OFFCURVE",
"296 611 CURVE",
"267 574 OFFCURVE",
"229 539 OFFCURVE",
"184 506 CURVE SMOOTH",
"149 479 OFFCURVE",
"107 450 OFFCURVE",
"58 417 CURVE SMOOTH",
"42 407 LINE SMOOTH",
"37 404 OFFCURVE",
"33 401 OFFCURVE",
"30 400 CURVE",
"16 390 OFFCURVE",
"9 383 OFFCURVE",
"9 378 CURVE SMOOTH",
"9 369 OFFCURVE",
"13 365 OFFCURVE",
"21 365 CURVE",
"67 380 OFFCURVE",
"115 388 OFFCURVE",
"166 388 CURVE SMOOTH",
"170 388 OFFCURVE",
"173 388 OFFCURVE",
"174 387 CURVE",
"136 306 LINE SMOOTH",
"117 266 OFFCURVE",
"108 241 OFFCURVE",
"108 232 CURVE SMOOTH",
"108 223 OFFCURVE",
"111 219 OFFCURVE",
"118 219 CURVE"
);
},
{
closed = 1;
nodes = (
"183 412 OFFCURVE",
"166 412 OFFCURVE",
"134 412 CURVE SMOOTH",
"87 412 LINE",
"163 472 OFFCURVE",
"220 516 OFFCURVE",
"259 545 CURVE",
"216 456 OFFCURVE",
"191 411 OFFCURVE",
"184 411 CURVE"
);
}
);
width = 310;
}
);
leftMetricsKey = four;
rightMetricsKey = four;
unicode = 2074;
},
{
glyphname = softhyphen;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 253;
}
);
unicode = 00AD;
},
{
color = 4;
glyphname = guillemetleft;
lastChange = "2021-05-18 10:46:26 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"152 22 LINE",
"157 31 LINE",
"158 157 LINE",
"236 212 LINE SMOOTH",
"256.667 226.667 OFFCURVE",
"272.833 239.167 OFFCURVE",
"284.5 249.5 CURVE SMOOTH",
"296.167 259.833 OFFCURVE",
"303.667 268 OFFCURVE",
"307 274 CURVE",
"307 281 LINE",
"300 283 LINE SMOOTH",
"297.333 283.667 OFFCURVE",
"231.667 244.333 OFFCURVE",
"103 165 CURVE",
"119 93 LINE SMOOTH",
"125.667 62.333 OFFCURVE",
"131.333 38 OFFCURVE",
"138 22 CURVE",
"146 19 LINE"
);
},
{
closed = 1;
nodes = (
"286 22 LINE",
"291 31 LINE",
"292 157 LINE",
"370 212 LINE SMOOTH",
"389.333 226.667 OFFCURVE",
"405 239 OFFCURVE",
"417 249 CURVE SMOOTH",
"429 259 OFFCURVE",
"436.667 267.333 OFFCURVE",
"440 274 CURVE",
"440 281 LINE",
"434 283 LINE SMOOTH",
"431.333 283.667 OFFCURVE",
"365.667 244.333 OFFCURVE",
"237 165 CURVE",
"253 91 LINE SMOOTH",
"259.667 55 OFFCURVE",
"266.667 32.667 OFFCURVE",
"272 22 CURVE",
"280 19 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 416;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
color = 4;
glyphname = guillemetright;
lastChange = "2021-05-18 10:46:26 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"40 20 LINE",
"229 138 LINE",
"212.333 219.333 OFFCURVE",
"201.333 266.667 OFFCURVE",
"196 280 CURVE",
"187 283 LINE",
"180 280 LINE",
"175 271 LINE",
"175 146 LINE",
"99 91 LINE SMOOTH",
"49.667 55 OFFCURVE",
"25 33 OFFCURVE",
"25 25 CURVE",
"26 21 LINE",
"33 19 LINE"
);
},
{
closed = 1;
nodes = (
"174 20 LINE",
"363 138 LINE",
"341.667 230.667 OFFCURVE",
"330 278 OFFCURVE",
"328 280 CURVE",
"320 283 LINE",
"313 280 LINE",
"311 276.667 OFFCURVE",
"309.333 264.667 OFFCURVE",
"308 244 CURVE SMOOTH",
"308 187 LINE",
"309.333 171 OFFCURVE",
"309.333 157.333 OFFCURVE",
"308 146 CURVE",
"262.5 113.5 LINE SMOOTH",
"249.5 104.5 OFFCURVE",
"238.667 96.667 OFFCURVE",
"230 90 CURVE SMOOTH",
"192.667 63.333 OFFCURVE",
"169.333 43.333 OFFCURVE",
"160 30 CURVE",
"160 21 LINE",
"166 19 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 416;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = currency;
lastChange = "2021-05-20 11:55:09 +0000";
layers = (
{
components = (
{
name = degree;
transform = "{1, 0, 0, 1, -4, -239}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"228 231 LINE SMOOTH",
"234 238 OFFCURVE",
"238 244 OFFCURVE",
"238 251 CURVE SMOOTH",
"238 256 OFFCURVE",
"236 259 OFFCURVE",
"232 259 CURVE SMOOTH",
"229 259 OFFCURVE",
"227 258 OFFCURVE",
"224 255 CURVE SMOOTH",
"162 193 LINE",
"180 177 LINE"
);
},
{
closed = 1;
nodes = (
"60 51 OFFCURVE",
"63 52 OFFCURVE",
"66 54 CURVE",
"113 108 LINE",
"91 121 LINE",
"46 75 LINE SMOOTH",
"42 71 OFFCURVE",
"40 67 OFFCURVE",
"40 64 CURVE SMOOTH",
"40 55 OFFCURVE",
"46 51 OFFCURVE",
"57 51 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193 51 OFFCURVE",
"198 58 OFFCURVE",
"198 71 CURVE SMOOTH",
"198 73 OFFCURVE",
"198 74 OFFCURVE",
"197 75 CURVE",
"177 121 LINE",
"152 110 LINE",
"159 97 OFFCURVE",
"146 116 OFFCURVE",
"150 107 CURVE SMOOTH",
"158 88 LINE SMOOTH",
"169 63 OFFCURVE",
"177 51 OFFCURVE",
"182 51 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"116 193 LINE",
"89 249 LINE SMOOTH",
"85 258 OFFCURVE",
"78 263 OFFCURVE",
"71 263 CURVE SMOOTH",
"66 263 OFFCURVE",
"64 261 OFFCURVE",
"64 256 CURVE",
"66 249 LINE",
"78 224 OFFCURVE",
"84 206 OFFCURVE",
"95 184 CURVE"
);
}
);
width = 288;
}
);
unicode = 00A4;
},
{
color = 4;
glyphname = euro;
lastChange = "2021-05-18 10:46:26 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"466 248 OFFCURVE",
"475 264 OFFCURVE",
"427 270 CURVE SMOOTH",
"396 274 OFFCURVE",
"296 277 OFFCURVE",
"214 276 CURVE",
"230 304 OFFCURVE",
"249 329 OFFCURVE",
"270 353 CURVE",
"343 356 OFFCURVE",
"414 359 OFFCURVE",
"492 361 CURVE SMOOTH",
"531 361 OFFCURVE",
"540 377 OFFCURVE",
"492 383 CURVE SMOOTH",
"465 386 OFFCURVE",
"382 390 OFFCURVE",
"307 389 CURVE",
"369 446 OFFCURVE",
"445 489 OFFCURVE",
"522 517 CURVE SMOOTH",
"725 590 OFFCURVE",
"926 557 OFFCURVE",
"863 419 CURVE SMOOTH",
"846 382 OFFCURVE",
"877 400 OFFCURVE",
"890 424 CURVE SMOOTH",
"923 485 OFFCURVE",
"914 591 OFFCURVE",
"748 591 CURVE SMOOTH",
"659 591 OFFCURVE",
"561 571 OFFCURVE",
"470 532 CURVE SMOOTH",
"393 500 OFFCURVE",
"316 451 OFFCURVE",
"256 389 CURVE",
"216 388 OFFCURVE",
"183 385 OFFCURVE",
"169 381 CURVE SMOOTH",
"140 371 OFFCURVE",
"111 346 OFFCURVE",
"172 349 CURVE SMOOTH",
"224 351 LINE",
"206 328 OFFCURVE",
"191 302 OFFCURVE",
"178 275 CURVE",
"144 274 OFFCURVE",
"116 272 OFFCURVE",
"104 268 CURVE SMOOTH",
"74 258 OFFCURVE",
"46 233 OFFCURVE",
"107 236 CURVE SMOOTH",
"164 238 LINE",
"143 168 OFFCURVE",
"145 104 OFFCURVE",
"183 55 CURVE SMOOTH",
"237 -14 OFFCURVE",
"354 -53 OFFCURVE",
"503 -34 CURVE SMOOTH",
"578 -25 OFFCURVE",
"727 3 OFFCURVE",
"813 84 CURVE SMOOTH",
"821 92 OFFCURVE",
"822 110 OFFCURVE",
"807 96 CURVE SMOOTH",
"716 13 OFFCURVE",
"572 0 OFFCURVE",
"501 -6 CURVE SMOOTH",
"358 -19 OFFCURVE",
"250 12 OFFCURVE",
"203 75 CURVE SMOOTH",
"172 117 OFFCURVE",
"167 173 OFFCURVE",
"196 240 CURVE",
"272 243 OFFCURVE",
"345 246 OFFCURVE",
"427 248 CURVE SMOOTH"
);
}
);
};
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"180 27 OFFCURVE",
"189 28 OFFCURVE",
"198 29 CURVE",
"267.114 34.529 OFFCURVE",
"346.739 90.319 OFFCURVE",
"393 152 CURVE SMOOTH",
"395 155 OFFCURVE",
"396 157 OFFCURVE",
"396 160 CURVE SMOOTH",
"396 161 OFFCURVE",
"396 161 OFFCURVE",
"396 162 CURVE SMOOTH",
"395.333 165.333 OFFCURVE",
"393.333 165.333 OFFCURVE",
"390 162 CURVE",
"348 104 OFFCURVE",
"247 53 OFFCURVE",
"194 53 CURVE SMOOTH",
"129 53 OFFCURVE",
"89 94 OFFCURVE",
"89 152 CURVE SMOOTH",
"89 161 OFFCURVE",
"90 170 OFFCURVE",
"92 180 CURVE",
"125.333 189.333 OFFCURVE",
"173.333 196 OFFCURVE",
"220 200 CURVE SMOOTH",
"248 202.667 OFFCURVE",
"273.333 205 OFFCURVE",
"292 205 CURVE",
"297 214 OFFCURVE",
"285 219 OFFCURVE",
"255 219 CURVE SMOOTH",
"240 219 OFFCURVE",
"221 217 OFFCURVE",
"198 215 CURVE SMOOTH",
"164.667 211 OFFCURVE",
"130.667 205.667 OFFCURVE",
"96 199 CURVE",
"100 215 OFFCURVE",
"110.333 235.333 OFFCURVE",
"117 246 CURVE",
"138.333 252.667 OFFCURVE",
"165.333 256 OFFCURVE",
"196 260 CURVE SMOOTH",
"230.667 262.667 OFFCURVE",
"267.333 265 OFFCURVE",
"298 265 CURVE",
"304 266 OFFCURVE",
"306 267 OFFCURVE",
"306 269 CURVE SMOOTH",
"306 274 OFFCURVE",
"274 280 OFFCURVE",
"236 280 CURVE SMOOTH",
"225 280 OFFCURVE",
"214 279 OFFCURVE",
"203 278 CURVE SMOOTH",
"168.5 274 LINE SMOOTH",
"156.833 272.667 OFFCURVE",
"145 270.667 OFFCURVE",
"133 268 CURVE",
"173.843 326.712 OFFCURVE",
"251.312 391.462 OFFCURVE",
"315 397 CURVE SMOOTH",
"369 403 OFFCURVE",
"380 372 OFFCURVE",
"380 333 CURVE SMOOTH",
"380 326 OFFCURVE",
"380 318 OFFCURVE",
"379 310 CURVE",
"397 312 OFFCURVE",
"409 338 OFFCURVE",
"409 358 CURVE SMOOTH",
"409 362 OFFCURVE",
"409 366 OFFCURVE",
"408 369 CURVE SMOOTH",
"399 397 OFFCURVE",
"369 412 OFFCURVE",
"331 412 CURVE SMOOTH",
"247 412 OFFCURVE",
"157 343 OFFCURVE",
"100 261 CURVE",
"63.276 253.349 OFFCURVE",
"33.394 254.014 OFFCURVE",
"41 235 CURVE SMOOTH",
"42.333 231.667 OFFCURVE",
"44.667 230 OFFCURVE",
"48 230 CURVE SMOOTH",
"49.333 230 OFFCURVE",
"53.333 230.667 OFFCURVE",
"60 232 CURVE SMOOTH",
"84 237 LINE",
"77.333 225 OFFCURVE",
"69 203.333 OFFCURVE",
"65 190 CURVE",
"58 190 LINE",
"50 188 OFFCURVE",
"43.5 187 OFFCURVE",
"38.5 187 CURVE SMOOTH",
"33.5 187 OFFCURVE",
"32.667 182.667 OFFCURVE",
"36 174 CURVE SMOOTH",
"38 168 OFFCURVE",
"38 168 OFFCURVE",
"42 168 CURVE SMOOTH",
"43 168 OFFCURVE",
"44 168 OFFCURVE",
"45 168 CURVE SMOOTH",
"47.667 168 OFFCURVE",
"54.333 168.667 OFFCURVE",
"61 170 CURVE",
"59 159 OFFCURVE",
"58 149 OFFCURVE",
"58 139 CURVE SMOOTH",
"58 70 OFFCURVE",
"101 27 OFFCURVE",
"171 27 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01249 947 62 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 443;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = divisionslash;
lastChange = "2021-05-11 10:44:57 +0000";
layers = (
{
components = (
{
name = slash;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 365;
}
);
unicode = 2215;
},
{
color = 4;
glyphname = increment;
lastChange = "2021-05-18 10:46:26 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"427 -4 LINE",
"444.333 6.667 OFFCURVE",
"465 28.333 OFFCURVE",
"465 55 CURVE SMOOTH",
"465 57 OFFCURVE",
"464.333 58.667 OFFCURVE",
"463 60 CURVE",
"300 440 LINE",
"298.667 441.333 OFFCURVE",
"297 442 OFFCURVE",
"295 442 CURVE SMOOTH",
"288.333 442 OFFCURVE",
"273.333 426.333 OFFCURVE",
"268 413 CURVE",
"267 412 LINE",
"80 31 LINE",
"78 29 OFFCURVE",
"77 26.333 OFFCURVE",
"77 23 CURVE SMOOTH",
"77 12.333 OFFCURVE",
"85.333 -4 OFFCURVE",
"92 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"275 374 LINE",
"418 35 LINE",
"108 35 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01221 949 11 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 507;
}
);
note = Delta;
unicode = 2206;
},
{
color = 4;
glyphname = micro;
lastChange = "2021-05-21 04:38:24 +0000";
layers = (
{
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"-76.333 -243 OFFCURVE",
"-72.333 -242 OFFCURVE",
"-71 -240 CURVE SMOOTH",
"48 20 LINE",
"57.333 2.667 OFFCURVE",
"71.667 -6 OFFCURVE",
"91 -6 CURVE SMOOTH",
"127.667 -6 OFFCURVE",
"167 27.667 OFFCURVE",
"209 95 CURVE",
"202.333 77.667 OFFCURVE",
"199 61.333 OFFCURVE",
"199 46 CURVE SMOOTH",
"199 10.667 OFFCURVE",
"215 -7 OFFCURVE",
"247 -7 CURVE SMOOTH",
"289 -7 OFFCURVE",
"333.667 45 OFFCURVE",
"381 149 CURVE",
"379 151 LINE",
"374 151 LINE",
"359.333 116.333 OFFCURVE",
"343.667 87.333 OFFCURVE",
"325 62 CURVE SMOOTH",
"297 22 OFFCURVE",
"271.667 2 OFFCURVE",
"249 2 CURVE SMOOTH",
"239 2 OFFCURVE",
"234 8 OFFCURVE",
"234 20 CURVE SMOOTH",
"234 40 OFFCURVE",
"255 91.667 OFFCURVE",
"297 175 CURVE SMOOTH",
"369 314 LINE",
"367 315 LINE",
"361 302.333 OFFCURVE",
"351.333 296 OFFCURVE",
"338 296 CURVE SMOOTH",
"330 296 OFFCURVE",
"322.333 298.333 OFFCURVE",
"315 303 CURVE",
"313 303 LINE",
"279.667 237.667 OFFCURVE",
"256.667 192.667 OFFCURVE",
"242 166 CURVE SMOOTH",
"182 58.667 OFFCURVE",
"134.333 5 OFFCURVE",
"99 5 CURVE SMOOTH",
"83.667 5 OFFCURVE",
"76 13.333 OFFCURVE",
"76 30 CURVE SMOOTH",
"76 59.333 OFFCURVE",
"94 104.667 OFFCURVE",
"130 166 CURVE SMOOTH",
"148.667 196.667 OFFCURVE",
"162.333 220.333 OFFCURVE",
"173 239 CURVE SMOOTH",
"194.333 277.667 OFFCURVE",
"209.333 301.333 OFFCURVE",
"218 310 CURVE",
"216 312 LINE",
"200.667 299.333 OFFCURVE",
"186 293 OFFCURVE",
"172 293 CURVE SMOOTH",
"165.333 293 OFFCURVE",
"160.333 294.333 OFFCURVE",
"157 297 CURVE",
"155 297 LINE",
"109.667 217.667 OFFCURVE",
"77.667 157.667 OFFCURVE",
"59 117 CURVE SMOOTH",
"-119 -233 LINE",
"-120.333 -234.333 OFFCURVE",
"-119 -235.667 OFFCURVE",
"-115 -237 CURVE SMOOTH",
"-107 -241 OFFCURVE",
"-96.333 -243 OFFCURVE",
"-83 -243 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 952 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01249 951 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 4 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 4 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\01258 33 74 33 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 33 25 33 41 33 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 13 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01210 13 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 13 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01246 13 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 299;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = dieresiscomb;
lastChange = "2021-05-11 10:31:01 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{132, 274}";
},
{
name = top;
position = "{132, 366}";
}
);
hints = (
{
horizontal = 1;
place = "{343, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{429, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"181 337 OFFCURVE",
"189 344 OFFCURVE",
"195 359 CURVE SMOOTH",
"207 390 LINE",
"210 395 OFFCURVE",
"208 398 OFFCURVE",
"202 398 CURVE SMOOTH",
"197 398 OFFCURVE",
"188 395 OFFCURVE",
"180 388 CURVE SMOOTH",
"166 376 OFFCURVE",
"157 368 OFFCURVE",
"157 360 CURVE SMOOTH",
"157 351 OFFCURVE",
"167 337 OFFCURVE",
"174 337 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"80 337 OFFCURVE",
"89 343 OFFCURVE",
"94 358 CURVE SMOOTH",
"106 390 LINE",
"112 398 OFFCURVE",
"100 401 OFFCURVE",
"79 388 CURVE SMOOTH",
"64 377 OFFCURVE",
"56 368 OFFCURVE",
"56 360 CURVE SMOOTH",
"56 351 OFFCURVE",
"66 337 OFFCURVE",
"73 337 CURVE SMOOTH"
);
}
);
width = 261;
}
);
unicode = 0308;
},
{
glyphname = dotaccentcomb;
lastChange = "2021-05-11 10:27:18 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{62, 274}";
},
{
name = top;
position = "{78, 357}";
}
);
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 0, 78}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 173;
}
);
unicode = 0307;
},
{
glyphname = gravecomb;
lastChange = "2021-05-11 10:31:13 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{139, 274}";
},
{
name = _topviet;
position = "{142, 274}";
},
{
name = top;
position = "{116, 378}";
}
);
hints = (
{
horizontal = 1;
place = "{300, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{402, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"172 334 OFFCURVE",
"173 336 OFFCURVE",
"173 337 CURVE SMOOTH",
"173 339 LINE",
"172 340 LINE",
"100 395 LINE SMOOTH",
"92 401 OFFCURVE",
"84 404 OFFCURVE",
"76 404 CURVE SMOOTH",
"67 404 OFFCURVE",
"58 400 OFFCURVE",
"58 393 CURVE SMOOTH",
"58 391 OFFCURVE",
"58 388 OFFCURVE",
"60 386 CURVE SMOOTH",
"63 381 OFFCURVE",
"81 370 OFFCURVE",
"115 355 CURVE SMOOTH",
"150 339 OFFCURVE",
"169 331 OFFCURVE",
"171 333 CURVE SMOOTH"
);
}
);
width = 221;
}
);
unicode = 0300;
},
{
glyphname = acutecomb;
lastChange = "2021-05-11 10:31:18 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{86, 274}";
},
{
name = top;
position = "{121, 377}";
}
);
hints = (
{
horizontal = 1;
place = "{261, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{364, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"67 331 OFFCURVE",
"86 338 OFFCURVE",
"121 354 CURVE SMOOTH",
"155 369 OFFCURVE",
"173 380 OFFCURVE",
"176 385 CURVE SMOOTH",
"183 396 OFFCURVE",
"172 403 OFFCURVE",
"160 403 CURVE SMOOTH",
"152 403 OFFCURVE",
"144 400 OFFCURVE",
"136 394 CURVE SMOOTH",
"64 339 LINE",
"63 338 LINE",
"63 336 LINE SMOOTH",
"63 335 OFFCURVE",
"64 333 OFFCURVE",
"65 332 CURVE SMOOTH"
);
}
);
width = 221;
}
);
unicode = 0301;
},
{
glyphname = hungarumlautcomb;
lastChange = "2021-05-11 10:32:23 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{205, 274}";
},
{
name = top;
position = "{223, 386}";
}
);
components = (
{
name = hungarumlaut;
transform = "{0.91692, 0, 0, 0.79902, 125, 74}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 442;
}
);
unicode = 030B;
},
{
glyphname = caroncomb.alt;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{143, 274}";
},
{
name = bottom;
position = "{147, 173}";
}
);
hints = (
{
horizontal = 1;
place = "{179, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{294, 26}";
type = Stem;
},
{
horizontal = 1;
place = "{577, 74}";
type = Stem;
},
{
horizontal = 1;
place = "{700, 23}";
type = Stem;
},
{
horizontal = 1;
place = "{932, 41}";
type = Stem;
},
{
place = "{-9, 57}";
type = Stem;
},
{
place = "{798, 28}";
type = Stem;
},
{
horizontal = 1;
place = "{596, 55}";
type = Stem;
},
{
horizontal = 1;
place = "{616, 35}";
type = Stem;
},
{
horizontal = 1;
place = "{230, -20}";
target = down;
type = TopGhost;
},
{
place = "{53, 71}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"124 173 OFFCURVE",
"135 182 OFFCURVE",
"151 198 CURVE SMOOTH",
"170 217 OFFCURVE",
"183 237 OFFCURVE",
"189 259 CURVE SMOOTH",
"190 265 OFFCURVE",
"191 270 OFFCURVE",
"191 275 CURVE SMOOTH",
"191 281 OFFCURVE",
"189 285 OFFCURVE",
"182 285 CURVE SMOOTH",
"169 285 OFFCURVE",
"155 274 OFFCURVE",
"155 254 CURVE SMOOTH",
"155 249 OFFCURVE",
"156 244 OFFCURVE",
"156 237 CURVE SMOOTH",
"156 236 OFFCURVE",
"156 235 OFFCURVE",
"156 234 CURVE SMOOTH",
"154 223 OFFCURVE",
"147 212 OFFCURVE",
"135 199 CURVE SMOOTH",
"123 186 OFFCURVE",
"116 179 OFFCURVE",
"116 178 CURVE SMOOTH",
"116 177 OFFCURVE",
"116 177 OFFCURVE",
"118 176 CURVE SMOOTH"
);
}
);
width = 388;
}
);
},
{
glyphname = circumflexcomb;
lastChange = "2021-05-11 11:18:23 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{184, 274}";
},
{
name = top;
position = "{316, 311}";
},
{
name = topviet;
position = "{271, 380}";
}
);
hints = (
{
horizontal = 1;
place = "{324, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{350, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{451, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{477, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"268 327 OFFCURVE",
"269 327 OFFCURVE",
"271 327 CURVE",
"273 328 OFFCURVE",
"273 329 OFFCURVE",
"272 331 CURVE SMOOTH",
"245 411 LINE SMOOTH",
"245 412 OFFCURVE",
"241 413 OFFCURVE",
"236 413 CURVE SMOOTH",
"231 413 OFFCURVE",
"224 412 OFFCURVE",
"215 411 CURVE",
"99 331 LINE",
"99 328 OFFCURVE",
"101 327 OFFCURVE",
"106 328 CURVE SMOOTH",
"111 328 OFFCURVE",
"116 329 OFFCURVE",
"119 331 CURVE",
"222 385 LINE",
"257 331 LINE SMOOTH",
"259 328 OFFCURVE",
"262 327 OFFCURVE",
"267 327 CURVE SMOOTH"
);
}
);
width = 370;
}
);
unicode = 0302;
},
{
glyphname = caroncomb;
lastChange = "2021-05-11 10:32:55 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{145, 274}";
},
{
name = top;
position = "{187, 378}";
}
);
components = (
{
name = caron;
transform = "{1, 0, 0, 1, 36, 119}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
unicode = 030C;
},
{
glyphname = brevecomb;
lastChange = "2021-05-11 10:33:01 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{108, 274}";
},
{
name = top;
position = "{113, 354}";
}
);
hints = (
{
horizontal = 1;
place = "{366, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{461, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"143 330 OFFCURVE",
"178 350 OFFCURVE",
"194 397 CURVE SMOOTH",
"195 399 OFFCURVE",
"195 401 OFFCURVE",
"195 401 CURVE",
"195 404 OFFCURVE",
"195 405 OFFCURVE",
"193 405 CURVE SMOOTH",
"190 405 OFFCURVE",
"186 402 OFFCURVE",
"184 398 CURVE SMOOTH",
"166 363 OFFCURVE",
"141 347 OFFCURVE",
"114 347 CURVE SMOOTH",
"100 347 OFFCURVE",
"88 351 OFFCURVE",
"78 359 CURVE SMOOTH",
"72 364 OFFCURVE",
"66 371 OFFCURVE",
"60 380 CURVE SMOOTH",
"56 388 OFFCURVE",
"53 392 OFFCURVE",
"51 392 CURVE SMOOTH",
"48 392 OFFCURVE",
"46 390 OFFCURVE",
"46 384 CURVE SMOOTH",
"46 380 OFFCURVE",
"47 376 OFFCURVE",
"49 371 CURVE SMOOTH",
"60 344 OFFCURVE",
"78 330 OFFCURVE",
"108 330 CURVE SMOOTH"
);
}
);
width = 184;
}
);
unicode = 0306;
},
{
glyphname = ringcomb;
lastChange = "2021-05-11 10:33:06 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{125, 274}";
},
{
name = top;
position = "{134, 403}";
}
);
components = (
{
name = ring;
transform = "{1, 0, 0, 1, 0, -179}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 229;
}
);
unicode = 030A;
},
{
glyphname = tildecomb;
lastChange = "2021-05-11 10:33:10 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{139, 274}";
},
{
name = _topviet;
position = "{157, 274}";
},
{
name = top;
position = "{139, 353}";
}
);
hints = (
{
horizontal = 1;
place = "{438, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{491, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{437, 21}";
target = up;
type = BottomGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"180 335 OFFCURVE",
"188 337 OFFCURVE",
"193 341 CURVE SMOOTH",
"213 357 OFFCURVE",
"224 368 OFFCURVE",
"224 376 CURVE SMOOTH",
"224 378 OFFCURVE",
"222 379 OFFCURVE",
"220 379 CURVE",
"210 368 OFFCURVE",
"199 362 OFFCURVE",
"188 362 CURVE SMOOTH",
"179 362 OFFCURVE",
"167 364 OFFCURVE",
"152 370 CURVE SMOOTH",
"136 376 OFFCURVE",
"123 379 OFFCURVE",
"115 379 CURVE SMOOTH",
"105 379 OFFCURVE",
"95 377 OFFCURVE",
"87 371 CURVE SMOOTH",
"66 355 OFFCURVE",
"54 346 OFFCURVE",
"54 337 CURVE SMOOTH",
"54 336 OFFCURVE",
"54 336 OFFCURVE",
"55 336 CURVE SMOOTH",
"57 336 OFFCURVE",
"63 339 OFFCURVE",
"71 346 CURVE SMOOTH",
"80 354 OFFCURVE",
"89 357 OFFCURVE",
"97 357 CURVE SMOOTH",
"105 357 OFFCURVE",
"118 353 OFFCURVE",
"133 345 CURVE SMOOTH",
"149 336 OFFCURVE",
"163 335 OFFCURVE",
"173 335 CURVE SMOOTH"
);
}
);
width = 272;
}
);
unicode = 0303;
},
{
glyphname = macroncomb;
lastChange = "2021-05-11 10:33:15 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{194, 274}";
},
{
name = top;
position = "{194, 331}";
}
);
components = (
{
name = macron;
transform = "{1, 0, 0, 1, 0, 36}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 500;
}
);
unicode = 0304;
},
{
glyphname = hookabovecomb;
lastChange = "2021-05-11 10:33:21 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{113, 274}";
},
{
name = top;
position = "{125, 440}";
}
);
hints = (
{
horizontal = 1;
place = "{651, -28}";
type = Stem;
},
{
horizontal = 1;
place = "{491, 21}";
target = up;
type = BottomGhost;
},
{
place = "{201, -32}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"124 329 OFFCURVE",
"138 341 OFFCURVE",
"158 366 CURVE SMOOTH",
"176 388 OFFCURVE",
"184 408 OFFCURVE",
"188 422 CURVE SMOOTH",
"189 427 OFFCURVE",
"190 431 OFFCURVE",
"190 434 CURVE SMOOTH",
"190 451 OFFCURVE",
"175 461 OFFCURVE",
"148 461 CURVE SMOOTH",
"138 461 OFFCURVE",
"123 460 OFFCURVE",
"103 455 CURVE SMOOTH",
"74 449 OFFCURVE",
"59 442 OFFCURVE",
"59 433 CURVE SMOOTH",
"59 430 OFFCURVE",
"61 428 OFFCURVE",
"66 427 CURVE SMOOTH",
"67 427 OFFCURVE",
"76 429 OFFCURVE",
"92 433 CURVE SMOOTH",
"108 437 OFFCURVE",
"119 440 OFFCURVE",
"127 440 CURVE SMOOTH",
"148 440 OFFCURVE",
"158 431 OFFCURVE",
"158 414 CURVE SMOOTH",
"158 411 OFFCURVE",
"158 407 OFFCURVE",
"157 402 CURVE SMOOTH",
"151 380 OFFCURVE",
"135 357 OFFCURVE",
"110 333 CURVE",
"113 329 LINE"
);
}
);
width = 234;
}
);
unicode = 0309;
},
{
glyphname = commaturnedabovecomb;
lastChange = "2021-05-11 10:33:27 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{188, 274}";
},
{
name = top;
position = "{217, 417}";
}
);
hints = (
{
horizontal = 1;
place = "{-205, 30}";
type = Stem;
},
{
horizontal = 1;
place = "{0, 23}";
type = Stem;
},
{
horizontal = 1;
place = "{310, 36}";
type = Stem;
},
{
horizontal = 1;
place = "{390, 21}";
target = up;
type = BottomGhost;
},
{
place = "{406, -71}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"204 333 OFFCURVE",
"214 340 OFFCURVE",
"220 355 CURVE SMOOTH",
"223 363 OFFCURVE",
"212 370 OFFCURVE",
"212 380 CURVE SMOOTH",
"212 381 OFFCURVE",
"212 382 OFFCURVE",
"212 383 CURVE SMOOTH",
"216 393 OFFCURVE",
"225 404 OFFCURVE",
"240 417 CURVE SMOOTH",
"256 430 OFFCURVE",
"264 436 OFFCURVE",
"264 437 CURVE SMOOTH",
"264 438 OFFCURVE",
"264 439 OFFCURVE",
"262 439 CURVE",
"256 441 OFFCURVE",
"241 434 OFFCURVE",
"221 418 CURVE SMOOTH",
"197 399 OFFCURVE",
"181 380 OFFCURVE",
"172 358 CURVE SMOOTH",
"167 343 OFFCURVE",
"178 333 OFFCURVE",
"191 333 CURVE SMOOTH"
);
}
);
width = 370;
}
);
unicode = 0312;
},
{
glyphname = horncomb;
lastChange = "2021-05-11 11:18:30 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{59, 274}";
},
{
name = topright;
position = "{260, 394}";
}
);
hints = (
{
horizontal = 1;
place = "{-205, 27}";
type = Stem;
},
{
horizontal = 1;
place = "{346, 64}";
type = Stem;
},
{
place = "{166, 80}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"141 240 OFFCURVE",
"181 254 OFFCURVE",
"181 282 CURVE SMOOTH",
"181 299 OFFCURVE",
"178 309 OFFCURVE",
"172 320 CURVE SMOOTH",
"167 329 OFFCURVE",
"161 334 OFFCURVE",
"157 334 CURVE SMOOTH",
"156 334 OFFCURVE",
"155 334 OFFCURVE",
"154 333 CURVE SMOOTH",
"152 332 OFFCURVE",
"150 328 OFFCURVE",
"150 320 CURVE SMOOTH",
"150 317 OFFCURVE",
"150 313 OFFCURVE",
"151 309 CURVE SMOOTH",
"152 304 OFFCURVE",
"152 300 OFFCURVE",
"152 296 CURVE SMOOTH",
"152 269 OFFCURVE",
"139 256 OFFCURVE",
"121 256 CURVE SMOOTH",
"112 256 OFFCURVE",
"103 260 OFFCURVE",
"95 269 CURVE SMOOTH",
"87 278 OFFCURVE",
"84 282 OFFCURVE",
"83 282 CURVE SMOOTH",
"81 282 OFFCURVE",
"79 279 OFFCURVE",
"79 274 CURVE SMOOTH",
"79 273 OFFCURVE",
"79 272 OFFCURVE",
"79 271 CURVE SMOOTH",
"80 263 OFFCURVE",
"86 255 OFFCURVE",
"97 248 CURVE SMOOTH",
"106 243 OFFCURVE",
"115 240 OFFCURVE",
"125 240 CURVE SMOOTH"
);
}
);
width = 201;
}
);
unicode = 031B;
},
{
glyphname = dotbelowcomb;
lastChange = "2021-05-11 11:15:12 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{81, 0}";
},
{
name = bottom;
position = "{81, -101}";
}
);
hints = (
{
horizontal = 1;
place = "{-214.366, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{-154.851, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"81 -111 OFFCURVE",
"86 -105 OFFCURVE",
"92 -96 CURVE SMOOTH",
"104 -79 LINE SMOOTH",
"107 -75 OFFCURVE",
"102 -70 OFFCURVE",
"93 -70 CURVE SMOOTH",
"89 -70 OFFCURVE",
"84 -71 OFFCURVE",
"79 -74 CURVE SMOOTH",
"64 -82 OFFCURVE",
"57 -89 OFFCURVE",
"57 -95 CURVE SMOOTH",
"57 -101 OFFCURVE",
"66 -111 OFFCURVE",
"73 -111 CURVE SMOOTH"
);
}
);
width = 173;
}
);
unicode = 0323;
},
{
glyphname = commaaccentcomb;
lastChange = "2021-05-11 10:20:10 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{205, 0}";
},
{
name = bottom;
position = "{205, -235}";
}
);
hints = (
{
horizontal = 1;
place = "{-154, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{-39, 26}";
type = Stem;
},
{
horizontal = 1;
place = "{244, 74}";
type = Stem;
},
{
horizontal = 1;
place = "{367, 23}";
type = Stem;
},
{
horizontal = 1;
place = "{599, 41}";
type = Stem;
},
{
place = "{-15, 57}";
type = Stem;
},
{
place = "{792, 28}";
type = Stem;
},
{
horizontal = 1;
place = "{263, 55}";
type = Stem;
},
{
horizontal = 1;
place = "{283, 35}";
type = Stem;
},
{
horizontal = 1;
place = "{-103, -20}";
target = down;
type = TopGhost;
},
{
place = "{47, 71}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"157 -160 OFFCURVE",
"168 -151 OFFCURVE",
"184 -135 CURVE SMOOTH",
"203 -116 OFFCURVE",
"216 -96 OFFCURVE",
"222 -74 CURVE SMOOTH",
"225 -58 OFFCURVE",
"215 -48 OFFCURVE",
"204 -48 CURVE SMOOTH",
"193 -48 OFFCURVE",
"184 -56 OFFCURVE",
"181 -71 CURVE SMOOTH",
"179 -79 OFFCURVE",
"189 -86 OFFCURVE",
"189 -96 CURVE SMOOTH",
"189 -97 OFFCURVE",
"189 -98 OFFCURVE",
"189 -99 CURVE SMOOTH",
"187 -110 OFFCURVE",
"180 -121 OFFCURVE",
"168 -134 CURVE SMOOTH",
"156 -147 OFFCURVE",
"149 -154 OFFCURVE",
"149 -155 CURVE SMOOTH",
"149 -156 OFFCURVE",
"149 -156 OFFCURVE",
"151 -157 CURVE SMOOTH"
);
}
);
width = 388;
}
);
unicode = 0326;
},
{
glyphname = cedillacomb;
lastChange = "2021-05-11 10:05:45 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{181, 0}";
},
{
name = bottom;
position = "{173, -140}";
}
);
components = (
{
name = cedilla;
transform = "{0.71093, 0, 0, 0.64796, 74, 7}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 350;
}
);
unicode = 0327;
},
{
glyphname = ogonekcomb;
lastChange = "2021-05-11 10:05:50 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
position = "{139, 5}";
}
);
components = (
{
name = ogonek;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 234;
}
);
unicode = 0328;
},
{
glyphname = commaaccentcomb.001;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{83, 0}";
},
{
name = bottom;
position = "{60, -151}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"20.386 -151.115 OFFCURVE",
"25.917 -148.927 OFFCURVE",
"34.61 -143.822 CURVE SMOOTH",
"47.254 -137.259 OFFCURVE",
"62.269 -124.132 OFFCURVE",
"78.864 -105.9 CURVE SMOOTH",
"97.04 -84.751 OFFCURVE",
"105.733 -69.437 OFFCURVE",
"104.152 -58.497 CURVE SMOOTH",
"102 -45 OFFCURVE",
"96 -38 OFFCURVE",
"83 -38 CURVE SMOOTH",
"67 -38 OFFCURVE",
"51 -48 OFFCURVE",
"51.205 -62.144 CURVE SMOOTH",
"51.205 -74.541 OFFCURVE",
"55.947 -81.105 OFFCURVE",
"65.43 -82.563 CURVE",
"38.561 -116.839 LINE SMOOTH",
"23 -137 OFFCURVE",
"14.854 -147.469 OFFCURVE",
"14.854 -149.656 CURVE SMOOTH",
"14.854 -150.386 OFFCURVE",
"15.644 -151.115 OFFCURVE",
"17.225 -151.115 CURVE SMOOTH"
);
}
);
width = 155;
}
);
},
{
glyphname = caron.alt;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{143, 274}";
},
{
name = bottom;
position = "{147, 173}";
}
);
hints = (
{
horizontal = 1;
place = "{179, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{294, 26}";
type = Stem;
},
{
horizontal = 1;
place = "{577, 74}";
type = Stem;
},
{
horizontal = 1;
place = "{700, 23}";
type = Stem;
},
{
horizontal = 1;
place = "{932, 41}";
type = Stem;
},
{
place = "{-9, 57}";
type = Stem;
},
{
place = "{798, 28}";
type = Stem;
},
{
horizontal = 1;
place = "{596, 55}";
type = Stem;
},
{
horizontal = 1;
place = "{616, 35}";
type = Stem;
},
{
horizontal = 1;
place = "{230, -20}";
target = down;
type = TopGhost;
},
{
place = "{53, 71}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"124 173 OFFCURVE",
"135 182 OFFCURVE",
"151 198 CURVE SMOOTH",
"170 217 OFFCURVE",
"183 237 OFFCURVE",
"189 259 CURVE SMOOTH",
"190 265 OFFCURVE",
"191 270 OFFCURVE",
"191 275 CURVE SMOOTH",
"191 281 OFFCURVE",
"189 285 OFFCURVE",
"182 285 CURVE SMOOTH",
"169 285 OFFCURVE",
"155 274 OFFCURVE",
"155 254 CURVE SMOOTH",
"155 249 OFFCURVE",
"156 244 OFFCURVE",
"156 237 CURVE SMOOTH",
"156 236 OFFCURVE",
"156 235 OFFCURVE",
"156 234 CURVE SMOOTH",
"154 223 OFFCURVE",
"147 212 OFFCURVE",
"135 199 CURVE SMOOTH",
"123 186 OFFCURVE",
"116 179 OFFCURVE",
"116 178 CURVE SMOOTH",
"116 177 OFFCURVE",
"116 177 OFFCURVE",
"118 176 CURVE SMOOTH"
);
}
);
width = 388;
}
);
},
{
glyphname = dieresiscomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{132, 274}";
},
{
name = top;
position = "{132, 366}";
}
);
hints = (
{
horizontal = 1;
place = "{343, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{429, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"181 305 OFFCURVE",
"189 312 OFFCURVE",
"195 327 CURVE SMOOTH",
"207 358 LINE",
"210 363 OFFCURVE",
"208 366 OFFCURVE",
"202 366 CURVE SMOOTH",
"197 366 OFFCURVE",
"188 363 OFFCURVE",
"180 356 CURVE SMOOTH",
"166 344 OFFCURVE",
"157 336 OFFCURVE",
"157 328 CURVE SMOOTH",
"157 319 OFFCURVE",
"167 305 OFFCURVE",
"174 305 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"80 305 OFFCURVE",
"89 311 OFFCURVE",
"94 326 CURVE SMOOTH",
"106 358 LINE",
"112 366 OFFCURVE",
"100 369 OFFCURVE",
"79 356 CURVE SMOOTH",
"64 345 OFFCURVE",
"56 336 OFFCURVE",
"56 328 CURVE SMOOTH",
"56 319 OFFCURVE",
"66 305 OFFCURVE",
"73 305 CURVE SMOOTH"
);
}
);
width = 261;
}
);
},
{
glyphname = dotaccentcomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{62, 274}";
},
{
name = top;
position = "{78, 357}";
}
);
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 6, 65}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 173;
}
);
},
{
glyphname = gravecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{139, 274}";
},
{
name = _topviet;
position = "{142, 274}";
},
{
name = top;
position = "{116, 378}";
}
);
hints = (
{
horizontal = 1;
place = "{300, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{402, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"172 308 OFFCURVE",
"173 310 OFFCURVE",
"173 311 CURVE SMOOTH",
"173 313 LINE",
"172 314 LINE",
"100 369 LINE SMOOTH",
"92 375 OFFCURVE",
"84 378 OFFCURVE",
"76 378 CURVE SMOOTH",
"67 378 OFFCURVE",
"58 374 OFFCURVE",
"58 367 CURVE SMOOTH",
"58 365 OFFCURVE",
"58 362 OFFCURVE",
"60 360 CURVE SMOOTH",
"63 355 OFFCURVE",
"81 344 OFFCURVE",
"115 329 CURVE SMOOTH",
"150 313 OFFCURVE",
"169 305 OFFCURVE",
"171 307 CURVE SMOOTH"
);
}
);
width = 221;
}
);
},
{
glyphname = acutecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{86, 274}";
},
{
name = top;
position = "{121, 377}";
}
);
hints = (
{
horizontal = 1;
place = "{261, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{364, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"67 305 OFFCURVE",
"86 312 OFFCURVE",
"121 328 CURVE SMOOTH",
"155 343 OFFCURVE",
"173 354 OFFCURVE",
"176 359 CURVE SMOOTH",
"183 370 OFFCURVE",
"172 377 OFFCURVE",
"160 377 CURVE SMOOTH",
"152 377 OFFCURVE",
"144 374 OFFCURVE",
"136 368 CURVE SMOOTH",
"64 313 LINE",
"63 312 LINE",
"63 310 LINE SMOOTH",
"63 309 OFFCURVE",
"64 307 OFFCURVE",
"65 306 CURVE SMOOTH"
);
}
);
width = 221;
}
);
},
{
glyphname = hungarumlautcomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{205, 274}";
},
{
name = top;
position = "{223, 386}";
}
);
components = (
{
name = hungarumlaut;
transform = "{0.91692, 0, 0, 0.79902, 125, 43}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 442;
}
);
},
{
glyphname = circumflexcomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{184, 274}";
},
{
name = top;
position = "{316, 311}";
},
{
name = topviet;
position = "{271, 380}";
}
);
hints = (
{
horizontal = 1;
place = "{324, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{350, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{451, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{477, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"266 310 OFFCURVE",
"267 310 OFFCURVE",
"269 310 CURVE",
"271 311 OFFCURVE",
"271 312 OFFCURVE",
"270 314 CURVE SMOOTH",
"243 394 LINE SMOOTH",
"243 395 OFFCURVE",
"239 396 OFFCURVE",
"234 396 CURVE SMOOTH",
"229 396 OFFCURVE",
"222 395 OFFCURVE",
"213 394 CURVE",
"97 314 LINE",
"97 311 OFFCURVE",
"99 310 OFFCURVE",
"104 311 CURVE SMOOTH",
"109 311 OFFCURVE",
"114 312 OFFCURVE",
"117 314 CURVE",
"220 368 LINE",
"255 314 LINE SMOOTH",
"257 311 OFFCURVE",
"260 310 OFFCURVE",
"265 310 CURVE SMOOTH"
);
}
);
width = 370;
}
);
},
{
glyphname = caroncomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{145, 274}";
},
{
name = top;
position = "{187, 378}";
}
);
components = (
{
name = caron;
transform = "{1, 0, 0, 1, 36, 124}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
},
{
glyphname = brevecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{108, 274}";
},
{
name = top;
position = "{113, 354}";
}
);
hints = (
{
horizontal = 1;
place = "{366, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{461, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"143 305 OFFCURVE",
"178 325 OFFCURVE",
"194 372 CURVE SMOOTH",
"195 374 OFFCURVE",
"195 376 OFFCURVE",
"195 376 CURVE",
"195 379 OFFCURVE",
"195 380 OFFCURVE",
"193 380 CURVE SMOOTH",
"190 380 OFFCURVE",
"186 377 OFFCURVE",
"184 373 CURVE SMOOTH",
"166 338 OFFCURVE",
"141 322 OFFCURVE",
"114 322 CURVE SMOOTH",
"100 322 OFFCURVE",
"88 326 OFFCURVE",
"78 334 CURVE SMOOTH",
"72 339 OFFCURVE",
"66 346 OFFCURVE",
"60 355 CURVE SMOOTH",
"56 363 OFFCURVE",
"53 367 OFFCURVE",
"51 367 CURVE SMOOTH",
"48 367 OFFCURVE",
"46 365 OFFCURVE",
"46 359 CURVE SMOOTH",
"46 355 OFFCURVE",
"47 351 OFFCURVE",
"49 346 CURVE SMOOTH",
"60 319 OFFCURVE",
"78 305 OFFCURVE",
"108 305 CURVE SMOOTH"
);
}
);
width = 184;
}
);
},
{
glyphname = ringcomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{125, 274}";
},
{
name = top;
position = "{134, 403}";
}
);
components = (
{
name = ring;
transform = "{1, 0, 0, 1, 0, -203}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 229;
}
);
},
{
glyphname = tildecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{139, 274}";
},
{
name = _topviet;
position = "{157, 274}";
},
{
name = top;
position = "{139, 353}";
}
);
hints = (
{
horizontal = 1;
place = "{438, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{491, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{437, 21}";
target = up;
type = BottomGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"180 309 OFFCURVE",
"188 311 OFFCURVE",
"193 315 CURVE SMOOTH",
"213 331 OFFCURVE",
"224 342 OFFCURVE",
"224 350 CURVE SMOOTH",
"224 352 OFFCURVE",
"222 353 OFFCURVE",
"220 353 CURVE",
"210 342 OFFCURVE",
"199 336 OFFCURVE",
"188 336 CURVE SMOOTH",
"179 336 OFFCURVE",
"167 338 OFFCURVE",
"152 344 CURVE SMOOTH",
"136 350 OFFCURVE",
"123 353 OFFCURVE",
"115 353 CURVE SMOOTH",
"105 353 OFFCURVE",
"95 351 OFFCURVE",
"87 345 CURVE SMOOTH",
"66 329 OFFCURVE",
"54 320 OFFCURVE",
"54 311 CURVE SMOOTH",
"54 310 OFFCURVE",
"54 310 OFFCURVE",
"55 310 CURVE SMOOTH",
"57 310 OFFCURVE",
"63 313 OFFCURVE",
"71 320 CURVE SMOOTH",
"80 328 OFFCURVE",
"89 331 OFFCURVE",
"97 331 CURVE SMOOTH",
"105 331 OFFCURVE",
"118 327 OFFCURVE",
"133 319 CURVE SMOOTH",
"149 310 OFFCURVE",
"163 309 OFFCURVE",
"173 309 CURVE SMOOTH"
);
}
);
width = 272;
}
);
},
{
glyphname = macroncomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{194, 274}";
},
{
name = top;
position = "{194, 331}";
}
);
components = (
{
name = macron;
transform = "{1, 0, 0, 1, 0, 9}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 500;
}
);
},
{
glyphname = hookabovecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{113, 274}";
},
{
name = top;
position = "{125, 440}";
}
);
hints = (
{
horizontal = 1;
place = "{651, -28}";
type = Stem;
},
{
horizontal = 1;
place = "{491, 21}";
target = up;
type = BottomGhost;
},
{
place = "{201, -32}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"124 308 OFFCURVE",
"138 320 OFFCURVE",
"158 345 CURVE SMOOTH",
"176 367 OFFCURVE",
"184 387 OFFCURVE",
"188 401 CURVE SMOOTH",
"189 406 OFFCURVE",
"190 410 OFFCURVE",
"190 413 CURVE SMOOTH",
"190 430 OFFCURVE",
"175 440 OFFCURVE",
"148 440 CURVE SMOOTH",
"138 440 OFFCURVE",
"123 439 OFFCURVE",
"103 434 CURVE SMOOTH",
"74 428 OFFCURVE",
"59 421 OFFCURVE",
"59 412 CURVE SMOOTH",
"59 409 OFFCURVE",
"61 407 OFFCURVE",
"66 406 CURVE SMOOTH",
"67 406 OFFCURVE",
"76 408 OFFCURVE",
"92 412 CURVE SMOOTH",
"108 416 OFFCURVE",
"119 419 OFFCURVE",
"127 419 CURVE SMOOTH",
"148 419 OFFCURVE",
"158 410 OFFCURVE",
"158 393 CURVE SMOOTH",
"158 390 OFFCURVE",
"158 386 OFFCURVE",
"157 381 CURVE SMOOTH",
"151 359 OFFCURVE",
"135 336 OFFCURVE",
"110 312 CURVE",
"113 308 LINE"
);
}
);
width = 234;
}
);
},
{
glyphname = commaturnedabovecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{188, 274}";
},
{
name = top;
position = "{217, 417}";
}
);
hints = (
{
horizontal = 1;
place = "{-205, 30}";
type = Stem;
},
{
horizontal = 1;
place = "{0, 23}";
type = Stem;
},
{
horizontal = 1;
place = "{310, 36}";
type = Stem;
},
{
horizontal = 1;
place = "{390, 21}";
target = up;
type = BottomGhost;
},
{
place = "{406, -71}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"204 311 OFFCURVE",
"214 318 OFFCURVE",
"220 333 CURVE SMOOTH",
"223 341 OFFCURVE",
"212 348 OFFCURVE",
"212 358 CURVE SMOOTH",
"212 359 OFFCURVE",
"212 360 OFFCURVE",
"212 361 CURVE SMOOTH",
"216 371 OFFCURVE",
"225 382 OFFCURVE",
"240 395 CURVE SMOOTH",
"256 408 OFFCURVE",
"264 414 OFFCURVE",
"264 415 CURVE SMOOTH",
"264 416 OFFCURVE",
"264 417 OFFCURVE",
"262 417 CURVE",
"256 419 OFFCURVE",
"241 412 OFFCURVE",
"221 396 CURVE SMOOTH",
"197 377 OFFCURVE",
"181 358 OFFCURVE",
"172 336 CURVE SMOOTH",
"167 321 OFFCURVE",
"178 311 OFFCURVE",
"191 311 CURVE SMOOTH"
);
}
);
width = 370;
}
);
},
{
color = 3;
glyphname = gravecomb.case.vi;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{139, 274}";
},
{
name = _topviet;
position = "{142, 274}";
},
{
name = top;
position = "{116, 378}";
}
);
hints = (
{
horizontal = 1;
place = "{300, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{402, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"177 307 OFFCURVE",
"178 309 OFFCURVE",
"178 310 CURVE SMOOTH",
"177 312 LINE",
"176 313 LINE",
"96 355 LINE SMOOTH",
"89 358 OFFCURVE",
"81 360 OFFCURVE",
"74 360 CURVE SMOOTH",
"73 360 OFFCURVE",
"71 360 OFFCURVE",
"70 360 CURVE SMOOTH",
"63 358 OFFCURVE",
"55 353 OFFCURVE",
"55 348 CURVE SMOOTH",
"55 347 OFFCURVE",
"55 347 OFFCURVE",
"55 346 CURVE SMOOTH",
"55 344 OFFCURVE",
"56 341 OFFCURVE",
"58 339 CURVE SMOOTH",
"62 335 OFFCURVE",
"81 327 OFFCURVE",
"117 318 CURVE SMOOTH",
"155 308 OFFCURVE",
"175 304 OFFCURVE",
"176 306 CURVE SMOOTH"
);
}
);
width = 221;
}
);
},
{
color = 3;
glyphname = acutecomb.case.vi;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{86, 274}";
},
{
name = top;
position = "{121, 377}";
}
);
hints = (
{
horizontal = 1;
place = "{261, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{364, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"61 304 OFFCURVE",
"81 307 OFFCURVE",
"119 317 CURVE SMOOTH",
"155 326 OFFCURVE",
"174 334 OFFCURVE",
"178 338 CURVE SMOOTH",
"180 341 OFFCURVE",
"181 343 OFFCURVE",
"181 346 CURVE SMOOTH",
"181 353 OFFCURVE",
"171 359 OFFCURVE",
"162 359 CURVE SMOOTH",
"155 359 OFFCURVE",
"147 357 OFFCURVE",
"140 354 CURVE SMOOTH",
"60 312 LINE",
"59 311 LINE",
"58 309 LINE SMOOTH",
"58 308 OFFCURVE",
"59 306 OFFCURVE",
"60 305 CURVE SMOOTH"
);
}
);
width = 221;
}
);
},
{
color = 3;
glyphname = circumflexcomb.case.vi;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{184, 274}";
},
{
name = top;
position = "{295, 311}";
},
{
name = topviet;
position = "{251, 343}";
}
);
hints = (
{
horizontal = 1;
place = "{324, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{350, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{451, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{477, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"259 301 OFFCURVE",
"263 302 OFFCURVE",
"261 305 CURVE SMOOTH",
"229 361 LINE SMOOTH",
"228 362 OFFCURVE",
"225 363 OFFCURVE",
"220 363 CURVE SMOOTH",
"215 363 OFFCURVE",
"208 362 OFFCURVE",
"199 361 CURVE",
"120 306 LINE",
"120 303 OFFCURVE",
"122 302 OFFCURVE",
"127 302 CURVE SMOOTH",
"133 302 OFFCURVE",
"136 304 OFFCURVE",
"140 306 CURVE",
"206 335 LINE",
"246 305 LINE SMOOTH",
"249 303 OFFCURVE",
"251 301 OFFCURVE",
"256 301 CURVE SMOOTH"
);
}
);
width = 370;
}
);
},
{
color = 3;
glyphname = brevecomb.case.vi;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{108, 274}";
},
{
name = top;
position = "{113, 354}";
}
);
hints = (
{
horizontal = 1;
place = "{366, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{461, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"141 302 OFFCURVE",
"160 316 OFFCURVE",
"172 351 CURVE",
"172 352 OFFCURVE",
"173 354 OFFCURVE",
"173 356 CURVE SMOOTH",
"173 361 OFFCURVE",
"172 363 OFFCURVE",
"168 363 CURVE SMOOTH",
"165 363 OFFCURVE",
"160 360 OFFCURVE",
"157 355 CURVE SMOOTH",
"143 333 OFFCURVE",
"136 325 OFFCURVE",
"114 325 CURVE SMOOTH",
"92 325 OFFCURVE",
"86 333 OFFCURVE",
"74 348 CURVE",
"73 350 OFFCURVE",
"71 352 OFFCURVE",
"70 354 CURVE SMOOTH",
"68 359 OFFCURVE",
"66 361 OFFCURVE",
"63 361 CURVE SMOOTH",
"58 361 OFFCURVE",
"55 356 OFFCURVE",
"55 350 CURVE SMOOTH",
"55 345 OFFCURVE",
"56 341 OFFCURVE",
"58 336 CURVE SMOOTH",
"67 315 OFFCURVE",
"76 302 OFFCURVE",
"108 302 CURVE SMOOTH"
);
}
);
width = 184;
}
);
},
{
color = 3;
glyphname = tildecomb.case.vi;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{139, 274}";
},
{
name = _topviet;
position = "{157, 274}";
},
{
name = top;
position = "{139, 353}";
}
);
hints = (
{
horizontal = 1;
place = "{438, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{491, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{437, 21}";
target = up;
type = BottomGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"180 309 OFFCURVE",
"188 311 OFFCURVE",
"193 315 CURVE SMOOTH",
"213 331 OFFCURVE",
"224 342 OFFCURVE",
"224 350 CURVE SMOOTH",
"224 352 OFFCURVE",
"222 353 OFFCURVE",
"220 353 CURVE",
"210 342 OFFCURVE",
"199 336 OFFCURVE",
"188 336 CURVE SMOOTH",
"179 336 OFFCURVE",
"167 338 OFFCURVE",
"152 344 CURVE SMOOTH",
"136 350 OFFCURVE",
"123 353 OFFCURVE",
"115 353 CURVE SMOOTH",
"105 353 OFFCURVE",
"95 351 OFFCURVE",
"87 345 CURVE SMOOTH",
"66 329 OFFCURVE",
"54 320 OFFCURVE",
"54 311 CURVE SMOOTH",
"54 310 OFFCURVE",
"54 310 OFFCURVE",
"55 310 CURVE SMOOTH",
"57 310 OFFCURVE",
"63 313 OFFCURVE",
"71 320 CURVE SMOOTH",
"80 328 OFFCURVE",
"89 331 OFFCURVE",
"97 331 CURVE SMOOTH",
"105 331 OFFCURVE",
"118 327 OFFCURVE",
"133 319 CURVE SMOOTH",
"149 310 OFFCURVE",
"163 309 OFFCURVE",
"173 309 CURVE SMOOTH"
);
}
);
width = 272;
}
);
},
{
color = 3;
glyphname = hookabovecomb.case.vi;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{113, 274}";
},
{
name = _topviet;
position = "{87, 319}";
},
{
name = top;
position = "{125, 440}";
}
);
hints = (
{
horizontal = 1;
place = "{651, -28}";
type = Stem;
},
{
horizontal = 1;
place = "{491, 21}";
target = up;
type = BottomGhost;
},
{
place = "{201, -32}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
paths = (
{
closed = 1;
nodes = (
"143 309 OFFCURVE",
"172 341 OFFCURVE",
"172 376 CURVE SMOOTH",
"172 394 OFFCURVE",
"158 405 OFFCURVE",
"130 405 CURVE SMOOTH",
"108 405 OFFCURVE",
"71 398 OFFCURVE",
"71 380 CURVE SMOOTH",
"71 377 OFFCURVE",
"73 375 OFFCURVE",
"78 374 CURVE SMOOTH",
"80 374 OFFCURVE",
"100 384 OFFCURVE",
"109 384 CURVE SMOOTH",
"130 384 OFFCURVE",
"140 375 OFFCURVE",
"140 358 CURVE SMOOTH",
"140 344 OFFCURVE",
"133 336 OFFCURVE",
"109 313 CURVE",
"112 309 LINE"
);
}
);
width = 234;
}
);
},
{
glyphname = brevecomb_acutecomb;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 27, 80}";
}
);
hints = (
{
horizontal = 1;
place = "{366, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{461, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{261, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{364, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
},
{
glyphname = brevecomb_gravecomb;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -26, 80}";
}
);
hints = (
{
horizontal = 1;
place = "{484, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{579, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{558.953, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{650.057, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{343, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{438, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
},
{
glyphname = brevecomb_hookabovecomb;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 0, 80}";
}
);
hints = (
{
horizontal = 1;
place = "{366, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{461, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{691.354, -23.628}";
type = Stem;
},
{
horizontal = 1;
place = "{556.336, 21}";
target = up;
type = BottomGhost;
},
{
place = "{188.616, -27.004}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
},
{
glyphname = brevecomb_tildecomb;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -26, 80}";
}
);
hints = (
{
horizontal = 1;
place = "{503, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{598, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{609, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{662, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{608, 21}";
target = up;
type = BottomGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
},
{
glyphname = circumflexcomb_acutecomb;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 230, 37}";
}
);
hints = (
{
horizontal = 1;
place = "{461, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{487, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{588, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{614, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{614, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{717, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{324, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{350, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{451, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{477, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{324, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{350, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{451, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{477, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{370, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{473, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
},
{
glyphname = circumflexcomb_gravecomb;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 129, 106}";
}
);
hints = (
{
horizontal = 1;
place = "{604, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{706, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{315, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{341, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{442, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{468, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
},
{
glyphname = circumflexcomb_hookabovecomb;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 203, 37}";
}
);
hints = (
{
horizontal = 1;
place = "{684, -28}";
type = Stem;
},
{
horizontal = 1;
place = "{524, 21}";
target = up;
type = BottomGhost;
},
{
place = "{343, -32}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
},
{
glyphname = circumflexcomb_tildecomb;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 114, 106}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
},
{
color = 3;
glyphname = brevecomb_acutecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = brevecomb.case.vi;
},
{
name = acutecomb.case.vi;
transform = "{1, 0, 0, 1, 27, 80}";
}
);
hints = (
{
horizontal = 1;
place = "{366, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{461, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{261, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{364, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
},
{
color = 3;
glyphname = brevecomb_gravecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = brevecomb.case.vi;
},
{
name = gravecomb.case.vi;
transform = "{1, 0, 0, 1, -26, 80}";
}
);
hints = (
{
horizontal = 1;
place = "{484, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{579, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{558.953, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{650.057, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{343, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{438, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
},
{
color = 3;
glyphname = brevecomb_hookabovecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = brevecomb.case.vi;
},
{
name = hookabovecomb.case.vi;
transform = "{1, 0, 0, 1, 0, 80}";
}
);
hints = (
{
horizontal = 1;
place = "{366, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{461, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{691.354, -23.628}";
type = Stem;
},
{
horizontal = 1;
place = "{556.336, 21}";
target = up;
type = BottomGhost;
},
{
place = "{188.616, -27.004}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
},
{
color = 3;
glyphname = brevecomb_tildecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = brevecomb.case.vi;
},
{
name = tildecomb.case.vi;
transform = "{1, 0, 0, 1, -26, 80}";
}
);
hints = (
{
horizontal = 1;
place = "{503, 22}";
type = Stem;
},
{
horizontal = 1;
place = "{598, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{609, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{662, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{608, 21}";
target = up;
type = BottomGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 184;
}
);
},
{
color = 3;
glyphname = circumflexcomb_acutecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = circumflexcomb.case.vi;
},
{
name = acutecomb.case.vi;
transform = "{1, 0, 0, 1, 209, 37}";
}
);
hints = (
{
horizontal = 1;
place = "{461, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{487, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{588, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{614, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{614, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{717, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{324, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{350, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{451, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{477, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{324, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{350, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{451, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{477, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{370, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{473, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
},
{
color = 3;
glyphname = circumflexcomb_gravecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = circumflexcomb.case.vi;
},
{
anchor = topviet;
name = gravecomb.case.vi;
transform = "{1, 0, 0, 1, 109, 69}";
}
);
hints = (
{
horizontal = 1;
place = "{604, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{706, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{315, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{341, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{442, -20}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = "{468, -20}";
target = down;
type = TopGhost;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
},
{
color = 3;
glyphname = circumflexcomb_hookabovecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = circumflexcomb.case.vi;
},
{
name = hookabovecomb.case.vi;
transform = "{1, 0, 0, 1, 164, 24}";
}
);
hints = (
{
horizontal = 1;
place = "{684, -28}";
type = Stem;
},
{
horizontal = 1;
place = "{524, 21}";
target = up;
type = BottomGhost;
},
{
place = "{343, -32}";
type = Stem;
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
},
{
color = 3;
glyphname = circumflexcomb_tildecomb.case;
lastChange = "2021-05-18 10:18:34 +0000";
layers = (
{
components = (
{
name = circumflexcomb.case.vi;
},
{
anchor = topviet;
name = tildecomb.case.vi;
transform = "{1, 0, 0, 1, 94, 69}";
}
);
layerId = "0B90A97B-D71D-49C5-8F31-ED3EF6E28084";
width = 370;
}
);
}
);
instances = (
{
interpolationWeight = 400;
instanceInterpolations = {
"0B90A97B-D71D-49C5-8F31-ED3EF6E28084" = 1;
};
name = Regular;
}
);
kerning = {
"0B90A97B-D71D-49C5-8F31-ED3EF6E28084" = {
G = {
H = -9;
};
L = {
a = -22;
e = 23;
i = 50;
u = 27;
};
O = {
c = 7;
d = -17;
e = 3;
f = 3;
m = 10;
p = 7;
r = 10;
t = 30;
u = -7;
};
P = {
a = -49;
e = -22;
h = 40;
l = 29;
o = -40;
s = -13;
u = -36;
y = -36;
};
T = {
w = -35;
};
comma = {
eight = 58;
five = 21;
four = 11;
seven = 11;
six = 16;
three = 21;
two = 32;
};
eight = {
comma = -117;
five = -13;
four = -30;
nine = 17;
one = -11;
period = -111;
seven = 30;
six = -10;
three = -13;
two = -60;
};
f = {
l = 52;
};
five = {
comma = -69;
nine = 10;
period = -80;
seven = 27;
two = -28;
};
four = {
comma = -90;
eight = -10;
period = -96;
three = -20;
two = -57;
};
i = {
v = 5;
};
k = {
e = 13;
f = 22;
g = 22;
h = 22;
i = 22;
j = 22;
k = 26;
l = 13;
m = 22;
n = 9;
p = 26;
s = 30;
};
nine = {
comma = -106;
eight = -17;
five = -17;
period = -90;
six = -10;
three = -17;
two = -43;
};
one = {
comma = -80;
eight = 7;
nine = 43;
period = -117;
seven = 36;
two = -25;
};
period = {
eight = 48;
five = 27;
four = -5;
one = 5;
seven = 37;
six = 21;
three = 42;
two = 58;
zero = 37;
};
r = {
i = 28;
};
s = {
b = -39;
};
seven = {
comma = -165;
eight = -37;
five = -43;
four = -60;
one = -28;
period = -159;
six = -37;
three = -37;
two = -75;
};
six = {
comma = -53;
eight = 23;
four = 7;
nine = 17;
period = -27;
three = -3;
two = -21;
zero = 17;
};
space = {
D = -63;
};
t = {
t = 23;
};
three = {
comma = -53;
eight = 33;
five = 17;
four = 33;
nine = 53;
one = 11;
period = -37;
seven = 46;
six = 33;
two = 7;
zero = 43;
};
two = {
comma = -53;
eight = 25;
five = 14;
nine = 39;
period = -27;
seven = 28;
six = 18;
three = 18;
zero = 28;
};
zero = {
comma = -80;
five = -10;
one = -21;
period = -74;
three = -20;
};
};
};
manufacturer = "Robert E. Leuschke";
manufacturerURL = "http://www.typesetit.com";
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 10;
}
